Metadata(name='KITTI_MOTS_train', thing_classes=['None', 'Car', 'Pedestrian'])
Loading sequence 0000
Loading sequence 0001
Loading sequence 0003
Loading sequence 0004
Loading sequence 0005
Loading sequence 0009
Loading sequence 0011
Loading sequence 0012
Loading sequence 0015
Loading sequence 0017
Loading sequence 0019
Loading sequence 0020
0000
0001
0003
0004
0005
0009
0011
0012
0015
0017
0019
0020
Loaded 5007 images!
[32m[03/15 12:43:08 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=12, bias=True)
    )
  )
)
Loading sequence 0000
Loading sequence 0001
Loading sequence 0003
Loading sequence 0004
Loading sequence 0005
Loading sequence 0009
Loading sequence 0011
Loading sequence 0012
Loading sequence 0015
Loading sequence 0017
Loading sequence 0019
Loading sequence 0020
0000
0001
0003
0004
0005
0009
0011
0012
0015
0017
0019
0020
Loaded 5007 images!
[32m[03/15 12:44:07 d2.data.build]: [0mRemoved 487 images with no usable annotations. 4520 images left.
[32m[03/15 12:44:07 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    None    | 0            |    Car     | 18831        | Pedestrian | 8068         |
|            |              |            |              |            |              |
|   total    | 26899        |            |              |            |              |[0m
[32m[03/15 12:44:07 d2.data.common]: [0mSerializing 4520 elements to byte tensors and concatenating them all ...
[32m[03/15 12:44:08 d2.data.common]: [0mSerialized dataset takes 3.77 MiB
[32m[03/15 12:44:08 d2.data.detection_utils]: [0mTransformGens used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[03/15 12:44:08 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[03/15 12:44:09 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[03/15 12:44:15 d2.utils.events]: [0m eta: 0:22:33  iter: 19  total_loss: 2.238  loss_cls: 1.509  loss_box_reg: 0.671  loss_rpn_cls: 0.050  loss_rpn_loc: 0.021  time: 0.2718  data_time: 0.0157  lr: 0.000005  max_mem: 2339M
[32m[03/15 12:44:21 d2.utils.events]: [0m eta: 0:22:53  iter: 39  total_loss: 2.254  loss_cls: 1.418  loss_box_reg: 0.758  loss_rpn_cls: 0.053  loss_rpn_loc: 0.024  time: 0.2785  data_time: 0.0045  lr: 0.000010  max_mem: 2339M
[32m[03/15 12:44:26 d2.utils.events]: [0m eta: 0:23:12  iter: 59  total_loss: 2.105  loss_cls: 1.256  loss_box_reg: 0.770  loss_rpn_cls: 0.063  loss_rpn_loc: 0.025  time: 0.2806  data_time: 0.0047  lr: 0.000015  max_mem: 2339M
[32m[03/15 12:44:32 d2.utils.events]: [0m eta: 0:23:04  iter: 79  total_loss: 1.829  loss_cls: 1.048  loss_box_reg: 0.644  loss_rpn_cls: 0.051  loss_rpn_loc: 0.024  time: 0.2807  data_time: 0.0049  lr: 0.000020  max_mem: 2339M
[32m[03/15 12:44:38 d2.utils.events]: [0m eta: 0:22:58  iter: 99  total_loss: 1.737  loss_cls: 0.866  loss_box_reg: 0.670  loss_rpn_cls: 0.060  loss_rpn_loc: 0.024  time: 0.2812  data_time: 0.0052  lr: 0.000025  max_mem: 2339M
[32m[03/15 12:44:44 d2.utils.events]: [0m eta: 0:22:55  iter: 119  total_loss: 1.617  loss_cls: 0.709  loss_box_reg: 0.764  loss_rpn_cls: 0.059  loss_rpn_loc: 0.030  time: 0.2822  data_time: 0.0053  lr: 0.000030  max_mem: 2339M
[32m[03/15 12:44:49 d2.utils.events]: [0m eta: 0:22:49  iter: 139  total_loss: 1.460  loss_cls: 0.623  loss_box_reg: 0.741  loss_rpn_cls: 0.052  loss_rpn_loc: 0.029  time: 0.2821  data_time: 0.0045  lr: 0.000035  max_mem: 2339M
[32m[03/15 12:44:55 d2.utils.events]: [0m eta: 0:22:43  iter: 159  total_loss: 1.345  loss_cls: 0.541  loss_box_reg: 0.726  loss_rpn_cls: 0.040  loss_rpn_loc: 0.029  time: 0.2820  data_time: 0.0043  lr: 0.000040  max_mem: 2339M
[32m[03/15 12:45:00 d2.utils.events]: [0m eta: 0:22:36  iter: 179  total_loss: 1.332  loss_cls: 0.511  loss_box_reg: 0.793  loss_rpn_cls: 0.039  loss_rpn_loc: 0.031  time: 0.2820  data_time: 0.0047  lr: 0.000045  max_mem: 2339M
[32m[03/15 12:45:06 d2.utils.events]: [0m eta: 0:22:32  iter: 199  total_loss: 1.260  loss_cls: 0.456  loss_box_reg: 0.713  loss_rpn_cls: 0.033  loss_rpn_loc: 0.025  time: 0.2827  data_time: 0.0044  lr: 0.000050  max_mem: 2339M
[32m[03/15 12:45:12 d2.utils.events]: [0m eta: 0:22:27  iter: 219  total_loss: 1.238  loss_cls: 0.447  loss_box_reg: 0.664  loss_rpn_cls: 0.042  loss_rpn_loc: 0.023  time: 0.2836  data_time: 0.0052  lr: 0.000055  max_mem: 2339M
[32m[03/15 12:45:18 d2.utils.events]: [0m eta: 0:22:23  iter: 239  total_loss: 1.259  loss_cls: 0.390  loss_box_reg: 0.752  loss_rpn_cls: 0.030  loss_rpn_loc: 0.024  time: 0.2844  data_time: 0.0041  lr: 0.000060  max_mem: 2339M
[32m[03/15 12:45:24 d2.utils.events]: [0m eta: 0:22:19  iter: 259  total_loss: 1.106  loss_cls: 0.328  loss_box_reg: 0.676  loss_rpn_cls: 0.033  loss_rpn_loc: 0.025  time: 0.2847  data_time: 0.0042  lr: 0.000065  max_mem: 2339M
[32m[03/15 12:45:30 d2.utils.events]: [0m eta: 0:22:14  iter: 279  total_loss: 0.924  loss_cls: 0.315  loss_box_reg: 0.571  loss_rpn_cls: 0.030  loss_rpn_loc: 0.017  time: 0.2849  data_time: 0.0041  lr: 0.000070  max_mem: 2339M
[32m[03/15 12:45:35 d2.utils.events]: [0m eta: 0:22:09  iter: 299  total_loss: 0.997  loss_cls: 0.314  loss_box_reg: 0.563  loss_rpn_cls: 0.024  loss_rpn_loc: 0.022  time: 0.2850  data_time: 0.0041  lr: 0.000075  max_mem: 2339M
[32m[03/15 12:45:41 d2.utils.events]: [0m eta: 0:22:04  iter: 319  total_loss: 1.014  loss_cls: 0.275  loss_box_reg: 0.656  loss_rpn_cls: 0.028  loss_rpn_loc: 0.030  time: 0.2851  data_time: 0.0041  lr: 0.000080  max_mem: 2339M
[32m[03/15 12:45:47 d2.utils.events]: [0m eta: 0:22:00  iter: 339  total_loss: 0.936  loss_cls: 0.255  loss_box_reg: 0.616  loss_rpn_cls: 0.021  loss_rpn_loc: 0.030  time: 0.2855  data_time: 0.0042  lr: 0.000085  max_mem: 2339M
[32m[03/15 12:45:53 d2.utils.events]: [0m eta: 0:21:55  iter: 359  total_loss: 0.885  loss_cls: 0.227  loss_box_reg: 0.579  loss_rpn_cls: 0.030  loss_rpn_loc: 0.028  time: 0.2858  data_time: 0.0046  lr: 0.000090  max_mem: 2339M
[32m[03/15 12:45:59 d2.utils.events]: [0m eta: 0:21:51  iter: 379  total_loss: 0.734  loss_cls: 0.206  loss_box_reg: 0.465  loss_rpn_cls: 0.027  loss_rpn_loc: 0.019  time: 0.2861  data_time: 0.0047  lr: 0.000095  max_mem: 2339M
[32m[03/15 12:46:04 d2.utils.events]: [0m eta: 0:21:46  iter: 399  total_loss: 0.728  loss_cls: 0.207  loss_box_reg: 0.480  loss_rpn_cls: 0.025  loss_rpn_loc: 0.023  time: 0.2864  data_time: 0.0048  lr: 0.000100  max_mem: 2339M
[32m[03/15 12:46:10 d2.utils.events]: [0m eta: 0:21:42  iter: 419  total_loss: 0.698  loss_cls: 0.180  loss_box_reg: 0.462  loss_rpn_cls: 0.017  loss_rpn_loc: 0.026  time: 0.2869  data_time: 0.0048  lr: 0.000105  max_mem: 2339M
[32m[03/15 12:46:16 d2.utils.events]: [0m eta: 0:21:37  iter: 439  total_loss: 0.785  loss_cls: 0.246  loss_box_reg: 0.463  loss_rpn_cls: 0.028  loss_rpn_loc: 0.028  time: 0.2872  data_time: 0.0043  lr: 0.000110  max_mem: 2339M
[32m[03/15 12:46:22 d2.utils.events]: [0m eta: 0:21:32  iter: 459  total_loss: 0.625  loss_cls: 0.189  loss_box_reg: 0.360  loss_rpn_cls: 0.020  loss_rpn_loc: 0.025  time: 0.2874  data_time: 0.0042  lr: 0.000115  max_mem: 2339M
[32m[03/15 12:46:28 d2.utils.events]: [0m eta: 0:21:27  iter: 479  total_loss: 0.642  loss_cls: 0.210  loss_box_reg: 0.367  loss_rpn_cls: 0.023  loss_rpn_loc: 0.026  time: 0.2875  data_time: 0.0042  lr: 0.000120  max_mem: 2339M
[32m[03/15 12:46:34 d2.utils.events]: [0m eta: 0:21:21  iter: 499  total_loss: 0.476  loss_cls: 0.149  loss_box_reg: 0.282  loss_rpn_cls: 0.022  loss_rpn_loc: 0.011  time: 0.2876  data_time: 0.0050  lr: 0.000125  max_mem: 2339M
[32m[03/15 12:46:40 d2.utils.events]: [0m eta: 0:21:16  iter: 519  total_loss: 0.539  loss_cls: 0.182  loss_box_reg: 0.327  loss_rpn_cls: 0.018  loss_rpn_loc: 0.017  time: 0.2879  data_time: 0.0041  lr: 0.000130  max_mem: 2339M
[32m[03/15 12:46:46 d2.utils.events]: [0m eta: 0:21:12  iter: 539  total_loss: 0.604  loss_cls: 0.195  loss_box_reg: 0.343  loss_rpn_cls: 0.028  loss_rpn_loc: 0.019  time: 0.2883  data_time: 0.0054  lr: 0.000135  max_mem: 2339M
[32m[03/15 12:46:52 d2.utils.events]: [0m eta: 0:21:07  iter: 559  total_loss: 0.695  loss_cls: 0.219  loss_box_reg: 0.382  loss_rpn_cls: 0.029  loss_rpn_loc: 0.043  time: 0.2885  data_time: 0.0044  lr: 0.000140  max_mem: 2339M
[32m[03/15 12:46:57 d2.utils.events]: [0m eta: 0:21:02  iter: 579  total_loss: 0.579  loss_cls: 0.164  loss_box_reg: 0.320  loss_rpn_cls: 0.022  loss_rpn_loc: 0.031  time: 0.2887  data_time: 0.0044  lr: 0.000145  max_mem: 2339M
[32m[03/15 12:47:03 d2.utils.events]: [0m eta: 0:20:57  iter: 599  total_loss: 0.464  loss_cls: 0.130  loss_box_reg: 0.306  loss_rpn_cls: 0.026  loss_rpn_loc: 0.013  time: 0.2888  data_time: 0.0043  lr: 0.000150  max_mem: 2339M
[32m[03/15 12:47:09 d2.utils.events]: [0m eta: 0:20:51  iter: 619  total_loss: 0.510  loss_cls: 0.139  loss_box_reg: 0.276  loss_rpn_cls: 0.024  loss_rpn_loc: 0.027  time: 0.2887  data_time: 0.0047  lr: 0.000155  max_mem: 2339M
[32m[03/15 12:47:15 d2.utils.events]: [0m eta: 0:20:46  iter: 639  total_loss: 0.450  loss_cls: 0.131  loss_box_reg: 0.260  loss_rpn_cls: 0.016  loss_rpn_loc: 0.018  time: 0.2888  data_time: 0.0042  lr: 0.000160  max_mem: 2339M
[32m[03/15 12:47:21 d2.utils.events]: [0m eta: 0:20:41  iter: 659  total_loss: 0.534  loss_cls: 0.154  loss_box_reg: 0.306  loss_rpn_cls: 0.022  loss_rpn_loc: 0.021  time: 0.2889  data_time: 0.0043  lr: 0.000165  max_mem: 2339M
[32m[03/15 12:47:27 d2.utils.events]: [0m eta: 0:20:37  iter: 679  total_loss: 0.578  loss_cls: 0.174  loss_box_reg: 0.358  loss_rpn_cls: 0.020  loss_rpn_loc: 0.030  time: 0.2890  data_time: 0.0045  lr: 0.000170  max_mem: 2339M
[32m[03/15 12:47:33 d2.utils.events]: [0m eta: 0:20:32  iter: 699  total_loss: 0.464  loss_cls: 0.139  loss_box_reg: 0.290  loss_rpn_cls: 0.015  loss_rpn_loc: 0.017  time: 0.2893  data_time: 0.0050  lr: 0.000175  max_mem: 2339M
[32m[03/15 12:47:38 d2.utils.events]: [0m eta: 0:20:26  iter: 719  total_loss: 0.538  loss_cls: 0.161  loss_box_reg: 0.334  loss_rpn_cls: 0.018  loss_rpn_loc: 0.028  time: 0.2893  data_time: 0.0046  lr: 0.000180  max_mem: 2339M
[32m[03/15 12:47:44 d2.utils.events]: [0m eta: 0:20:22  iter: 739  total_loss: 0.519  loss_cls: 0.157  loss_box_reg: 0.277  loss_rpn_cls: 0.023  loss_rpn_loc: 0.025  time: 0.2896  data_time: 0.0048  lr: 0.000185  max_mem: 2339M
[32m[03/15 12:47:50 d2.utils.events]: [0m eta: 0:20:16  iter: 759  total_loss: 0.499  loss_cls: 0.145  loss_box_reg: 0.264  loss_rpn_cls: 0.027  loss_rpn_loc: 0.029  time: 0.2896  data_time: 0.0046  lr: 0.000190  max_mem: 2339M
[32m[03/15 12:47:56 d2.utils.events]: [0m eta: 0:20:10  iter: 779  total_loss: 0.458  loss_cls: 0.135  loss_box_reg: 0.264  loss_rpn_cls: 0.017  loss_rpn_loc: 0.020  time: 0.2895  data_time: 0.0039  lr: 0.000195  max_mem: 2339M
[32m[03/15 12:48:02 d2.utils.events]: [0m eta: 0:20:05  iter: 799  total_loss: 0.541  loss_cls: 0.144  loss_box_reg: 0.289  loss_rpn_cls: 0.026  loss_rpn_loc: 0.035  time: 0.2895  data_time: 0.0042  lr: 0.000200  max_mem: 2339M
[32m[03/15 12:48:08 d2.utils.events]: [0m eta: 0:19:59  iter: 819  total_loss: 0.447  loss_cls: 0.134  loss_box_reg: 0.213  loss_rpn_cls: 0.024  loss_rpn_loc: 0.025  time: 0.2895  data_time: 0.0042  lr: 0.000205  max_mem: 2339M
[32m[03/15 12:48:14 d2.utils.events]: [0m eta: 0:19:54  iter: 839  total_loss: 0.413  loss_cls: 0.123  loss_box_reg: 0.242  loss_rpn_cls: 0.022  loss_rpn_loc: 0.022  time: 0.2897  data_time: 0.0047  lr: 0.000210  max_mem: 2339M
[32m[03/15 12:48:19 d2.utils.events]: [0m eta: 0:19:48  iter: 859  total_loss: 0.520  loss_cls: 0.130  loss_box_reg: 0.284  loss_rpn_cls: 0.023  loss_rpn_loc: 0.022  time: 0.2897  data_time: 0.0046  lr: 0.000215  max_mem: 2339M
[32m[03/15 12:48:25 d2.utils.events]: [0m eta: 0:19:42  iter: 879  total_loss: 0.476  loss_cls: 0.136  loss_box_reg: 0.297  loss_rpn_cls: 0.022  loss_rpn_loc: 0.021  time: 0.2898  data_time: 0.0039  lr: 0.000220  max_mem: 2339M
[32m[03/15 12:48:31 d2.utils.events]: [0m eta: 0:19:37  iter: 899  total_loss: 0.406  loss_cls: 0.115  loss_box_reg: 0.226  loss_rpn_cls: 0.017  loss_rpn_loc: 0.019  time: 0.2898  data_time: 0.0041  lr: 0.000225  max_mem: 2339M
[32m[03/15 12:48:37 d2.utils.events]: [0m eta: 0:19:31  iter: 919  total_loss: 0.501  loss_cls: 0.123  loss_box_reg: 0.274  loss_rpn_cls: 0.033  loss_rpn_loc: 0.031  time: 0.2898  data_time: 0.0048  lr: 0.000230  max_mem: 2339M
[32m[03/15 12:48:43 d2.utils.events]: [0m eta: 0:19:26  iter: 939  total_loss: 0.449  loss_cls: 0.133  loss_box_reg: 0.257  loss_rpn_cls: 0.016  loss_rpn_loc: 0.020  time: 0.2899  data_time: 0.0042  lr: 0.000235  max_mem: 2339M
[32m[03/15 12:48:49 d2.utils.events]: [0m eta: 0:19:21  iter: 959  total_loss: 0.399  loss_cls: 0.117  loss_box_reg: 0.216  loss_rpn_cls: 0.016  loss_rpn_loc: 0.019  time: 0.2900  data_time: 0.0044  lr: 0.000240  max_mem: 2339M
[32m[03/15 12:48:54 d2.utils.events]: [0m eta: 0:19:15  iter: 979  total_loss: 0.376  loss_cls: 0.114  loss_box_reg: 0.220  loss_rpn_cls: 0.016  loss_rpn_loc: 0.023  time: 0.2900  data_time: 0.0043  lr: 0.000245  max_mem: 2339M
[32m[03/15 12:49:00 d2.utils.events]: [0m eta: 0:19:09  iter: 999  total_loss: 0.462  loss_cls: 0.127  loss_box_reg: 0.272  loss_rpn_cls: 0.017  loss_rpn_loc: 0.027  time: 0.2900  data_time: 0.0045  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:49:06 d2.utils.events]: [0m eta: 0:19:05  iter: 1019  total_loss: 0.371  loss_cls: 0.122  loss_box_reg: 0.223  loss_rpn_cls: 0.017  loss_rpn_loc: 0.015  time: 0.2900  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:49:12 d2.utils.events]: [0m eta: 0:19:00  iter: 1039  total_loss: 0.453  loss_cls: 0.132  loss_box_reg: 0.246  loss_rpn_cls: 0.019  loss_rpn_loc: 0.025  time: 0.2902  data_time: 0.0050  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:49:18 d2.utils.events]: [0m eta: 0:18:55  iter: 1059  total_loss: 0.389  loss_cls: 0.121  loss_box_reg: 0.204  loss_rpn_cls: 0.017  loss_rpn_loc: 0.021  time: 0.2902  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:49:24 d2.utils.events]: [0m eta: 0:18:50  iter: 1079  total_loss: 0.392  loss_cls: 0.117  loss_box_reg: 0.261  loss_rpn_cls: 0.012  loss_rpn_loc: 0.016  time: 0.2901  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:49:30 d2.utils.events]: [0m eta: 0:18:45  iter: 1099  total_loss: 0.446  loss_cls: 0.122  loss_box_reg: 0.269  loss_rpn_cls: 0.024  loss_rpn_loc: 0.027  time: 0.2901  data_time: 0.0045  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:49:35 d2.utils.events]: [0m eta: 0:18:39  iter: 1119  total_loss: 0.464  loss_cls: 0.149  loss_box_reg: 0.257  loss_rpn_cls: 0.027  loss_rpn_loc: 0.025  time: 0.2901  data_time: 0.0046  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:49:41 d2.utils.events]: [0m eta: 0:18:34  iter: 1139  total_loss: 0.425  loss_cls: 0.119  loss_box_reg: 0.245  loss_rpn_cls: 0.015  loss_rpn_loc: 0.020  time: 0.2901  data_time: 0.0047  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:49:47 d2.utils.events]: [0m eta: 0:18:30  iter: 1159  total_loss: 0.477  loss_cls: 0.158  loss_box_reg: 0.272  loss_rpn_cls: 0.024  loss_rpn_loc: 0.036  time: 0.2902  data_time: 0.0048  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:49:53 d2.utils.events]: [0m eta: 0:18:25  iter: 1179  total_loss: 0.371  loss_cls: 0.111  loss_box_reg: 0.219  loss_rpn_cls: 0.016  loss_rpn_loc: 0.024  time: 0.2902  data_time: 0.0045  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:49:59 d2.utils.events]: [0m eta: 0:18:19  iter: 1199  total_loss: 0.426  loss_cls: 0.137  loss_box_reg: 0.267  loss_rpn_cls: 0.013  loss_rpn_loc: 0.026  time: 0.2903  data_time: 0.0048  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:50:05 d2.utils.events]: [0m eta: 0:18:14  iter: 1219  total_loss: 0.410  loss_cls: 0.143  loss_box_reg: 0.245  loss_rpn_cls: 0.014  loss_rpn_loc: 0.026  time: 0.2904  data_time: 0.0055  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:50:11 d2.utils.events]: [0m eta: 0:18:08  iter: 1239  total_loss: 0.429  loss_cls: 0.133  loss_box_reg: 0.265  loss_rpn_cls: 0.012  loss_rpn_loc: 0.022  time: 0.2904  data_time: 0.0047  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:50:16 d2.utils.events]: [0m eta: 0:18:03  iter: 1259  total_loss: 0.489  loss_cls: 0.157  loss_box_reg: 0.257  loss_rpn_cls: 0.019  loss_rpn_loc: 0.031  time: 0.2904  data_time: 0.0045  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:50:22 d2.utils.events]: [0m eta: 0:17:58  iter: 1279  total_loss: 0.419  loss_cls: 0.110  loss_box_reg: 0.254  loss_rpn_cls: 0.015  loss_rpn_loc: 0.028  time: 0.2904  data_time: 0.0049  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:50:28 d2.utils.events]: [0m eta: 0:17:52  iter: 1299  total_loss: 0.448  loss_cls: 0.134  loss_box_reg: 0.254  loss_rpn_cls: 0.021  loss_rpn_loc: 0.024  time: 0.2904  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:50:34 d2.utils.events]: [0m eta: 0:17:47  iter: 1319  total_loss: 0.519  loss_cls: 0.150  loss_box_reg: 0.299  loss_rpn_cls: 0.020  loss_rpn_loc: 0.038  time: 0.2905  data_time: 0.0048  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:50:40 d2.utils.events]: [0m eta: 0:17:41  iter: 1339  total_loss: 0.338  loss_cls: 0.099  loss_box_reg: 0.214  loss_rpn_cls: 0.015  loss_rpn_loc: 0.018  time: 0.2905  data_time: 0.0047  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:50:46 d2.utils.events]: [0m eta: 0:17:36  iter: 1359  total_loss: 0.385  loss_cls: 0.116  loss_box_reg: 0.263  loss_rpn_cls: 0.012  loss_rpn_loc: 0.026  time: 0.2905  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:50:52 d2.utils.events]: [0m eta: 0:17:30  iter: 1379  total_loss: 0.343  loss_cls: 0.104  loss_box_reg: 0.230  loss_rpn_cls: 0.011  loss_rpn_loc: 0.013  time: 0.2906  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:50:57 d2.utils.events]: [0m eta: 0:17:24  iter: 1399  total_loss: 0.429  loss_cls: 0.125  loss_box_reg: 0.252  loss_rpn_cls: 0.015  loss_rpn_loc: 0.020  time: 0.2906  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:51:03 d2.utils.events]: [0m eta: 0:17:17  iter: 1419  total_loss: 0.452  loss_cls: 0.125  loss_box_reg: 0.256  loss_rpn_cls: 0.018  loss_rpn_loc: 0.024  time: 0.2905  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:51:09 d2.utils.events]: [0m eta: 0:17:12  iter: 1439  total_loss: 0.468  loss_cls: 0.130  loss_box_reg: 0.227  loss_rpn_cls: 0.017  loss_rpn_loc: 0.028  time: 0.2906  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:51:15 d2.utils.events]: [0m eta: 0:17:06  iter: 1459  total_loss: 0.380  loss_cls: 0.126  loss_box_reg: 0.226  loss_rpn_cls: 0.014  loss_rpn_loc: 0.027  time: 0.2906  data_time: 0.0045  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:51:21 d2.utils.events]: [0m eta: 0:17:00  iter: 1479  total_loss: 0.426  loss_cls: 0.129  loss_box_reg: 0.260  loss_rpn_cls: 0.015  loss_rpn_loc: 0.033  time: 0.2907  data_time: 0.0056  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:51:27 d2.utils.events]: [0m eta: 0:16:55  iter: 1499  total_loss: 0.425  loss_cls: 0.117  loss_box_reg: 0.246  loss_rpn_cls: 0.012  loss_rpn_loc: 0.025  time: 0.2908  data_time: 0.0053  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:51:33 d2.utils.events]: [0m eta: 0:16:49  iter: 1519  total_loss: 0.408  loss_cls: 0.115  loss_box_reg: 0.238  loss_rpn_cls: 0.013  loss_rpn_loc: 0.021  time: 0.2909  data_time: 0.0045  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:51:39 d2.utils.events]: [0m eta: 0:16:43  iter: 1539  total_loss: 0.421  loss_cls: 0.132  loss_box_reg: 0.245  loss_rpn_cls: 0.017  loss_rpn_loc: 0.022  time: 0.2909  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:51:45 d2.utils.events]: [0m eta: 0:16:37  iter: 1559  total_loss: 0.410  loss_cls: 0.116  loss_box_reg: 0.243  loss_rpn_cls: 0.012  loss_rpn_loc: 0.024  time: 0.2909  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:51:50 d2.utils.events]: [0m eta: 0:16:31  iter: 1579  total_loss: 0.448  loss_cls: 0.133  loss_box_reg: 0.276  loss_rpn_cls: 0.017  loss_rpn_loc: 0.029  time: 0.2910  data_time: 0.0047  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:51:56 d2.utils.events]: [0m eta: 0:16:25  iter: 1599  total_loss: 0.363  loss_cls: 0.106  loss_box_reg: 0.222  loss_rpn_cls: 0.013  loss_rpn_loc: 0.023  time: 0.2910  data_time: 0.0046  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:52:02 d2.utils.events]: [0m eta: 0:16:20  iter: 1619  total_loss: 0.463  loss_cls: 0.146  loss_box_reg: 0.255  loss_rpn_cls: 0.020  loss_rpn_loc: 0.028  time: 0.2910  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:52:08 d2.utils.events]: [0m eta: 0:16:14  iter: 1639  total_loss: 0.376  loss_cls: 0.124  loss_box_reg: 0.245  loss_rpn_cls: 0.012  loss_rpn_loc: 0.022  time: 0.2909  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:52:14 d2.utils.events]: [0m eta: 0:16:08  iter: 1659  total_loss: 0.378  loss_cls: 0.130  loss_box_reg: 0.220  loss_rpn_cls: 0.011  loss_rpn_loc: 0.017  time: 0.2909  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:52:20 d2.utils.events]: [0m eta: 0:16:02  iter: 1679  total_loss: 0.384  loss_cls: 0.121  loss_box_reg: 0.234  loss_rpn_cls: 0.013  loss_rpn_loc: 0.025  time: 0.2909  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:52:25 d2.utils.events]: [0m eta: 0:15:56  iter: 1699  total_loss: 0.314  loss_cls: 0.093  loss_box_reg: 0.195  loss_rpn_cls: 0.009  loss_rpn_loc: 0.015  time: 0.2909  data_time: 0.0047  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:52:31 d2.utils.events]: [0m eta: 0:15:50  iter: 1719  total_loss: 0.430  loss_cls: 0.115  loss_box_reg: 0.253  loss_rpn_cls: 0.011  loss_rpn_loc: 0.022  time: 0.2909  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:52:37 d2.utils.events]: [0m eta: 0:15:44  iter: 1739  total_loss: 0.345  loss_cls: 0.106  loss_box_reg: 0.208  loss_rpn_cls: 0.017  loss_rpn_loc: 0.016  time: 0.2908  data_time: 0.0053  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:52:43 d2.utils.events]: [0m eta: 0:15:39  iter: 1759  total_loss: 0.362  loss_cls: 0.119  loss_box_reg: 0.222  loss_rpn_cls: 0.009  loss_rpn_loc: 0.016  time: 0.2910  data_time: 0.0050  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:52:49 d2.utils.events]: [0m eta: 0:15:33  iter: 1779  total_loss: 0.344  loss_cls: 0.088  loss_box_reg: 0.221  loss_rpn_cls: 0.007  loss_rpn_loc: 0.017  time: 0.2910  data_time: 0.0051  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:52:55 d2.utils.events]: [0m eta: 0:15:27  iter: 1799  total_loss: 0.487  loss_cls: 0.148  loss_box_reg: 0.279  loss_rpn_cls: 0.012  loss_rpn_loc: 0.025  time: 0.2911  data_time: 0.0061  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:53:01 d2.utils.events]: [0m eta: 0:15:22  iter: 1819  total_loss: 0.441  loss_cls: 0.138  loss_box_reg: 0.253  loss_rpn_cls: 0.016  loss_rpn_loc: 0.030  time: 0.2911  data_time: 0.0057  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:53:06 d2.utils.events]: [0m eta: 0:15:16  iter: 1839  total_loss: 0.378  loss_cls: 0.098  loss_box_reg: 0.204  loss_rpn_cls: 0.015  loss_rpn_loc: 0.019  time: 0.2910  data_time: 0.0045  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:53:12 d2.utils.events]: [0m eta: 0:15:10  iter: 1859  total_loss: 0.377  loss_cls: 0.111  loss_box_reg: 0.207  loss_rpn_cls: 0.013  loss_rpn_loc: 0.025  time: 0.2912  data_time: 0.0057  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:53:18 d2.utils.events]: [0m eta: 0:15:04  iter: 1879  total_loss: 0.390  loss_cls: 0.102  loss_box_reg: 0.248  loss_rpn_cls: 0.018  loss_rpn_loc: 0.024  time: 0.2911  data_time: 0.0047  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:53:24 d2.utils.events]: [0m eta: 0:14:59  iter: 1899  total_loss: 0.477  loss_cls: 0.139  loss_box_reg: 0.293  loss_rpn_cls: 0.020  loss_rpn_loc: 0.026  time: 0.2911  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:53:30 d2.utils.events]: [0m eta: 0:14:52  iter: 1919  total_loss: 0.378  loss_cls: 0.110  loss_box_reg: 0.240  loss_rpn_cls: 0.015  loss_rpn_loc: 0.018  time: 0.2910  data_time: 0.0052  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:53:36 d2.utils.events]: [0m eta: 0:14:47  iter: 1939  total_loss: 0.324  loss_cls: 0.091  loss_box_reg: 0.205  loss_rpn_cls: 0.010  loss_rpn_loc: 0.017  time: 0.2911  data_time: 0.0053  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:53:42 d2.utils.events]: [0m eta: 0:14:40  iter: 1959  total_loss: 0.326  loss_cls: 0.089  loss_box_reg: 0.210  loss_rpn_cls: 0.009  loss_rpn_loc: 0.014  time: 0.2911  data_time: 0.0048  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:53:47 d2.utils.events]: [0m eta: 0:14:35  iter: 1979  total_loss: 0.415  loss_cls: 0.128  loss_box_reg: 0.221  loss_rpn_cls: 0.012  loss_rpn_loc: 0.032  time: 0.2911  data_time: 0.0048  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:53:53 d2.utils.events]: [0m eta: 0:14:29  iter: 1999  total_loss: 0.410  loss_cls: 0.125  loss_box_reg: 0.238  loss_rpn_cls: 0.011  loss_rpn_loc: 0.022  time: 0.2911  data_time: 0.0056  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:53:59 d2.utils.events]: [0m eta: 0:14:23  iter: 2019  total_loss: 0.370  loss_cls: 0.103  loss_box_reg: 0.235  loss_rpn_cls: 0.017  loss_rpn_loc: 0.026  time: 0.2911  data_time: 0.0053  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:54:05 d2.utils.events]: [0m eta: 0:14:17  iter: 2039  total_loss: 0.409  loss_cls: 0.105  loss_box_reg: 0.246  loss_rpn_cls: 0.021  loss_rpn_loc: 0.023  time: 0.2911  data_time: 0.0049  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:54:11 d2.utils.events]: [0m eta: 0:14:11  iter: 2059  total_loss: 0.430  loss_cls: 0.127  loss_box_reg: 0.256  loss_rpn_cls: 0.012  loss_rpn_loc: 0.025  time: 0.2911  data_time: 0.0054  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:54:17 d2.utils.events]: [0m eta: 0:14:06  iter: 2079  total_loss: 0.413  loss_cls: 0.100  loss_box_reg: 0.237  loss_rpn_cls: 0.015  loss_rpn_loc: 0.019  time: 0.2911  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:54:23 d2.utils.events]: [0m eta: 0:14:01  iter: 2099  total_loss: 0.411  loss_cls: 0.126  loss_box_reg: 0.235  loss_rpn_cls: 0.018  loss_rpn_loc: 0.024  time: 0.2911  data_time: 0.0053  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:54:28 d2.utils.events]: [0m eta: 0:13:55  iter: 2119  total_loss: 0.364  loss_cls: 0.111  loss_box_reg: 0.225  loss_rpn_cls: 0.013  loss_rpn_loc: 0.020  time: 0.2911  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:54:34 d2.utils.events]: [0m eta: 0:13:49  iter: 2139  total_loss: 0.384  loss_cls: 0.107  loss_box_reg: 0.225  loss_rpn_cls: 0.013  loss_rpn_loc: 0.020  time: 0.2911  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:54:40 d2.utils.events]: [0m eta: 0:13:42  iter: 2159  total_loss: 0.383  loss_cls: 0.108  loss_box_reg: 0.235  loss_rpn_cls: 0.011  loss_rpn_loc: 0.018  time: 0.2911  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:54:46 d2.utils.events]: [0m eta: 0:13:36  iter: 2179  total_loss: 0.367  loss_cls: 0.109  loss_box_reg: 0.214  loss_rpn_cls: 0.011  loss_rpn_loc: 0.020  time: 0.2910  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:54:51 d2.utils.events]: [0m eta: 0:13:30  iter: 2199  total_loss: 0.442  loss_cls: 0.132  loss_box_reg: 0.227  loss_rpn_cls: 0.011  loss_rpn_loc: 0.018  time: 0.2910  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:54:57 d2.utils.events]: [0m eta: 0:13:23  iter: 2219  total_loss: 0.333  loss_cls: 0.115  loss_box_reg: 0.193  loss_rpn_cls: 0.012  loss_rpn_loc: 0.014  time: 0.2909  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:55:03 d2.utils.events]: [0m eta: 0:13:17  iter: 2239  total_loss: 0.403  loss_cls: 0.110  loss_box_reg: 0.224  loss_rpn_cls: 0.018  loss_rpn_loc: 0.026  time: 0.2909  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:55:09 d2.utils.events]: [0m eta: 0:13:11  iter: 2259  total_loss: 0.344  loss_cls: 0.117  loss_box_reg: 0.206  loss_rpn_cls: 0.010  loss_rpn_loc: 0.018  time: 0.2909  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:55:14 d2.utils.events]: [0m eta: 0:13:05  iter: 2279  total_loss: 0.394  loss_cls: 0.104  loss_box_reg: 0.242  loss_rpn_cls: 0.010  loss_rpn_loc: 0.016  time: 0.2908  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:55:20 d2.utils.events]: [0m eta: 0:12:59  iter: 2299  total_loss: 0.348  loss_cls: 0.112  loss_box_reg: 0.197  loss_rpn_cls: 0.010  loss_rpn_loc: 0.020  time: 0.2908  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:55:26 d2.utils.events]: [0m eta: 0:12:53  iter: 2319  total_loss: 0.366  loss_cls: 0.106  loss_box_reg: 0.235  loss_rpn_cls: 0.015  loss_rpn_loc: 0.020  time: 0.2907  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:55:32 d2.utils.events]: [0m eta: 0:12:47  iter: 2339  total_loss: 0.412  loss_cls: 0.116  loss_box_reg: 0.206  loss_rpn_cls: 0.015  loss_rpn_loc: 0.028  time: 0.2907  data_time: 0.0046  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:55:37 d2.utils.events]: [0m eta: 0:12:40  iter: 2359  total_loss: 0.408  loss_cls: 0.117  loss_box_reg: 0.230  loss_rpn_cls: 0.013  loss_rpn_loc: 0.022  time: 0.2907  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:55:43 d2.utils.events]: [0m eta: 0:12:34  iter: 2379  total_loss: 0.362  loss_cls: 0.105  loss_box_reg: 0.197  loss_rpn_cls: 0.011  loss_rpn_loc: 0.019  time: 0.2907  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:55:49 d2.utils.events]: [0m eta: 0:12:28  iter: 2399  total_loss: 0.365  loss_cls: 0.100  loss_box_reg: 0.221  loss_rpn_cls: 0.012  loss_rpn_loc: 0.015  time: 0.2906  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:55:55 d2.utils.events]: [0m eta: 0:12:22  iter: 2419  total_loss: 0.348  loss_cls: 0.104  loss_box_reg: 0.202  loss_rpn_cls: 0.012  loss_rpn_loc: 0.015  time: 0.2906  data_time: 0.0045  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:56:00 d2.utils.events]: [0m eta: 0:12:16  iter: 2439  total_loss: 0.403  loss_cls: 0.119  loss_box_reg: 0.241  loss_rpn_cls: 0.012  loss_rpn_loc: 0.030  time: 0.2906  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:56:06 d2.utils.events]: [0m eta: 0:12:10  iter: 2459  total_loss: 0.328  loss_cls: 0.114  loss_box_reg: 0.199  loss_rpn_cls: 0.011  loss_rpn_loc: 0.025  time: 0.2905  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:56:12 d2.utils.events]: [0m eta: 0:12:04  iter: 2479  total_loss: 0.356  loss_cls: 0.103  loss_box_reg: 0.207  loss_rpn_cls: 0.014  loss_rpn_loc: 0.014  time: 0.2905  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:56:18 d2.utils.events]: [0m eta: 0:11:58  iter: 2499  total_loss: 0.407  loss_cls: 0.126  loss_box_reg: 0.233  loss_rpn_cls: 0.007  loss_rpn_loc: 0.026  time: 0.2905  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:56:23 d2.utils.events]: [0m eta: 0:11:51  iter: 2519  total_loss: 0.428  loss_cls: 0.127  loss_box_reg: 0.262  loss_rpn_cls: 0.011  loss_rpn_loc: 0.028  time: 0.2905  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:56:29 d2.utils.events]: [0m eta: 0:11:46  iter: 2539  total_loss: 0.374  loss_cls: 0.108  loss_box_reg: 0.233  loss_rpn_cls: 0.013  loss_rpn_loc: 0.019  time: 0.2905  data_time: 0.0045  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:56:35 d2.utils.events]: [0m eta: 0:11:40  iter: 2559  total_loss: 0.357  loss_cls: 0.106  loss_box_reg: 0.210  loss_rpn_cls: 0.012  loss_rpn_loc: 0.024  time: 0.2905  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:56:41 d2.utils.events]: [0m eta: 0:11:33  iter: 2579  total_loss: 0.372  loss_cls: 0.111  loss_box_reg: 0.228  loss_rpn_cls: 0.008  loss_rpn_loc: 0.024  time: 0.2904  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:56:47 d2.utils.events]: [0m eta: 0:11:27  iter: 2599  total_loss: 0.314  loss_cls: 0.127  loss_box_reg: 0.172  loss_rpn_cls: 0.015  loss_rpn_loc: 0.017  time: 0.2904  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:56:52 d2.utils.events]: [0m eta: 0:11:22  iter: 2619  total_loss: 0.347  loss_cls: 0.092  loss_box_reg: 0.218  loss_rpn_cls: 0.008  loss_rpn_loc: 0.018  time: 0.2904  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:56:58 d2.utils.events]: [0m eta: 0:11:16  iter: 2639  total_loss: 0.386  loss_cls: 0.122  loss_box_reg: 0.209  loss_rpn_cls: 0.013  loss_rpn_loc: 0.023  time: 0.2904  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:57:04 d2.utils.events]: [0m eta: 0:11:10  iter: 2659  total_loss: 0.337  loss_cls: 0.114  loss_box_reg: 0.208  loss_rpn_cls: 0.007  loss_rpn_loc: 0.017  time: 0.2903  data_time: 0.0048  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:57:10 d2.utils.events]: [0m eta: 0:11:04  iter: 2679  total_loss: 0.302  loss_cls: 0.093  loss_box_reg: 0.188  loss_rpn_cls: 0.010  loss_rpn_loc: 0.015  time: 0.2903  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:57:15 d2.utils.events]: [0m eta: 0:10:58  iter: 2699  total_loss: 0.411  loss_cls: 0.125  loss_box_reg: 0.222  loss_rpn_cls: 0.010  loss_rpn_loc: 0.024  time: 0.2903  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:57:21 d2.utils.events]: [0m eta: 0:10:53  iter: 2719  total_loss: 0.427  loss_cls: 0.121  loss_box_reg: 0.220  loss_rpn_cls: 0.011  loss_rpn_loc: 0.025  time: 0.2903  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:57:27 d2.utils.events]: [0m eta: 0:10:47  iter: 2739  total_loss: 0.359  loss_cls: 0.106  loss_box_reg: 0.224  loss_rpn_cls: 0.010  loss_rpn_loc: 0.016  time: 0.2903  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:57:33 d2.utils.events]: [0m eta: 0:10:41  iter: 2759  total_loss: 0.408  loss_cls: 0.113  loss_box_reg: 0.237  loss_rpn_cls: 0.014  loss_rpn_loc: 0.024  time: 0.2902  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:57:38 d2.utils.events]: [0m eta: 0:10:35  iter: 2779  total_loss: 0.360  loss_cls: 0.114  loss_box_reg: 0.236  loss_rpn_cls: 0.014  loss_rpn_loc: 0.019  time: 0.2902  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:57:44 d2.utils.events]: [0m eta: 0:10:29  iter: 2799  total_loss: 0.373  loss_cls: 0.116  loss_box_reg: 0.234  loss_rpn_cls: 0.010  loss_rpn_loc: 0.016  time: 0.2902  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:57:50 d2.utils.events]: [0m eta: 0:10:23  iter: 2819  total_loss: 0.403  loss_cls: 0.127  loss_box_reg: 0.226  loss_rpn_cls: 0.018  loss_rpn_loc: 0.024  time: 0.2902  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:57:56 d2.utils.events]: [0m eta: 0:10:17  iter: 2839  total_loss: 0.368  loss_cls: 0.116  loss_box_reg: 0.196  loss_rpn_cls: 0.016  loss_rpn_loc: 0.036  time: 0.2902  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:58:01 d2.utils.events]: [0m eta: 0:10:11  iter: 2859  total_loss: 0.366  loss_cls: 0.114  loss_box_reg: 0.232  loss_rpn_cls: 0.009  loss_rpn_loc: 0.013  time: 0.2901  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:58:07 d2.utils.events]: [0m eta: 0:10:06  iter: 2879  total_loss: 0.379  loss_cls: 0.096  loss_box_reg: 0.226  loss_rpn_cls: 0.012  loss_rpn_loc: 0.019  time: 0.2901  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:58:13 d2.utils.events]: [0m eta: 0:10:00  iter: 2899  total_loss: 0.411  loss_cls: 0.122  loss_box_reg: 0.244  loss_rpn_cls: 0.011  loss_rpn_loc: 0.021  time: 0.2901  data_time: 0.0039  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:58:19 d2.utils.events]: [0m eta: 0:09:54  iter: 2919  total_loss: 0.387  loss_cls: 0.114  loss_box_reg: 0.224  loss_rpn_cls: 0.013  loss_rpn_loc: 0.018  time: 0.2901  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:58:24 d2.utils.events]: [0m eta: 0:09:48  iter: 2939  total_loss: 0.413  loss_cls: 0.126  loss_box_reg: 0.243  loss_rpn_cls: 0.011  loss_rpn_loc: 0.017  time: 0.2901  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:58:30 d2.utils.events]: [0m eta: 0:09:42  iter: 2959  total_loss: 0.315  loss_cls: 0.088  loss_box_reg: 0.201  loss_rpn_cls: 0.010  loss_rpn_loc: 0.014  time: 0.2900  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:58:36 d2.utils.events]: [0m eta: 0:09:36  iter: 2979  total_loss: 0.386  loss_cls: 0.102  loss_box_reg: 0.223  loss_rpn_cls: 0.011  loss_rpn_loc: 0.028  time: 0.2900  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:58:42 d2.utils.events]: [0m eta: 0:09:30  iter: 2999  total_loss: 0.334  loss_cls: 0.094  loss_box_reg: 0.211  loss_rpn_cls: 0.008  loss_rpn_loc: 0.017  time: 0.2900  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:58:47 d2.utils.events]: [0m eta: 0:09:24  iter: 3019  total_loss: 0.372  loss_cls: 0.109  loss_box_reg: 0.223  loss_rpn_cls: 0.009  loss_rpn_loc: 0.019  time: 0.2900  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:58:53 d2.utils.events]: [0m eta: 0:09:19  iter: 3039  total_loss: 0.418  loss_cls: 0.113  loss_box_reg: 0.258  loss_rpn_cls: 0.012  loss_rpn_loc: 0.021  time: 0.2899  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:58:59 d2.utils.events]: [0m eta: 0:09:13  iter: 3059  total_loss: 0.377  loss_cls: 0.106  loss_box_reg: 0.216  loss_rpn_cls: 0.009  loss_rpn_loc: 0.018  time: 0.2900  data_time: 0.0045  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:59:05 d2.utils.events]: [0m eta: 0:09:07  iter: 3079  total_loss: 0.405  loss_cls: 0.111  loss_box_reg: 0.227  loss_rpn_cls: 0.004  loss_rpn_loc: 0.020  time: 0.2901  data_time: 0.0039  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:59:11 d2.utils.events]: [0m eta: 0:09:02  iter: 3099  total_loss: 0.335  loss_cls: 0.084  loss_box_reg: 0.186  loss_rpn_cls: 0.013  loss_rpn_loc: 0.016  time: 0.2901  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:59:17 d2.utils.events]: [0m eta: 0:08:56  iter: 3119  total_loss: 0.275  loss_cls: 0.073  loss_box_reg: 0.174  loss_rpn_cls: 0.004  loss_rpn_loc: 0.013  time: 0.2901  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:59:22 d2.utils.events]: [0m eta: 0:08:50  iter: 3139  total_loss: 0.383  loss_cls: 0.122  loss_box_reg: 0.244  loss_rpn_cls: 0.010  loss_rpn_loc: 0.019  time: 0.2900  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:59:28 d2.utils.events]: [0m eta: 0:08:44  iter: 3159  total_loss: 0.372  loss_cls: 0.112  loss_box_reg: 0.224  loss_rpn_cls: 0.008  loss_rpn_loc: 0.016  time: 0.2900  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:59:34 d2.utils.events]: [0m eta: 0:08:39  iter: 3179  total_loss: 0.319  loss_cls: 0.091  loss_box_reg: 0.193  loss_rpn_cls: 0.007  loss_rpn_loc: 0.020  time: 0.2900  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:59:40 d2.utils.events]: [0m eta: 0:08:33  iter: 3199  total_loss: 0.339  loss_cls: 0.107  loss_box_reg: 0.201  loss_rpn_cls: 0.007  loss_rpn_loc: 0.017  time: 0.2900  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:59:46 d2.utils.events]: [0m eta: 0:08:28  iter: 3219  total_loss: 0.304  loss_cls: 0.088  loss_box_reg: 0.209  loss_rpn_cls: 0.007  loss_rpn_loc: 0.020  time: 0.2900  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:59:51 d2.utils.events]: [0m eta: 0:08:22  iter: 3239  total_loss: 0.390  loss_cls: 0.113  loss_box_reg: 0.235  loss_rpn_cls: 0.008  loss_rpn_loc: 0.025  time: 0.2900  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 12:59:57 d2.utils.events]: [0m eta: 0:08:16  iter: 3259  total_loss: 0.376  loss_cls: 0.110  loss_box_reg: 0.226  loss_rpn_cls: 0.009  loss_rpn_loc: 0.026  time: 0.2900  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:00:03 d2.utils.events]: [0m eta: 0:08:10  iter: 3279  total_loss: 0.368  loss_cls: 0.107  loss_box_reg: 0.218  loss_rpn_cls: 0.007  loss_rpn_loc: 0.017  time: 0.2899  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:00:09 d2.utils.events]: [0m eta: 0:08:05  iter: 3299  total_loss: 0.385  loss_cls: 0.108  loss_box_reg: 0.208  loss_rpn_cls: 0.012  loss_rpn_loc: 0.026  time: 0.2899  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:00:14 d2.utils.events]: [0m eta: 0:07:59  iter: 3319  total_loss: 0.309  loss_cls: 0.093  loss_box_reg: 0.185  loss_rpn_cls: 0.009  loss_rpn_loc: 0.018  time: 0.2899  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:00:20 d2.utils.events]: [0m eta: 0:07:53  iter: 3339  total_loss: 0.349  loss_cls: 0.102  loss_box_reg: 0.215  loss_rpn_cls: 0.007  loss_rpn_loc: 0.021  time: 0.2898  data_time: 0.0048  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:00:26 d2.utils.events]: [0m eta: 0:07:47  iter: 3359  total_loss: 0.344  loss_cls: 0.096  loss_box_reg: 0.206  loss_rpn_cls: 0.009  loss_rpn_loc: 0.018  time: 0.2898  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:00:31 d2.utils.events]: [0m eta: 0:07:42  iter: 3379  total_loss: 0.364  loss_cls: 0.122  loss_box_reg: 0.207  loss_rpn_cls: 0.011  loss_rpn_loc: 0.014  time: 0.2898  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:00:37 d2.utils.events]: [0m eta: 0:07:36  iter: 3399  total_loss: 0.398  loss_cls: 0.118  loss_box_reg: 0.230  loss_rpn_cls: 0.012  loss_rpn_loc: 0.019  time: 0.2898  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:00:43 d2.utils.events]: [0m eta: 0:07:30  iter: 3419  total_loss: 0.325  loss_cls: 0.111  loss_box_reg: 0.203  loss_rpn_cls: 0.011  loss_rpn_loc: 0.018  time: 0.2898  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:00:49 d2.utils.events]: [0m eta: 0:07:25  iter: 3439  total_loss: 0.371  loss_cls: 0.116  loss_box_reg: 0.214  loss_rpn_cls: 0.008  loss_rpn_loc: 0.018  time: 0.2898  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:00:55 d2.utils.events]: [0m eta: 0:07:19  iter: 3459  total_loss: 0.415  loss_cls: 0.122  loss_box_reg: 0.245  loss_rpn_cls: 0.010  loss_rpn_loc: 0.020  time: 0.2898  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:01:00 d2.utils.events]: [0m eta: 0:07:13  iter: 3479  total_loss: 0.321  loss_cls: 0.083  loss_box_reg: 0.216  loss_rpn_cls: 0.007  loss_rpn_loc: 0.011  time: 0.2897  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:01:06 d2.utils.events]: [0m eta: 0:07:07  iter: 3499  total_loss: 0.333  loss_cls: 0.098  loss_box_reg: 0.178  loss_rpn_cls: 0.008  loss_rpn_loc: 0.017  time: 0.2897  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:01:12 d2.utils.events]: [0m eta: 0:07:02  iter: 3519  total_loss: 0.369  loss_cls: 0.105  loss_box_reg: 0.228  loss_rpn_cls: 0.009  loss_rpn_loc: 0.022  time: 0.2897  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:01:17 d2.utils.events]: [0m eta: 0:06:56  iter: 3539  total_loss: 0.335  loss_cls: 0.107  loss_box_reg: 0.193  loss_rpn_cls: 0.008  loss_rpn_loc: 0.020  time: 0.2897  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:01:23 d2.utils.events]: [0m eta: 0:06:50  iter: 3559  total_loss: 0.409  loss_cls: 0.112  loss_box_reg: 0.263  loss_rpn_cls: 0.009  loss_rpn_loc: 0.027  time: 0.2897  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:01:29 d2.utils.events]: [0m eta: 0:06:45  iter: 3579  total_loss: 0.448  loss_cls: 0.126  loss_box_reg: 0.241  loss_rpn_cls: 0.013  loss_rpn_loc: 0.013  time: 0.2896  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:01:35 d2.utils.events]: [0m eta: 0:06:39  iter: 3599  total_loss: 0.289  loss_cls: 0.086  loss_box_reg: 0.208  loss_rpn_cls: 0.006  loss_rpn_loc: 0.014  time: 0.2896  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:01:40 d2.utils.events]: [0m eta: 0:06:33  iter: 3619  total_loss: 0.384  loss_cls: 0.097  loss_box_reg: 0.251  loss_rpn_cls: 0.009  loss_rpn_loc: 0.018  time: 0.2896  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:01:46 d2.utils.events]: [0m eta: 0:06:28  iter: 3639  total_loss: 0.364  loss_cls: 0.102  loss_box_reg: 0.221  loss_rpn_cls: 0.010  loss_rpn_loc: 0.022  time: 0.2896  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:01:52 d2.utils.events]: [0m eta: 0:06:22  iter: 3659  total_loss: 0.423  loss_cls: 0.127  loss_box_reg: 0.248  loss_rpn_cls: 0.009  loss_rpn_loc: 0.024  time: 0.2896  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:01:58 d2.utils.events]: [0m eta: 0:06:16  iter: 3679  total_loss: 0.386  loss_cls: 0.113  loss_box_reg: 0.215  loss_rpn_cls: 0.011  loss_rpn_loc: 0.017  time: 0.2896  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:02:03 d2.utils.events]: [0m eta: 0:06:10  iter: 3699  total_loss: 0.385  loss_cls: 0.102  loss_box_reg: 0.242  loss_rpn_cls: 0.007  loss_rpn_loc: 0.019  time: 0.2896  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:02:09 d2.utils.events]: [0m eta: 0:06:04  iter: 3719  total_loss: 0.391  loss_cls: 0.122  loss_box_reg: 0.228  loss_rpn_cls: 0.007  loss_rpn_loc: 0.023  time: 0.2895  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:02:15 d2.utils.events]: [0m eta: 0:05:58  iter: 3739  total_loss: 0.311  loss_cls: 0.082  loss_box_reg: 0.189  loss_rpn_cls: 0.005  loss_rpn_loc: 0.018  time: 0.2895  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:02:21 d2.utils.events]: [0m eta: 0:05:53  iter: 3759  total_loss: 0.372  loss_cls: 0.095  loss_box_reg: 0.205  loss_rpn_cls: 0.004  loss_rpn_loc: 0.014  time: 0.2895  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:02:27 d2.utils.events]: [0m eta: 0:05:47  iter: 3779  total_loss: 0.381  loss_cls: 0.106  loss_box_reg: 0.217  loss_rpn_cls: 0.009  loss_rpn_loc: 0.026  time: 0.2895  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:02:32 d2.utils.events]: [0m eta: 0:05:41  iter: 3799  total_loss: 0.404  loss_cls: 0.119  loss_box_reg: 0.224  loss_rpn_cls: 0.010  loss_rpn_loc: 0.030  time: 0.2895  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:02:38 d2.utils.events]: [0m eta: 0:05:36  iter: 3819  total_loss: 0.363  loss_cls: 0.104  loss_box_reg: 0.211  loss_rpn_cls: 0.006  loss_rpn_loc: 0.017  time: 0.2895  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:02:44 d2.utils.events]: [0m eta: 0:05:30  iter: 3839  total_loss: 0.399  loss_cls: 0.111  loss_box_reg: 0.234  loss_rpn_cls: 0.009  loss_rpn_loc: 0.032  time: 0.2895  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:02:49 d2.utils.events]: [0m eta: 0:05:24  iter: 3859  total_loss: 0.342  loss_cls: 0.095  loss_box_reg: 0.192  loss_rpn_cls: 0.008  loss_rpn_loc: 0.020  time: 0.2894  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:02:55 d2.utils.events]: [0m eta: 0:05:18  iter: 3879  total_loss: 0.345  loss_cls: 0.086  loss_box_reg: 0.222  loss_rpn_cls: 0.011  loss_rpn_loc: 0.029  time: 0.2894  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:03:01 d2.utils.events]: [0m eta: 0:05:13  iter: 3899  total_loss: 0.412  loss_cls: 0.132  loss_box_reg: 0.253  loss_rpn_cls: 0.014  loss_rpn_loc: 0.024  time: 0.2894  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:03:07 d2.utils.events]: [0m eta: 0:05:07  iter: 3919  total_loss: 0.412  loss_cls: 0.123  loss_box_reg: 0.246  loss_rpn_cls: 0.009  loss_rpn_loc: 0.026  time: 0.2894  data_time: 0.0046  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:03:12 d2.utils.events]: [0m eta: 0:05:01  iter: 3939  total_loss: 0.316  loss_cls: 0.088  loss_box_reg: 0.182  loss_rpn_cls: 0.004  loss_rpn_loc: 0.011  time: 0.2894  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:03:18 d2.utils.events]: [0m eta: 0:04:56  iter: 3959  total_loss: 0.307  loss_cls: 0.075  loss_box_reg: 0.201  loss_rpn_cls: 0.008  loss_rpn_loc: 0.017  time: 0.2894  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:03:24 d2.utils.events]: [0m eta: 0:04:50  iter: 3979  total_loss: 0.360  loss_cls: 0.116  loss_box_reg: 0.217  loss_rpn_cls: 0.010  loss_rpn_loc: 0.017  time: 0.2894  data_time: 0.0050  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:03:30 d2.utils.events]: [0m eta: 0:04:45  iter: 3999  total_loss: 0.454  loss_cls: 0.139  loss_box_reg: 0.251  loss_rpn_cls: 0.012  loss_rpn_loc: 0.024  time: 0.2894  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:03:36 d2.utils.events]: [0m eta: 0:04:39  iter: 4019  total_loss: 0.324  loss_cls: 0.101  loss_box_reg: 0.182  loss_rpn_cls: 0.014  loss_rpn_loc: 0.028  time: 0.2894  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:03:41 d2.utils.events]: [0m eta: 0:04:33  iter: 4039  total_loss: 0.352  loss_cls: 0.097  loss_box_reg: 0.219  loss_rpn_cls: 0.015  loss_rpn_loc: 0.019  time: 0.2894  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:03:47 d2.utils.events]: [0m eta: 0:04:27  iter: 4059  total_loss: 0.328  loss_cls: 0.099  loss_box_reg: 0.186  loss_rpn_cls: 0.006  loss_rpn_loc: 0.019  time: 0.2894  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:03:53 d2.utils.events]: [0m eta: 0:04:22  iter: 4079  total_loss: 0.404  loss_cls: 0.109  loss_box_reg: 0.225  loss_rpn_cls: 0.009  loss_rpn_loc: 0.031  time: 0.2893  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:03:59 d2.utils.events]: [0m eta: 0:04:16  iter: 4099  total_loss: 0.344  loss_cls: 0.090  loss_box_reg: 0.199  loss_rpn_cls: 0.008  loss_rpn_loc: 0.021  time: 0.2893  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:04:04 d2.utils.events]: [0m eta: 0:04:10  iter: 4119  total_loss: 0.330  loss_cls: 0.093  loss_box_reg: 0.209  loss_rpn_cls: 0.006  loss_rpn_loc: 0.015  time: 0.2893  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:04:10 d2.utils.events]: [0m eta: 0:04:04  iter: 4139  total_loss: 0.366  loss_cls: 0.114  loss_box_reg: 0.225  loss_rpn_cls: 0.011  loss_rpn_loc: 0.020  time: 0.2893  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:04:16 d2.utils.events]: [0m eta: 0:03:59  iter: 4159  total_loss: 0.364  loss_cls: 0.099  loss_box_reg: 0.210  loss_rpn_cls: 0.008  loss_rpn_loc: 0.021  time: 0.2893  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:04:21 d2.utils.events]: [0m eta: 0:03:53  iter: 4179  total_loss: 0.340  loss_cls: 0.094  loss_box_reg: 0.172  loss_rpn_cls: 0.008  loss_rpn_loc: 0.015  time: 0.2893  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:04:27 d2.utils.events]: [0m eta: 0:03:47  iter: 4199  total_loss: 0.405  loss_cls: 0.118  loss_box_reg: 0.247  loss_rpn_cls: 0.009  loss_rpn_loc: 0.025  time: 0.2892  data_time: 0.0039  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:04:33 d2.utils.events]: [0m eta: 0:03:42  iter: 4219  total_loss: 0.351  loss_cls: 0.110  loss_box_reg: 0.220  loss_rpn_cls: 0.008  loss_rpn_loc: 0.019  time: 0.2892  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:04:39 d2.utils.events]: [0m eta: 0:03:36  iter: 4239  total_loss: 0.340  loss_cls: 0.100  loss_box_reg: 0.233  loss_rpn_cls: 0.008  loss_rpn_loc: 0.015  time: 0.2892  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:04:44 d2.utils.events]: [0m eta: 0:03:30  iter: 4259  total_loss: 0.288  loss_cls: 0.085  loss_box_reg: 0.193  loss_rpn_cls: 0.005  loss_rpn_loc: 0.011  time: 0.2892  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:04:50 d2.utils.events]: [0m eta: 0:03:24  iter: 4279  total_loss: 0.374  loss_cls: 0.104  loss_box_reg: 0.229  loss_rpn_cls: 0.009  loss_rpn_loc: 0.021  time: 0.2892  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:04:56 d2.utils.events]: [0m eta: 0:03:19  iter: 4299  total_loss: 0.343  loss_cls: 0.096  loss_box_reg: 0.200  loss_rpn_cls: 0.010  loss_rpn_loc: 0.025  time: 0.2892  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:05:02 d2.utils.events]: [0m eta: 0:03:13  iter: 4319  total_loss: 0.385  loss_cls: 0.111  loss_box_reg: 0.245  loss_rpn_cls: 0.006  loss_rpn_loc: 0.018  time: 0.2892  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:05:07 d2.utils.events]: [0m eta: 0:03:07  iter: 4339  total_loss: 0.390  loss_cls: 0.122  loss_box_reg: 0.216  loss_rpn_cls: 0.009  loss_rpn_loc: 0.024  time: 0.2892  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:05:13 d2.utils.events]: [0m eta: 0:03:02  iter: 4359  total_loss: 0.340  loss_cls: 0.111  loss_box_reg: 0.191  loss_rpn_cls: 0.008  loss_rpn_loc: 0.017  time: 0.2892  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:05:19 d2.utils.events]: [0m eta: 0:02:56  iter: 4379  total_loss: 0.402  loss_cls: 0.117  loss_box_reg: 0.227  loss_rpn_cls: 0.012  loss_rpn_loc: 0.027  time: 0.2892  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:05:25 d2.utils.events]: [0m eta: 0:02:50  iter: 4399  total_loss: 0.421  loss_cls: 0.090  loss_box_reg: 0.236  loss_rpn_cls: 0.011  loss_rpn_loc: 0.027  time: 0.2891  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:05:31 d2.utils.events]: [0m eta: 0:02:45  iter: 4419  total_loss: 0.339  loss_cls: 0.094  loss_box_reg: 0.216  loss_rpn_cls: 0.009  loss_rpn_loc: 0.015  time: 0.2891  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:05:36 d2.utils.events]: [0m eta: 0:02:39  iter: 4439  total_loss: 0.334  loss_cls: 0.102  loss_box_reg: 0.204  loss_rpn_cls: 0.011  loss_rpn_loc: 0.021  time: 0.2891  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:05:42 d2.utils.events]: [0m eta: 0:02:33  iter: 4459  total_loss: 0.293  loss_cls: 0.100  loss_box_reg: 0.171  loss_rpn_cls: 0.007  loss_rpn_loc: 0.015  time: 0.2891  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:05:48 d2.utils.events]: [0m eta: 0:02:28  iter: 4479  total_loss: 0.370  loss_cls: 0.100  loss_box_reg: 0.210  loss_rpn_cls: 0.008  loss_rpn_loc: 0.013  time: 0.2891  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:05:54 d2.utils.events]: [0m eta: 0:02:22  iter: 4499  total_loss: 0.365  loss_cls: 0.115  loss_box_reg: 0.213  loss_rpn_cls: 0.010  loss_rpn_loc: 0.029  time: 0.2891  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:05:59 d2.utils.events]: [0m eta: 0:02:16  iter: 4519  total_loss: 0.390  loss_cls: 0.101  loss_box_reg: 0.236  loss_rpn_cls: 0.008  loss_rpn_loc: 0.024  time: 0.2891  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:06:05 d2.utils.events]: [0m eta: 0:02:11  iter: 4539  total_loss: 0.320  loss_cls: 0.086  loss_box_reg: 0.189  loss_rpn_cls: 0.009  loss_rpn_loc: 0.021  time: 0.2891  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:06:11 d2.utils.events]: [0m eta: 0:02:05  iter: 4559  total_loss: 0.345  loss_cls: 0.096  loss_box_reg: 0.208  loss_rpn_cls: 0.008  loss_rpn_loc: 0.014  time: 0.2890  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:06:16 d2.utils.events]: [0m eta: 0:01:59  iter: 4579  total_loss: 0.265  loss_cls: 0.075  loss_box_reg: 0.179  loss_rpn_cls: 0.006  loss_rpn_loc: 0.015  time: 0.2890  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:06:22 d2.utils.events]: [0m eta: 0:01:54  iter: 4599  total_loss: 0.337  loss_cls: 0.097  loss_box_reg: 0.203  loss_rpn_cls: 0.008  loss_rpn_loc: 0.023  time: 0.2890  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:06:28 d2.utils.events]: [0m eta: 0:01:48  iter: 4619  total_loss: 0.296  loss_cls: 0.077  loss_box_reg: 0.186  loss_rpn_cls: 0.006  loss_rpn_loc: 0.012  time: 0.2890  data_time: 0.0039  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:06:34 d2.utils.events]: [0m eta: 0:01:42  iter: 4639  total_loss: 0.359  loss_cls: 0.097  loss_box_reg: 0.214  loss_rpn_cls: 0.007  loss_rpn_loc: 0.021  time: 0.2890  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:06:39 d2.utils.events]: [0m eta: 0:01:36  iter: 4659  total_loss: 0.334  loss_cls: 0.111  loss_box_reg: 0.208  loss_rpn_cls: 0.007  loss_rpn_loc: 0.021  time: 0.2890  data_time: 0.0039  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:06:45 d2.utils.events]: [0m eta: 0:01:31  iter: 4679  total_loss: 0.353  loss_cls: 0.101  loss_box_reg: 0.226  loss_rpn_cls: 0.009  loss_rpn_loc: 0.019  time: 0.2890  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:06:51 d2.utils.events]: [0m eta: 0:01:25  iter: 4699  total_loss: 0.400  loss_cls: 0.114  loss_box_reg: 0.217  loss_rpn_cls: 0.011  loss_rpn_loc: 0.024  time: 0.2890  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:06:57 d2.utils.events]: [0m eta: 0:01:19  iter: 4719  total_loss: 0.352  loss_cls: 0.115  loss_box_reg: 0.225  loss_rpn_cls: 0.012  loss_rpn_loc: 0.025  time: 0.2890  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:07:02 d2.utils.events]: [0m eta: 0:01:14  iter: 4739  total_loss: 0.291  loss_cls: 0.087  loss_box_reg: 0.181  loss_rpn_cls: 0.007  loss_rpn_loc: 0.013  time: 0.2889  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:07:08 d2.utils.events]: [0m eta: 0:01:08  iter: 4759  total_loss: 0.367  loss_cls: 0.107  loss_box_reg: 0.235  loss_rpn_cls: 0.008  loss_rpn_loc: 0.020  time: 0.2889  data_time: 0.0044  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:07:14 d2.utils.events]: [0m eta: 0:01:02  iter: 4779  total_loss: 0.331  loss_cls: 0.111  loss_box_reg: 0.193  loss_rpn_cls: 0.008  loss_rpn_loc: 0.017  time: 0.2889  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:07:20 d2.utils.events]: [0m eta: 0:00:57  iter: 4799  total_loss: 0.339  loss_cls: 0.101  loss_box_reg: 0.218  loss_rpn_cls: 0.006  loss_rpn_loc: 0.017  time: 0.2890  data_time: 0.0050  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:07:26 d2.utils.events]: [0m eta: 0:00:51  iter: 4819  total_loss: 0.345  loss_cls: 0.098  loss_box_reg: 0.206  loss_rpn_cls: 0.005  loss_rpn_loc: 0.020  time: 0.2889  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:07:31 d2.utils.events]: [0m eta: 0:00:45  iter: 4839  total_loss: 0.277  loss_cls: 0.079  loss_box_reg: 0.177  loss_rpn_cls: 0.007  loss_rpn_loc: 0.014  time: 0.2889  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:07:37 d2.utils.events]: [0m eta: 0:00:40  iter: 4859  total_loss: 0.334  loss_cls: 0.097  loss_box_reg: 0.210  loss_rpn_cls: 0.004  loss_rpn_loc: 0.017  time: 0.2889  data_time: 0.0043  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:07:43 d2.utils.events]: [0m eta: 0:00:34  iter: 4879  total_loss: 0.394  loss_cls: 0.104  loss_box_reg: 0.236  loss_rpn_cls: 0.009  loss_rpn_loc: 0.027  time: 0.2889  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:07:49 d2.utils.events]: [0m eta: 0:00:28  iter: 4899  total_loss: 0.384  loss_cls: 0.117  loss_box_reg: 0.226  loss_rpn_cls: 0.006  loss_rpn_loc: 0.025  time: 0.2889  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:07:54 d2.utils.events]: [0m eta: 0:00:23  iter: 4919  total_loss: 0.282  loss_cls: 0.072  loss_box_reg: 0.169  loss_rpn_cls: 0.009  loss_rpn_loc: 0.015  time: 0.2889  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:08:00 d2.utils.events]: [0m eta: 0:00:17  iter: 4939  total_loss: 0.315  loss_cls: 0.096  loss_box_reg: 0.210  loss_rpn_cls: 0.007  loss_rpn_loc: 0.015  time: 0.2889  data_time: 0.0041  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:08:06 d2.utils.events]: [0m eta: 0:00:11  iter: 4959  total_loss: 0.393  loss_cls: 0.105  loss_box_reg: 0.248  loss_rpn_cls: 0.008  loss_rpn_loc: 0.020  time: 0.2889  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:08:12 d2.utils.events]: [0m eta: 0:00:05  iter: 4979  total_loss: 0.318  loss_cls: 0.091  loss_box_reg: 0.196  loss_rpn_cls: 0.009  loss_rpn_loc: 0.018  time: 0.2889  data_time: 0.0042  lr: 0.000250  max_mem: 2339M
Loading sequence 0002
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0010
Loading sequence 0013
Loading sequence 0014
Loading sequence 0016
Loading sequence 0018
0002
0006
0007
0008
0010
0013
0014
0016
0018
Loaded 2920 images!
[32m[03/15 13:08:43 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    None    | 0            |    Car     | 8029         | Pedestrian | 3347         |
|            |              |            |              |            |              |
|   total    | 11376        |            |              |            |              |[0m
[32m[03/15 13:08:43 d2.data.common]: [0mSerializing 2920 elements to byte tensors and concatenating them all ...
[32m[03/15 13:08:44 d2.data.common]: [0mSerialized dataset takes 1.86 MiB
[5m[31mWARNING[0m [32m[03/15 13:08:44 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[03/15 13:08:44 d2.utils.events]: [0m eta: 0:00:00  iter: 4999  total_loss: 0.295  loss_cls: 0.089  loss_box_reg: 0.169  loss_rpn_cls: 0.006  loss_rpn_loc: 0.014  time: 0.2889  data_time: 0.0040  lr: 0.000250  max_mem: 2339M
[32m[03/15 13:08:44 d2.engine.hooks]: [0mOverall training speed: 4997 iterations in 0:24:03 (0.2890 s / it)
[32m[03/15 13:08:44 d2.engine.hooks]: [0mTotal training time: 0:24:33 (0:00:29 on hooks)
Loading sequence 0002
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0010
Loading sequence 0013
Loading sequence 0014
Loading sequence 0016
Loading sequence 0018
0002
0006
0007
0008
0010
0013
0014
0016
0018
Loaded 2920 images!
[5m[31mWARNING[0m [32m[03/15 13:09:22 d2.evaluation.coco_evaluation]: [0mjson_file was not found in MetaDataCatalog for 'KITTI_MOTS_val'. Trying to convert it to COCO format ...
[32m[03/15 13:09:22 d2.data.datasets.coco]: [0mConverting dataset annotations in 'KITTI_MOTS_val' to COCO format ...)
Loading sequence 0002
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0010
Loading sequence 0013
Loading sequence 0014
Loading sequence 0016
Loading sequence 0018
0002
0006
0007
0008
0010
0013
0014
0016
0018
Loaded 2920 images!
[32m[03/15 13:09:45 d2.data.datasets.coco]: [0mConverting dataset dicts into COCO format
[32m[03/15 13:09:49 d2.data.datasets.coco]: [0mConversion finished, num images: 2920, num annotations: 11376
[32m[03/15 13:09:49 d2.data.datasets.coco]: [0mCaching annotations in COCO format: ./output/KITTI_MOTS_val_coco_format.json
Loading sequence 0002
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0010
Loading sequence 0013
Loading sequence 0014
Loading sequence 0016
Loading sequence 0018
0002
0006
0007
0008
0010
0013
0014
0016
0018
Loaded 2920 images!
[32m[03/15 13:10:13 d2.data.common]: [0mSerializing 2920 elements to byte tensors and concatenating them all ...
[32m[03/15 13:10:13 d2.data.common]: [0mSerialized dataset takes 1.86 MiB
[32m[03/15 13:10:13 d2.evaluation.evaluator]: [0mStart inference on 2920 images
[32m[03/15 13:10:14 d2.evaluation.evaluator]: [0mInference done 11/2920. 0.0691 s / img. ETA=0:03:24
[32m[03/15 13:10:19 d2.evaluation.evaluator]: [0mInference done 82/2920. 0.0693 s / img. ETA=0:03:20
[32m[03/15 13:10:24 d2.evaluation.evaluator]: [0mInference done 153/2920. 0.0695 s / img. ETA=0:03:15
[32m[03/15 13:10:29 d2.evaluation.evaluator]: [0mInference done 224/2920. 0.0696 s / img. ETA=0:03:11
[32m[03/15 13:10:34 d2.evaluation.evaluator]: [0mInference done 295/2920. 0.0696 s / img. ETA=0:03:06
[32m[03/15 13:10:39 d2.evaluation.evaluator]: [0mInference done 366/2920. 0.0697 s / img. ETA=0:03:01
[32m[03/15 13:10:44 d2.evaluation.evaluator]: [0mInference done 436/2920. 0.0698 s / img. ETA=0:02:56
[32m[03/15 13:10:50 d2.evaluation.evaluator]: [0mInference done 506/2920. 0.0699 s / img. ETA=0:02:51
[32m[03/15 13:10:55 d2.evaluation.evaluator]: [0mInference done 576/2920. 0.0701 s / img. ETA=0:02:47
[32m[03/15 13:11:00 d2.evaluation.evaluator]: [0mInference done 645/2920. 0.0702 s / img. ETA=0:02:42
[32m[03/15 13:11:05 d2.evaluation.evaluator]: [0mInference done 713/2920. 0.0704 s / img. ETA=0:02:38
[32m[03/15 13:11:10 d2.evaluation.evaluator]: [0mInference done 782/2920. 0.0706 s / img. ETA=0:02:33
[32m[03/15 13:11:15 d2.evaluation.evaluator]: [0mInference done 851/2920. 0.0707 s / img. ETA=0:02:28
[32m[03/15 13:11:20 d2.evaluation.evaluator]: [0mInference done 919/2920. 0.0708 s / img. ETA=0:02:24
[32m[03/15 13:11:25 d2.evaluation.evaluator]: [0mInference done 986/2920. 0.0710 s / img. ETA=0:02:19
[32m[03/15 13:11:30 d2.evaluation.evaluator]: [0mInference done 1054/2920. 0.0711 s / img. ETA=0:02:15
[32m[03/15 13:11:35 d2.evaluation.evaluator]: [0mInference done 1123/2920. 0.0712 s / img. ETA=0:02:10
[32m[03/15 13:11:40 d2.evaluation.evaluator]: [0mInference done 1192/2920. 0.0712 s / img. ETA=0:02:05
[32m[03/15 13:11:45 d2.evaluation.evaluator]: [0mInference done 1260/2920. 0.0713 s / img. ETA=0:02:00
[32m[03/15 13:11:50 d2.evaluation.evaluator]: [0mInference done 1328/2920. 0.0713 s / img. ETA=0:01:55
[32m[03/15 13:11:55 d2.evaluation.evaluator]: [0mInference done 1395/2920. 0.0714 s / img. ETA=0:01:50
[32m[03/15 13:12:00 d2.evaluation.evaluator]: [0mInference done 1462/2920. 0.0715 s / img. ETA=0:01:46
[32m[03/15 13:12:05 d2.evaluation.evaluator]: [0mInference done 1528/2920. 0.0717 s / img. ETA=0:01:41
[32m[03/15 13:12:10 d2.evaluation.evaluator]: [0mInference done 1597/2920. 0.0717 s / img. ETA=0:01:36
[32m[03/15 13:12:15 d2.evaluation.evaluator]: [0mInference done 1663/2920. 0.0718 s / img. ETA=0:01:31
[32m[03/15 13:12:20 d2.evaluation.evaluator]: [0mInference done 1732/2920. 0.0718 s / img. ETA=0:01:26
[32m[03/15 13:12:25 d2.evaluation.evaluator]: [0mInference done 1798/2920. 0.0719 s / img. ETA=0:01:22
[32m[03/15 13:12:30 d2.evaluation.evaluator]: [0mInference done 1866/2920. 0.0719 s / img. ETA=0:01:17
[32m[03/15 13:12:35 d2.evaluation.evaluator]: [0mInference done 1934/2920. 0.0720 s / img. ETA=0:01:12
[32m[03/15 13:12:40 d2.evaluation.evaluator]: [0mInference done 2002/2920. 0.0720 s / img. ETA=0:01:07
[32m[03/15 13:12:45 d2.evaluation.evaluator]: [0mInference done 2071/2920. 0.0720 s / img. ETA=0:01:02
[32m[03/15 13:12:50 d2.evaluation.evaluator]: [0mInference done 2138/2920. 0.0720 s / img. ETA=0:00:57
[32m[03/15 13:12:55 d2.evaluation.evaluator]: [0mInference done 2205/2920. 0.0721 s / img. ETA=0:00:52
[32m[03/15 13:13:00 d2.evaluation.evaluator]: [0mInference done 2274/2920. 0.0721 s / img. ETA=0:00:47
[32m[03/15 13:13:05 d2.evaluation.evaluator]: [0mInference done 2342/2920. 0.0721 s / img. ETA=0:00:42
[32m[03/15 13:13:10 d2.evaluation.evaluator]: [0mInference done 2411/2920. 0.0721 s / img. ETA=0:00:37
[32m[03/15 13:13:15 d2.evaluation.evaluator]: [0mInference done 2478/2920. 0.0721 s / img. ETA=0:00:32
[32m[03/15 13:13:21 d2.evaluation.evaluator]: [0mInference done 2544/2920. 0.0722 s / img. ETA=0:00:27
[32m[03/15 13:13:26 d2.evaluation.evaluator]: [0mInference done 2613/2920. 0.0722 s / img. ETA=0:00:22
[32m[03/15 13:13:31 d2.evaluation.evaluator]: [0mInference done 2682/2920. 0.0722 s / img. ETA=0:00:17
[32m[03/15 13:13:36 d2.evaluation.evaluator]: [0mInference done 2749/2920. 0.0722 s / img. ETA=0:00:12
[32m[03/15 13:13:41 d2.evaluation.evaluator]: [0mInference done 2816/2920. 0.0723 s / img. ETA=0:00:07
[32m[03/15 13:13:46 d2.evaluation.evaluator]: [0mInference done 2882/2920. 0.0723 s / img. ETA=0:00:02
[32m[03/15 13:13:49 d2.evaluation.evaluator]: [0mTotal inference time: 0:03:34.836500 (0.073700 s / img per device, on 1 devices)
[32m[03/15 13:13:49 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:03:30 (0.072350 s / img per device, on 1 devices)
[32m[03/15 13:13:49 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[03/15 13:13:49 d2.evaluation.coco_evaluation]: [0mSaving results to ./output/coco_instances_results.json
[32m[03/15 13:13:49 d2.evaluation.coco_evaluation]: [0mEvaluating predictions ...
Loading and preparing results...
DONE (t=0.16s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=4.60s).
Accumulating evaluation results...
DONE (t=0.51s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.600
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.820
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.705
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.307
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.671
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.769
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.203
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.662
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.667
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.432
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.724
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.815
[32m[03/15 13:13:54 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 60.004 | 81.956 | 70.482 | 30.686 | 67.060 | 76.908 |
[32m[03/15 13:13:54 d2.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category   | AP   | category   | AP     | category   | AP     |
|:-----------|:-----|:-----------|:-------|:-----------|:-------|
| None       | nan  | Car        | 67.564 | Pedestrian | 52.444 |
