Metadata(name='KITTI_MOTS_train', thing_classes=['None', 'Car', 'Pedestrian'])
Loading sequence 0000
Loading sequence 0001
Loading sequence 0002
Loading sequence 0003
Loading sequence 0004
Loading sequence 0005
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0009
Loading sequence 0010
Loading sequence 0011
Loading sequence 0012
Loading sequence 0013
Loading sequence 0014
Loading sequence 0015
Loading sequence 0016
Loading sequence 0017
Loading sequence 0018
Loading sequence 0019
Loading sequence 0020
0000
0001
0002
0003
0004
0005
0006
0007
0008
0009
0010
0011
0012
0013
0014
0015
0016
0017
0018
0019
0020
Loaded 5549 images!
[32m[03/14 17:58:19 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=12, bias=True)
    )
  )
)
Loading sequence 0000
Loading sequence 0001
Loading sequence 0002
Loading sequence 0003
Loading sequence 0004
Loading sequence 0005
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0009
Loading sequence 0010
Loading sequence 0011
Loading sequence 0012
Loading sequence 0013
Loading sequence 0014
Loading sequence 0015
Loading sequence 0016
Loading sequence 0017
Loading sequence 0018
Loading sequence 0019
Loading sequence 0020
0000
0001
0002
0003
0004
0005
0006
0007
0008
0009
0010
0011
0012
0013
0014
0015
0016
0017
0018
0019
0020
Loaded 5549 images!
[32m[03/14 17:59:17 d2.data.build]: [0mRemoved 530 images with no usable annotations. 5019 images left.
[32m[03/14 17:59:17 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    None    | 0            |    Car     | 18839        | Pedestrian | 8015         |
|            |              |            |              |            |              |
|   total    | 26854        |            |              |            |              |[0m
[32m[03/14 17:59:17 d2.data.common]: [0mSerializing 5019 elements to byte tensors and concatenating them all ...
[32m[03/14 17:59:17 d2.data.common]: [0mSerialized dataset takes 3.92 MiB
[32m[03/14 17:59:17 d2.data.detection_utils]: [0mTransformGens used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[03/14 17:59:17 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[03/14 17:59:18 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[03/14 17:59:25 d2.utils.events]: [0m eta: 0:22:32  iter: 19  total_loss: 2.055  loss_cls: 1.262  loss_box_reg: 0.740  loss_rpn_cls: 0.052  loss_rpn_loc: 0.018  time: 0.2719  data_time: 0.0167  lr: 0.000005  max_mem: 2337M
[32m[03/14 17:59:30 d2.utils.events]: [0m eta: 0:22:24  iter: 39  total_loss: 1.996  loss_cls: 1.201  loss_box_reg: 0.698  loss_rpn_cls: 0.050  loss_rpn_loc: 0.022  time: 0.2713  data_time: 0.0041  lr: 0.000010  max_mem: 2337M
[32m[03/14 17:59:36 d2.utils.events]: [0m eta: 0:22:23  iter: 59  total_loss: 1.782  loss_cls: 1.046  loss_box_reg: 0.670  loss_rpn_cls: 0.044  loss_rpn_loc: 0.020  time: 0.2717  data_time: 0.0039  lr: 0.000015  max_mem: 2337M
[32m[03/14 17:59:41 d2.utils.events]: [0m eta: 0:22:18  iter: 79  total_loss: 1.671  loss_cls: 0.910  loss_box_reg: 0.633  loss_rpn_cls: 0.036  loss_rpn_loc: 0.018  time: 0.2721  data_time: 0.0039  lr: 0.000020  max_mem: 2337M
[32m[03/14 17:59:47 d2.utils.events]: [0m eta: 0:22:13  iter: 99  total_loss: 1.551  loss_cls: 0.745  loss_box_reg: 0.691  loss_rpn_cls: 0.042  loss_rpn_loc: 0.015  time: 0.2725  data_time: 0.0041  lr: 0.000025  max_mem: 2337M
[32m[03/14 17:59:52 d2.utils.events]: [0m eta: 0:22:10  iter: 119  total_loss: 1.369  loss_cls: 0.636  loss_box_reg: 0.726  loss_rpn_cls: 0.050  loss_rpn_loc: 0.025  time: 0.2727  data_time: 0.0039  lr: 0.000030  max_mem: 2337M
[32m[03/14 17:59:58 d2.utils.events]: [0m eta: 0:22:05  iter: 139  total_loss: 1.404  loss_cls: 0.568  loss_box_reg: 0.739  loss_rpn_cls: 0.058  loss_rpn_loc: 0.031  time: 0.2728  data_time: 0.0037  lr: 0.000035  max_mem: 2337M
[32m[03/14 18:00:03 d2.utils.events]: [0m eta: 0:22:02  iter: 159  total_loss: 1.123  loss_cls: 0.468  loss_box_reg: 0.634  loss_rpn_cls: 0.023  loss_rpn_loc: 0.016  time: 0.2730  data_time: 0.0041  lr: 0.000040  max_mem: 2337M
[32m[03/14 18:00:09 d2.utils.events]: [0m eta: 0:21:57  iter: 179  total_loss: 1.126  loss_cls: 0.463  loss_box_reg: 0.601  loss_rpn_cls: 0.038  loss_rpn_loc: 0.024  time: 0.2732  data_time: 0.0041  lr: 0.000045  max_mem: 2337M
[32m[03/14 18:00:14 d2.utils.events]: [0m eta: 0:21:53  iter: 199  total_loss: 1.385  loss_cls: 0.502  loss_box_reg: 0.799  loss_rpn_cls: 0.033  loss_rpn_loc: 0.022  time: 0.2735  data_time: 0.0041  lr: 0.000050  max_mem: 2337M
[32m[03/14 18:00:20 d2.utils.events]: [0m eta: 0:21:49  iter: 219  total_loss: 1.016  loss_cls: 0.353  loss_box_reg: 0.564  loss_rpn_cls: 0.023  loss_rpn_loc: 0.021  time: 0.2736  data_time: 0.0041  lr: 0.000055  max_mem: 2337M
[32m[03/14 18:00:25 d2.utils.events]: [0m eta: 0:21:44  iter: 239  total_loss: 1.114  loss_cls: 0.387  loss_box_reg: 0.683  loss_rpn_cls: 0.041  loss_rpn_loc: 0.024  time: 0.2738  data_time: 0.0040  lr: 0.000060  max_mem: 2337M
[32m[03/14 18:00:31 d2.utils.events]: [0m eta: 0:21:40  iter: 259  total_loss: 1.077  loss_cls: 0.332  loss_box_reg: 0.686  loss_rpn_cls: 0.023  loss_rpn_loc: 0.020  time: 0.2740  data_time: 0.0039  lr: 0.000065  max_mem: 2337M
[32m[03/14 18:00:36 d2.utils.events]: [0m eta: 0:21:35  iter: 279  total_loss: 1.120  loss_cls: 0.329  loss_box_reg: 0.724  loss_rpn_cls: 0.034  loss_rpn_loc: 0.030  time: 0.2742  data_time: 0.0040  lr: 0.000070  max_mem: 2337M
[32m[03/14 18:00:42 d2.utils.events]: [0m eta: 0:21:30  iter: 299  total_loss: 0.884  loss_cls: 0.241  loss_box_reg: 0.534  loss_rpn_cls: 0.015  loss_rpn_loc: 0.016  time: 0.2743  data_time: 0.0039  lr: 0.000075  max_mem: 2337M
[32m[03/14 18:00:47 d2.utils.events]: [0m eta: 0:21:24  iter: 319  total_loss: 0.848  loss_cls: 0.192  loss_box_reg: 0.572  loss_rpn_cls: 0.016  loss_rpn_loc: 0.020  time: 0.2744  data_time: 0.0041  lr: 0.000080  max_mem: 2337M
[32m[03/14 18:00:53 d2.utils.events]: [0m eta: 0:21:19  iter: 339  total_loss: 0.762  loss_cls: 0.211  loss_box_reg: 0.539  loss_rpn_cls: 0.017  loss_rpn_loc: 0.017  time: 0.2746  data_time: 0.0041  lr: 0.000085  max_mem: 2337M
[32m[03/14 18:00:58 d2.utils.events]: [0m eta: 0:21:15  iter: 359  total_loss: 0.889  loss_cls: 0.240  loss_box_reg: 0.565  loss_rpn_cls: 0.024  loss_rpn_loc: 0.014  time: 0.2748  data_time: 0.0039  lr: 0.000090  max_mem: 2337M
[32m[03/14 18:01:04 d2.utils.events]: [0m eta: 0:21:10  iter: 379  total_loss: 0.741  loss_cls: 0.235  loss_box_reg: 0.478  loss_rpn_cls: 0.014  loss_rpn_loc: 0.015  time: 0.2749  data_time: 0.0041  lr: 0.000095  max_mem: 2337M
[32m[03/14 18:01:10 d2.utils.events]: [0m eta: 0:21:05  iter: 399  total_loss: 0.641  loss_cls: 0.196  loss_box_reg: 0.413  loss_rpn_cls: 0.010  loss_rpn_loc: 0.010  time: 0.2751  data_time: 0.0039  lr: 0.000100  max_mem: 2337M
[32m[03/14 18:01:15 d2.utils.events]: [0m eta: 0:21:01  iter: 419  total_loss: 0.816  loss_cls: 0.229  loss_box_reg: 0.487  loss_rpn_cls: 0.026  loss_rpn_loc: 0.029  time: 0.2754  data_time: 0.0046  lr: 0.000105  max_mem: 2337M
[32m[03/14 18:01:21 d2.utils.events]: [0m eta: 0:20:56  iter: 439  total_loss: 0.537  loss_cls: 0.173  loss_box_reg: 0.377  loss_rpn_cls: 0.019  loss_rpn_loc: 0.019  time: 0.2755  data_time: 0.0040  lr: 0.000110  max_mem: 2337M
[32m[03/14 18:01:26 d2.utils.events]: [0m eta: 0:20:52  iter: 459  total_loss: 0.653  loss_cls: 0.196  loss_box_reg: 0.403  loss_rpn_cls: 0.033  loss_rpn_loc: 0.028  time: 0.2756  data_time: 0.0043  lr: 0.000115  max_mem: 2337M
[32m[03/14 18:01:32 d2.utils.events]: [0m eta: 0:20:47  iter: 479  total_loss: 0.582  loss_cls: 0.189  loss_box_reg: 0.345  loss_rpn_cls: 0.022  loss_rpn_loc: 0.022  time: 0.2758  data_time: 0.0040  lr: 0.000120  max_mem: 2337M
[32m[03/14 18:01:38 d2.utils.events]: [0m eta: 0:20:42  iter: 499  total_loss: 0.682  loss_cls: 0.187  loss_box_reg: 0.394  loss_rpn_cls: 0.023  loss_rpn_loc: 0.023  time: 0.2759  data_time: 0.0043  lr: 0.000125  max_mem: 2337M
[32m[03/14 18:01:43 d2.utils.events]: [0m eta: 0:20:37  iter: 519  total_loss: 0.587  loss_cls: 0.179  loss_box_reg: 0.339  loss_rpn_cls: 0.023  loss_rpn_loc: 0.032  time: 0.2761  data_time: 0.0040  lr: 0.000130  max_mem: 2337M
[32m[03/14 18:01:49 d2.utils.events]: [0m eta: 0:20:32  iter: 539  total_loss: 0.613  loss_cls: 0.161  loss_box_reg: 0.277  loss_rpn_cls: 0.027  loss_rpn_loc: 0.018  time: 0.2762  data_time: 0.0044  lr: 0.000135  max_mem: 2337M
[32m[03/14 18:01:54 d2.utils.events]: [0m eta: 0:20:27  iter: 559  total_loss: 0.504  loss_cls: 0.156  loss_box_reg: 0.314  loss_rpn_cls: 0.015  loss_rpn_loc: 0.017  time: 0.2763  data_time: 0.0043  lr: 0.000140  max_mem: 2337M
[32m[03/14 18:02:00 d2.utils.events]: [0m eta: 0:20:22  iter: 579  total_loss: 0.468  loss_cls: 0.130  loss_box_reg: 0.292  loss_rpn_cls: 0.018  loss_rpn_loc: 0.016  time: 0.2764  data_time: 0.0042  lr: 0.000145  max_mem: 2337M
[32m[03/14 18:02:06 d2.utils.events]: [0m eta: 0:20:17  iter: 599  total_loss: 0.516  loss_cls: 0.155  loss_box_reg: 0.313  loss_rpn_cls: 0.021  loss_rpn_loc: 0.024  time: 0.2765  data_time: 0.0039  lr: 0.000150  max_mem: 2337M
[32m[03/14 18:02:11 d2.utils.events]: [0m eta: 0:20:12  iter: 619  total_loss: 0.410  loss_cls: 0.131  loss_box_reg: 0.263  loss_rpn_cls: 0.017  loss_rpn_loc: 0.019  time: 0.2766  data_time: 0.0042  lr: 0.000155  max_mem: 2337M
[32m[03/14 18:02:17 d2.utils.events]: [0m eta: 0:20:07  iter: 639  total_loss: 0.429  loss_cls: 0.133  loss_box_reg: 0.252  loss_rpn_cls: 0.022  loss_rpn_loc: 0.017  time: 0.2767  data_time: 0.0040  lr: 0.000160  max_mem: 2337M
[32m[03/14 18:02:22 d2.utils.events]: [0m eta: 0:20:02  iter: 659  total_loss: 0.419  loss_cls: 0.128  loss_box_reg: 0.249  loss_rpn_cls: 0.012  loss_rpn_loc: 0.014  time: 0.2768  data_time: 0.0039  lr: 0.000165  max_mem: 2337M
[32m[03/14 18:02:28 d2.utils.events]: [0m eta: 0:19:57  iter: 679  total_loss: 0.447  loss_cls: 0.150  loss_box_reg: 0.293  loss_rpn_cls: 0.011  loss_rpn_loc: 0.023  time: 0.2768  data_time: 0.0037  lr: 0.000170  max_mem: 2337M
[32m[03/14 18:02:34 d2.utils.events]: [0m eta: 0:19:52  iter: 699  total_loss: 0.596  loss_cls: 0.169  loss_box_reg: 0.351  loss_rpn_cls: 0.024  loss_rpn_loc: 0.029  time: 0.2769  data_time: 0.0039  lr: 0.000175  max_mem: 2337M
[32m[03/14 18:02:39 d2.utils.events]: [0m eta: 0:19:47  iter: 719  total_loss: 0.508  loss_cls: 0.124  loss_box_reg: 0.271  loss_rpn_cls: 0.022  loss_rpn_loc: 0.029  time: 0.2770  data_time: 0.0040  lr: 0.000180  max_mem: 2337M
[32m[03/14 18:02:45 d2.utils.events]: [0m eta: 0:19:41  iter: 739  total_loss: 0.464  loss_cls: 0.110  loss_box_reg: 0.266  loss_rpn_cls: 0.020  loss_rpn_loc: 0.020  time: 0.2770  data_time: 0.0038  lr: 0.000185  max_mem: 2337M
[32m[03/14 18:02:50 d2.utils.events]: [0m eta: 0:19:36  iter: 759  total_loss: 0.488  loss_cls: 0.127  loss_box_reg: 0.269  loss_rpn_cls: 0.022  loss_rpn_loc: 0.031  time: 0.2771  data_time: 0.0042  lr: 0.000190  max_mem: 2337M
[32m[03/14 18:02:56 d2.utils.events]: [0m eta: 0:19:31  iter: 779  total_loss: 0.406  loss_cls: 0.124  loss_box_reg: 0.241  loss_rpn_cls: 0.013  loss_rpn_loc: 0.016  time: 0.2773  data_time: 0.0051  lr: 0.000195  max_mem: 2337M
[32m[03/14 18:03:02 d2.utils.events]: [0m eta: 0:19:26  iter: 799  total_loss: 0.476  loss_cls: 0.139  loss_box_reg: 0.289  loss_rpn_cls: 0.020  loss_rpn_loc: 0.015  time: 0.2773  data_time: 0.0039  lr: 0.000200  max_mem: 2337M
[32m[03/14 18:03:07 d2.utils.events]: [0m eta: 0:19:21  iter: 819  total_loss: 0.350  loss_cls: 0.102  loss_box_reg: 0.222  loss_rpn_cls: 0.018  loss_rpn_loc: 0.011  time: 0.2775  data_time: 0.0040  lr: 0.000205  max_mem: 2337M
[32m[03/14 18:03:13 d2.utils.events]: [0m eta: 0:19:15  iter: 839  total_loss: 0.427  loss_cls: 0.131  loss_box_reg: 0.248  loss_rpn_cls: 0.010  loss_rpn_loc: 0.023  time: 0.2775  data_time: 0.0043  lr: 0.000210  max_mem: 2337M
[32m[03/14 18:03:19 d2.utils.events]: [0m eta: 0:19:10  iter: 859  total_loss: 0.555  loss_cls: 0.172  loss_box_reg: 0.265  loss_rpn_cls: 0.030  loss_rpn_loc: 0.025  time: 0.2776  data_time: 0.0041  lr: 0.000215  max_mem: 2337M
[32m[03/14 18:03:24 d2.utils.events]: [0m eta: 0:19:05  iter: 879  total_loss: 0.374  loss_cls: 0.102  loss_box_reg: 0.221  loss_rpn_cls: 0.016  loss_rpn_loc: 0.029  time: 0.2777  data_time: 0.0042  lr: 0.000220  max_mem: 2337M
[32m[03/14 18:03:30 d2.utils.events]: [0m eta: 0:18:59  iter: 899  total_loss: 0.462  loss_cls: 0.133  loss_box_reg: 0.228  loss_rpn_cls: 0.023  loss_rpn_loc: 0.025  time: 0.2778  data_time: 0.0040  lr: 0.000225  max_mem: 2337M
[32m[03/14 18:03:35 d2.utils.events]: [0m eta: 0:18:54  iter: 919  total_loss: 0.397  loss_cls: 0.124  loss_box_reg: 0.213  loss_rpn_cls: 0.014  loss_rpn_loc: 0.019  time: 0.2778  data_time: 0.0041  lr: 0.000230  max_mem: 2337M
[32m[03/14 18:03:41 d2.utils.events]: [0m eta: 0:18:49  iter: 939  total_loss: 0.429  loss_cls: 0.123  loss_box_reg: 0.236  loss_rpn_cls: 0.019  loss_rpn_loc: 0.022  time: 0.2779  data_time: 0.0043  lr: 0.000235  max_mem: 2337M
[32m[03/14 18:03:47 d2.utils.events]: [0m eta: 0:18:43  iter: 959  total_loss: 0.380  loss_cls: 0.120  loss_box_reg: 0.230  loss_rpn_cls: 0.021  loss_rpn_loc: 0.019  time: 0.2781  data_time: 0.0040  lr: 0.000240  max_mem: 2337M
[32m[03/14 18:03:52 d2.utils.events]: [0m eta: 0:18:38  iter: 979  total_loss: 0.488  loss_cls: 0.137  loss_box_reg: 0.262  loss_rpn_cls: 0.018  loss_rpn_loc: 0.020  time: 0.2781  data_time: 0.0038  lr: 0.000245  max_mem: 2337M
[32m[03/14 18:03:58 d2.utils.events]: [0m eta: 0:18:33  iter: 999  total_loss: 0.352  loss_cls: 0.109  loss_box_reg: 0.228  loss_rpn_cls: 0.016  loss_rpn_loc: 0.012  time: 0.2782  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:04:04 d2.utils.events]: [0m eta: 0:18:28  iter: 1019  total_loss: 0.421  loss_cls: 0.118  loss_box_reg: 0.250  loss_rpn_cls: 0.013  loss_rpn_loc: 0.025  time: 0.2783  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:04:09 d2.utils.events]: [0m eta: 0:18:23  iter: 1039  total_loss: 0.334  loss_cls: 0.096  loss_box_reg: 0.189  loss_rpn_cls: 0.012  loss_rpn_loc: 0.011  time: 0.2784  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:04:15 d2.utils.events]: [0m eta: 0:18:17  iter: 1059  total_loss: 0.428  loss_cls: 0.112  loss_box_reg: 0.283  loss_rpn_cls: 0.016  loss_rpn_loc: 0.026  time: 0.2785  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:04:21 d2.utils.events]: [0m eta: 0:18:12  iter: 1079  total_loss: 0.327  loss_cls: 0.096  loss_box_reg: 0.184  loss_rpn_cls: 0.010  loss_rpn_loc: 0.012  time: 0.2785  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:04:26 d2.utils.events]: [0m eta: 0:18:07  iter: 1099  total_loss: 0.423  loss_cls: 0.123  loss_box_reg: 0.244  loss_rpn_cls: 0.016  loss_rpn_loc: 0.024  time: 0.2786  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:04:32 d2.utils.events]: [0m eta: 0:18:02  iter: 1119  total_loss: 0.345  loss_cls: 0.110  loss_box_reg: 0.199  loss_rpn_cls: 0.013  loss_rpn_loc: 0.014  time: 0.2787  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:04:38 d2.utils.events]: [0m eta: 0:17:57  iter: 1139  total_loss: 0.452  loss_cls: 0.131  loss_box_reg: 0.241  loss_rpn_cls: 0.018  loss_rpn_loc: 0.019  time: 0.2787  data_time: 0.0043  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:04:43 d2.utils.events]: [0m eta: 0:17:52  iter: 1159  total_loss: 0.440  loss_cls: 0.132  loss_box_reg: 0.253  loss_rpn_cls: 0.018  loss_rpn_loc: 0.021  time: 0.2788  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:04:49 d2.utils.events]: [0m eta: 0:17:46  iter: 1179  total_loss: 0.385  loss_cls: 0.118  loss_box_reg: 0.243  loss_rpn_cls: 0.014  loss_rpn_loc: 0.017  time: 0.2788  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:04:55 d2.utils.events]: [0m eta: 0:17:41  iter: 1199  total_loss: 0.323  loss_cls: 0.102  loss_box_reg: 0.171  loss_rpn_cls: 0.013  loss_rpn_loc: 0.020  time: 0.2788  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:05:00 d2.utils.events]: [0m eta: 0:17:36  iter: 1219  total_loss: 0.409  loss_cls: 0.104  loss_box_reg: 0.259  loss_rpn_cls: 0.015  loss_rpn_loc: 0.029  time: 0.2789  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:05:06 d2.utils.events]: [0m eta: 0:17:30  iter: 1239  total_loss: 0.395  loss_cls: 0.114  loss_box_reg: 0.230  loss_rpn_cls: 0.012  loss_rpn_loc: 0.019  time: 0.2790  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:05:12 d2.utils.events]: [0m eta: 0:17:25  iter: 1259  total_loss: 0.294  loss_cls: 0.099  loss_box_reg: 0.185  loss_rpn_cls: 0.013  loss_rpn_loc: 0.012  time: 0.2790  data_time: 0.0046  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:05:17 d2.utils.events]: [0m eta: 0:17:20  iter: 1279  total_loss: 0.347  loss_cls: 0.106  loss_box_reg: 0.218  loss_rpn_cls: 0.010  loss_rpn_loc: 0.018  time: 0.2790  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:05:23 d2.utils.events]: [0m eta: 0:17:15  iter: 1299  total_loss: 0.373  loss_cls: 0.119  loss_box_reg: 0.247  loss_rpn_cls: 0.011  loss_rpn_loc: 0.016  time: 0.2791  data_time: 0.0047  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:05:29 d2.utils.events]: [0m eta: 0:17:10  iter: 1319  total_loss: 0.419  loss_cls: 0.116  loss_box_reg: 0.268  loss_rpn_cls: 0.014  loss_rpn_loc: 0.022  time: 0.2792  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:05:34 d2.utils.events]: [0m eta: 0:17:04  iter: 1339  total_loss: 0.417  loss_cls: 0.113  loss_box_reg: 0.253  loss_rpn_cls: 0.016  loss_rpn_loc: 0.017  time: 0.2792  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:05:40 d2.utils.events]: [0m eta: 0:16:59  iter: 1359  total_loss: 0.478  loss_cls: 0.134  loss_box_reg: 0.246  loss_rpn_cls: 0.022  loss_rpn_loc: 0.031  time: 0.2793  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:05:46 d2.utils.events]: [0m eta: 0:16:54  iter: 1379  total_loss: 0.387  loss_cls: 0.115  loss_box_reg: 0.217  loss_rpn_cls: 0.010  loss_rpn_loc: 0.014  time: 0.2793  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:05:51 d2.utils.events]: [0m eta: 0:16:49  iter: 1399  total_loss: 0.376  loss_cls: 0.128  loss_box_reg: 0.197  loss_rpn_cls: 0.013  loss_rpn_loc: 0.031  time: 0.2794  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:05:57 d2.utils.events]: [0m eta: 0:16:43  iter: 1419  total_loss: 0.404  loss_cls: 0.127  loss_box_reg: 0.228  loss_rpn_cls: 0.018  loss_rpn_loc: 0.017  time: 0.2794  data_time: 0.0037  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:06:03 d2.utils.events]: [0m eta: 0:16:38  iter: 1439  total_loss: 0.445  loss_cls: 0.120  loss_box_reg: 0.259  loss_rpn_cls: 0.015  loss_rpn_loc: 0.028  time: 0.2794  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:06:08 d2.utils.events]: [0m eta: 0:16:32  iter: 1459  total_loss: 0.326  loss_cls: 0.092  loss_box_reg: 0.194  loss_rpn_cls: 0.014  loss_rpn_loc: 0.018  time: 0.2795  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:06:14 d2.utils.events]: [0m eta: 0:16:27  iter: 1479  total_loss: 0.370  loss_cls: 0.102  loss_box_reg: 0.215  loss_rpn_cls: 0.010  loss_rpn_loc: 0.013  time: 0.2795  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:06:20 d2.utils.events]: [0m eta: 0:16:21  iter: 1499  total_loss: 0.468  loss_cls: 0.140  loss_box_reg: 0.276  loss_rpn_cls: 0.014  loss_rpn_loc: 0.022  time: 0.2795  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:06:25 d2.utils.events]: [0m eta: 0:16:16  iter: 1519  total_loss: 0.316  loss_cls: 0.091  loss_box_reg: 0.195  loss_rpn_cls: 0.011  loss_rpn_loc: 0.016  time: 0.2796  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:06:31 d2.utils.events]: [0m eta: 0:16:10  iter: 1539  total_loss: 0.419  loss_cls: 0.129  loss_box_reg: 0.259  loss_rpn_cls: 0.017  loss_rpn_loc: 0.022  time: 0.2796  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:06:37 d2.utils.events]: [0m eta: 0:16:04  iter: 1559  total_loss: 0.367  loss_cls: 0.113  loss_box_reg: 0.223  loss_rpn_cls: 0.012  loss_rpn_loc: 0.020  time: 0.2796  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:06:42 d2.utils.events]: [0m eta: 0:15:59  iter: 1579  total_loss: 0.470  loss_cls: 0.138  loss_box_reg: 0.265  loss_rpn_cls: 0.015  loss_rpn_loc: 0.027  time: 0.2798  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:06:48 d2.utils.events]: [0m eta: 0:15:54  iter: 1599  total_loss: 0.453  loss_cls: 0.131  loss_box_reg: 0.262  loss_rpn_cls: 0.016  loss_rpn_loc: 0.032  time: 0.2798  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:06:54 d2.utils.events]: [0m eta: 0:15:48  iter: 1619  total_loss: 0.411  loss_cls: 0.120  loss_box_reg: 0.250  loss_rpn_cls: 0.017  loss_rpn_loc: 0.027  time: 0.2798  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:06:59 d2.utils.events]: [0m eta: 0:15:42  iter: 1639  total_loss: 0.306  loss_cls: 0.096  loss_box_reg: 0.192  loss_rpn_cls: 0.007  loss_rpn_loc: 0.012  time: 0.2799  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:07:05 d2.utils.events]: [0m eta: 0:15:37  iter: 1659  total_loss: 0.373  loss_cls: 0.113  loss_box_reg: 0.229  loss_rpn_cls: 0.014  loss_rpn_loc: 0.017  time: 0.2799  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:07:11 d2.utils.events]: [0m eta: 0:15:31  iter: 1679  total_loss: 0.390  loss_cls: 0.119  loss_box_reg: 0.230  loss_rpn_cls: 0.014  loss_rpn_loc: 0.017  time: 0.2799  data_time: 0.0051  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:07:16 d2.utils.events]: [0m eta: 0:15:26  iter: 1699  total_loss: 0.396  loss_cls: 0.128  loss_box_reg: 0.217  loss_rpn_cls: 0.010  loss_rpn_loc: 0.023  time: 0.2799  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:07:22 d2.utils.events]: [0m eta: 0:15:20  iter: 1719  total_loss: 0.404  loss_cls: 0.114  loss_box_reg: 0.247  loss_rpn_cls: 0.014  loss_rpn_loc: 0.025  time: 0.2800  data_time: 0.0043  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:07:28 d2.utils.events]: [0m eta: 0:15:15  iter: 1739  total_loss: 0.425  loss_cls: 0.124  loss_box_reg: 0.246  loss_rpn_cls: 0.012  loss_rpn_loc: 0.020  time: 0.2801  data_time: 0.0043  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:07:33 d2.utils.events]: [0m eta: 0:15:09  iter: 1759  total_loss: 0.402  loss_cls: 0.111  loss_box_reg: 0.230  loss_rpn_cls: 0.012  loss_rpn_loc: 0.018  time: 0.2801  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:07:39 d2.utils.events]: [0m eta: 0:15:03  iter: 1779  total_loss: 0.320  loss_cls: 0.098  loss_box_reg: 0.185  loss_rpn_cls: 0.018  loss_rpn_loc: 0.020  time: 0.2801  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:07:45 d2.utils.events]: [0m eta: 0:14:58  iter: 1799  total_loss: 0.364  loss_cls: 0.129  loss_box_reg: 0.207  loss_rpn_cls: 0.013  loss_rpn_loc: 0.020  time: 0.2801  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:07:50 d2.utils.events]: [0m eta: 0:14:52  iter: 1819  total_loss: 0.310  loss_cls: 0.089  loss_box_reg: 0.188  loss_rpn_cls: 0.008  loss_rpn_loc: 0.009  time: 0.2801  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:07:56 d2.utils.events]: [0m eta: 0:14:46  iter: 1839  total_loss: 0.346  loss_cls: 0.108  loss_box_reg: 0.211  loss_rpn_cls: 0.007  loss_rpn_loc: 0.012  time: 0.2801  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:08:01 d2.utils.events]: [0m eta: 0:14:41  iter: 1859  total_loss: 0.346  loss_cls: 0.111  loss_box_reg: 0.214  loss_rpn_cls: 0.007  loss_rpn_loc: 0.016  time: 0.2801  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:08:07 d2.utils.events]: [0m eta: 0:14:35  iter: 1879  total_loss: 0.313  loss_cls: 0.092  loss_box_reg: 0.179  loss_rpn_cls: 0.013  loss_rpn_loc: 0.018  time: 0.2801  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:08:13 d2.utils.events]: [0m eta: 0:14:30  iter: 1899  total_loss: 0.425  loss_cls: 0.134  loss_box_reg: 0.246  loss_rpn_cls: 0.010  loss_rpn_loc: 0.021  time: 0.2802  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:08:18 d2.utils.events]: [0m eta: 0:14:24  iter: 1919  total_loss: 0.393  loss_cls: 0.103  loss_box_reg: 0.211  loss_rpn_cls: 0.015  loss_rpn_loc: 0.021  time: 0.2802  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:08:24 d2.utils.events]: [0m eta: 0:14:18  iter: 1939  total_loss: 0.372  loss_cls: 0.114  loss_box_reg: 0.238  loss_rpn_cls: 0.011  loss_rpn_loc: 0.019  time: 0.2802  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:08:30 d2.utils.events]: [0m eta: 0:14:13  iter: 1959  total_loss: 0.316  loss_cls: 0.087  loss_box_reg: 0.175  loss_rpn_cls: 0.008  loss_rpn_loc: 0.010  time: 0.2802  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:08:35 d2.utils.events]: [0m eta: 0:14:07  iter: 1979  total_loss: 0.374  loss_cls: 0.111  loss_box_reg: 0.186  loss_rpn_cls: 0.012  loss_rpn_loc: 0.019  time: 0.2803  data_time: 0.0043  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:08:41 d2.utils.events]: [0m eta: 0:14:02  iter: 1999  total_loss: 0.419  loss_cls: 0.131  loss_box_reg: 0.228  loss_rpn_cls: 0.012  loss_rpn_loc: 0.022  time: 0.2803  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:08:47 d2.utils.events]: [0m eta: 0:13:56  iter: 2019  total_loss: 0.367  loss_cls: 0.120  loss_box_reg: 0.206  loss_rpn_cls: 0.015  loss_rpn_loc: 0.017  time: 0.2803  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:08:52 d2.utils.events]: [0m eta: 0:13:50  iter: 2039  total_loss: 0.445  loss_cls: 0.128  loss_box_reg: 0.281  loss_rpn_cls: 0.009  loss_rpn_loc: 0.018  time: 0.2803  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:08:58 d2.utils.events]: [0m eta: 0:13:45  iter: 2059  total_loss: 0.297  loss_cls: 0.098  loss_box_reg: 0.194  loss_rpn_cls: 0.011  loss_rpn_loc: 0.013  time: 0.2803  data_time: 0.0043  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:09:04 d2.utils.events]: [0m eta: 0:13:39  iter: 2079  total_loss: 0.417  loss_cls: 0.111  loss_box_reg: 0.263  loss_rpn_cls: 0.011  loss_rpn_loc: 0.019  time: 0.2803  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:09:09 d2.utils.events]: [0m eta: 0:13:34  iter: 2099  total_loss: 0.379  loss_cls: 0.126  loss_box_reg: 0.234  loss_rpn_cls: 0.011  loss_rpn_loc: 0.018  time: 0.2804  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:09:15 d2.utils.events]: [0m eta: 0:13:28  iter: 2119  total_loss: 0.340  loss_cls: 0.102  loss_box_reg: 0.210  loss_rpn_cls: 0.011  loss_rpn_loc: 0.020  time: 0.2804  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:09:21 d2.utils.events]: [0m eta: 0:13:22  iter: 2139  total_loss: 0.425  loss_cls: 0.127  loss_box_reg: 0.265  loss_rpn_cls: 0.011  loss_rpn_loc: 0.021  time: 0.2804  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:09:26 d2.utils.events]: [0m eta: 0:13:17  iter: 2159  total_loss: 0.369  loss_cls: 0.107  loss_box_reg: 0.223  loss_rpn_cls: 0.013  loss_rpn_loc: 0.021  time: 0.2804  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:09:32 d2.utils.events]: [0m eta: 0:13:11  iter: 2179  total_loss: 0.505  loss_cls: 0.126  loss_box_reg: 0.270  loss_rpn_cls: 0.014  loss_rpn_loc: 0.026  time: 0.2804  data_time: 0.0044  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:09:38 d2.utils.events]: [0m eta: 0:13:05  iter: 2199  total_loss: 0.339  loss_cls: 0.109  loss_box_reg: 0.199  loss_rpn_cls: 0.015  loss_rpn_loc: 0.018  time: 0.2805  data_time: 0.0045  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:09:43 d2.utils.events]: [0m eta: 0:13:00  iter: 2219  total_loss: 0.353  loss_cls: 0.113  loss_box_reg: 0.213  loss_rpn_cls: 0.013  loss_rpn_loc: 0.018  time: 0.2805  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:09:49 d2.utils.events]: [0m eta: 0:12:54  iter: 2239  total_loss: 0.383  loss_cls: 0.111  loss_box_reg: 0.208  loss_rpn_cls: 0.011  loss_rpn_loc: 0.019  time: 0.2805  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:09:55 d2.utils.events]: [0m eta: 0:12:49  iter: 2259  total_loss: 0.270  loss_cls: 0.082  loss_box_reg: 0.159  loss_rpn_cls: 0.010  loss_rpn_loc: 0.014  time: 0.2805  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:10:00 d2.utils.events]: [0m eta: 0:12:43  iter: 2279  total_loss: 0.388  loss_cls: 0.117  loss_box_reg: 0.222  loss_rpn_cls: 0.012  loss_rpn_loc: 0.021  time: 0.2805  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:10:06 d2.utils.events]: [0m eta: 0:12:38  iter: 2299  total_loss: 0.321  loss_cls: 0.100  loss_box_reg: 0.190  loss_rpn_cls: 0.011  loss_rpn_loc: 0.016  time: 0.2805  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:10:12 d2.utils.events]: [0m eta: 0:12:32  iter: 2319  total_loss: 0.398  loss_cls: 0.127  loss_box_reg: 0.231  loss_rpn_cls: 0.016  loss_rpn_loc: 0.026  time: 0.2805  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:10:17 d2.utils.events]: [0m eta: 0:12:26  iter: 2339  total_loss: 0.360  loss_cls: 0.098  loss_box_reg: 0.223  loss_rpn_cls: 0.009  loss_rpn_loc: 0.018  time: 0.2805  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:10:23 d2.utils.events]: [0m eta: 0:12:21  iter: 2359  total_loss: 0.325  loss_cls: 0.105  loss_box_reg: 0.177  loss_rpn_cls: 0.009  loss_rpn_loc: 0.012  time: 0.2806  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:10:28 d2.utils.events]: [0m eta: 0:12:15  iter: 2379  total_loss: 0.309  loss_cls: 0.088  loss_box_reg: 0.205  loss_rpn_cls: 0.008  loss_rpn_loc: 0.012  time: 0.2806  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:10:34 d2.utils.events]: [0m eta: 0:12:10  iter: 2399  total_loss: 0.382  loss_cls: 0.104  loss_box_reg: 0.227  loss_rpn_cls: 0.006  loss_rpn_loc: 0.020  time: 0.2806  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:10:40 d2.utils.events]: [0m eta: 0:12:04  iter: 2419  total_loss: 0.377  loss_cls: 0.120  loss_box_reg: 0.221  loss_rpn_cls: 0.012  loss_rpn_loc: 0.027  time: 0.2806  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:10:46 d2.utils.events]: [0m eta: 0:11:59  iter: 2439  total_loss: 0.425  loss_cls: 0.121  loss_box_reg: 0.235  loss_rpn_cls: 0.017  loss_rpn_loc: 0.025  time: 0.2806  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:10:51 d2.utils.events]: [0m eta: 0:11:53  iter: 2459  total_loss: 0.403  loss_cls: 0.133  loss_box_reg: 0.204  loss_rpn_cls: 0.014  loss_rpn_loc: 0.014  time: 0.2806  data_time: 0.0043  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:10:57 d2.utils.events]: [0m eta: 0:11:47  iter: 2479  total_loss: 0.397  loss_cls: 0.122  loss_box_reg: 0.221  loss_rpn_cls: 0.014  loss_rpn_loc: 0.023  time: 0.2806  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:11:02 d2.utils.events]: [0m eta: 0:11:42  iter: 2499  total_loss: 0.301  loss_cls: 0.103  loss_box_reg: 0.183  loss_rpn_cls: 0.010  loss_rpn_loc: 0.014  time: 0.2807  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:11:08 d2.utils.events]: [0m eta: 0:11:36  iter: 2519  total_loss: 0.313  loss_cls: 0.081  loss_box_reg: 0.189  loss_rpn_cls: 0.010  loss_rpn_loc: 0.018  time: 0.2807  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:11:14 d2.utils.events]: [0m eta: 0:11:30  iter: 2539  total_loss: 0.380  loss_cls: 0.098  loss_box_reg: 0.226  loss_rpn_cls: 0.013  loss_rpn_loc: 0.023  time: 0.2807  data_time: 0.0037  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:11:19 d2.utils.events]: [0m eta: 0:11:25  iter: 2559  total_loss: 0.355  loss_cls: 0.110  loss_box_reg: 0.213  loss_rpn_cls: 0.012  loss_rpn_loc: 0.015  time: 0.2807  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:11:25 d2.utils.events]: [0m eta: 0:11:19  iter: 2579  total_loss: 0.309  loss_cls: 0.091  loss_box_reg: 0.206  loss_rpn_cls: 0.010  loss_rpn_loc: 0.018  time: 0.2807  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:11:31 d2.utils.events]: [0m eta: 0:11:13  iter: 2599  total_loss: 0.338  loss_cls: 0.103  loss_box_reg: 0.216  loss_rpn_cls: 0.011  loss_rpn_loc: 0.018  time: 0.2807  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:11:36 d2.utils.events]: [0m eta: 0:11:08  iter: 2619  total_loss: 0.352  loss_cls: 0.102  loss_box_reg: 0.209  loss_rpn_cls: 0.008  loss_rpn_loc: 0.017  time: 0.2807  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:11:42 d2.utils.events]: [0m eta: 0:11:02  iter: 2639  total_loss: 0.337  loss_cls: 0.092  loss_box_reg: 0.190  loss_rpn_cls: 0.009  loss_rpn_loc: 0.019  time: 0.2807  data_time: 0.0043  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:11:48 d2.utils.events]: [0m eta: 0:10:56  iter: 2659  total_loss: 0.319  loss_cls: 0.092  loss_box_reg: 0.198  loss_rpn_cls: 0.008  loss_rpn_loc: 0.010  time: 0.2808  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:11:53 d2.utils.events]: [0m eta: 0:10:51  iter: 2679  total_loss: 0.316  loss_cls: 0.093  loss_box_reg: 0.196  loss_rpn_cls: 0.008  loss_rpn_loc: 0.016  time: 0.2808  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:11:59 d2.utils.events]: [0m eta: 0:10:45  iter: 2699  total_loss: 0.361  loss_cls: 0.102  loss_box_reg: 0.217  loss_rpn_cls: 0.011  loss_rpn_loc: 0.016  time: 0.2808  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:12:05 d2.utils.events]: [0m eta: 0:10:39  iter: 2719  total_loss: 0.379  loss_cls: 0.091  loss_box_reg: 0.220  loss_rpn_cls: 0.008  loss_rpn_loc: 0.021  time: 0.2808  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:12:10 d2.utils.events]: [0m eta: 0:10:34  iter: 2739  total_loss: 0.412  loss_cls: 0.117  loss_box_reg: 0.228  loss_rpn_cls: 0.013  loss_rpn_loc: 0.017  time: 0.2808  data_time: 0.0043  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:12:16 d2.utils.events]: [0m eta: 0:10:28  iter: 2759  total_loss: 0.404  loss_cls: 0.115  loss_box_reg: 0.216  loss_rpn_cls: 0.015  loss_rpn_loc: 0.026  time: 0.2808  data_time: 0.0044  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:12:22 d2.utils.events]: [0m eta: 0:10:23  iter: 2779  total_loss: 0.307  loss_cls: 0.091  loss_box_reg: 0.194  loss_rpn_cls: 0.009  loss_rpn_loc: 0.016  time: 0.2808  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:12:27 d2.utils.events]: [0m eta: 0:10:17  iter: 2799  total_loss: 0.277  loss_cls: 0.094  loss_box_reg: 0.175  loss_rpn_cls: 0.007  loss_rpn_loc: 0.015  time: 0.2808  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:12:33 d2.utils.events]: [0m eta: 0:10:11  iter: 2819  total_loss: 0.306  loss_cls: 0.082  loss_box_reg: 0.174  loss_rpn_cls: 0.008  loss_rpn_loc: 0.016  time: 0.2808  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:12:39 d2.utils.events]: [0m eta: 0:10:06  iter: 2839  total_loss: 0.340  loss_cls: 0.098  loss_box_reg: 0.203  loss_rpn_cls: 0.015  loss_rpn_loc: 0.026  time: 0.2809  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:12:44 d2.utils.events]: [0m eta: 0:10:00  iter: 2859  total_loss: 0.358  loss_cls: 0.099  loss_box_reg: 0.240  loss_rpn_cls: 0.011  loss_rpn_loc: 0.023  time: 0.2809  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:12:50 d2.utils.events]: [0m eta: 0:09:54  iter: 2879  total_loss: 0.312  loss_cls: 0.101  loss_box_reg: 0.200  loss_rpn_cls: 0.008  loss_rpn_loc: 0.019  time: 0.2809  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:12:56 d2.utils.events]: [0m eta: 0:09:49  iter: 2899  total_loss: 0.461  loss_cls: 0.103  loss_box_reg: 0.252  loss_rpn_cls: 0.018  loss_rpn_loc: 0.025  time: 0.2809  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:13:01 d2.utils.events]: [0m eta: 0:09:43  iter: 2919  total_loss: 0.269  loss_cls: 0.077  loss_box_reg: 0.170  loss_rpn_cls: 0.007  loss_rpn_loc: 0.017  time: 0.2809  data_time: 0.0044  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:13:07 d2.utils.events]: [0m eta: 0:09:38  iter: 2939  total_loss: 0.351  loss_cls: 0.103  loss_box_reg: 0.196  loss_rpn_cls: 0.008  loss_rpn_loc: 0.017  time: 0.2809  data_time: 0.0037  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:13:13 d2.utils.events]: [0m eta: 0:09:32  iter: 2959  total_loss: 0.384  loss_cls: 0.107  loss_box_reg: 0.223  loss_rpn_cls: 0.018  loss_rpn_loc: 0.019  time: 0.2809  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:13:18 d2.utils.events]: [0m eta: 0:09:26  iter: 2979  total_loss: 0.333  loss_cls: 0.097  loss_box_reg: 0.188  loss_rpn_cls: 0.007  loss_rpn_loc: 0.012  time: 0.2809  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:13:24 d2.utils.events]: [0m eta: 0:09:21  iter: 2999  total_loss: 0.405  loss_cls: 0.111  loss_box_reg: 0.242  loss_rpn_cls: 0.012  loss_rpn_loc: 0.020  time: 0.2809  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:13:30 d2.utils.events]: [0m eta: 0:09:15  iter: 3019  total_loss: 0.322  loss_cls: 0.090  loss_box_reg: 0.217  loss_rpn_cls: 0.006  loss_rpn_loc: 0.019  time: 0.2809  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:13:35 d2.utils.events]: [0m eta: 0:09:10  iter: 3039  total_loss: 0.353  loss_cls: 0.097  loss_box_reg: 0.213  loss_rpn_cls: 0.006  loss_rpn_loc: 0.016  time: 0.2810  data_time: 0.0043  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:13:41 d2.utils.events]: [0m eta: 0:09:04  iter: 3059  total_loss: 0.277  loss_cls: 0.089  loss_box_reg: 0.165  loss_rpn_cls: 0.006  loss_rpn_loc: 0.012  time: 0.2810  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:13:47 d2.utils.events]: [0m eta: 0:08:58  iter: 3079  total_loss: 0.265  loss_cls: 0.078  loss_box_reg: 0.171  loss_rpn_cls: 0.005  loss_rpn_loc: 0.014  time: 0.2810  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:13:52 d2.utils.events]: [0m eta: 0:08:53  iter: 3099  total_loss: 0.371  loss_cls: 0.111  loss_box_reg: 0.215  loss_rpn_cls: 0.013  loss_rpn_loc: 0.029  time: 0.2810  data_time: 0.0044  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:13:58 d2.utils.events]: [0m eta: 0:08:47  iter: 3119  total_loss: 0.396  loss_cls: 0.102  loss_box_reg: 0.209  loss_rpn_cls: 0.011  loss_rpn_loc: 0.031  time: 0.2810  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:14:04 d2.utils.events]: [0m eta: 0:08:42  iter: 3139  total_loss: 0.367  loss_cls: 0.101  loss_box_reg: 0.217  loss_rpn_cls: 0.010  loss_rpn_loc: 0.023  time: 0.2811  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:14:09 d2.utils.events]: [0m eta: 0:08:36  iter: 3159  total_loss: 0.271  loss_cls: 0.087  loss_box_reg: 0.154  loss_rpn_cls: 0.008  loss_rpn_loc: 0.015  time: 0.2811  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:14:15 d2.utils.events]: [0m eta: 0:08:30  iter: 3179  total_loss: 0.354  loss_cls: 0.105  loss_box_reg: 0.201  loss_rpn_cls: 0.007  loss_rpn_loc: 0.019  time: 0.2811  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:14:21 d2.utils.events]: [0m eta: 0:08:25  iter: 3199  total_loss: 0.341  loss_cls: 0.107  loss_box_reg: 0.217  loss_rpn_cls: 0.009  loss_rpn_loc: 0.023  time: 0.2811  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:14:26 d2.utils.events]: [0m eta: 0:08:19  iter: 3219  total_loss: 0.362  loss_cls: 0.103  loss_box_reg: 0.211  loss_rpn_cls: 0.014  loss_rpn_loc: 0.016  time: 0.2811  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:14:32 d2.utils.events]: [0m eta: 0:08:14  iter: 3239  total_loss: 0.353  loss_cls: 0.088  loss_box_reg: 0.220  loss_rpn_cls: 0.006  loss_rpn_loc: 0.017  time: 0.2811  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:14:38 d2.utils.events]: [0m eta: 0:08:08  iter: 3259  total_loss: 0.353  loss_cls: 0.091  loss_box_reg: 0.226  loss_rpn_cls: 0.011  loss_rpn_loc: 0.021  time: 0.2811  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:14:43 d2.utils.events]: [0m eta: 0:08:02  iter: 3279  total_loss: 0.272  loss_cls: 0.070  loss_box_reg: 0.166  loss_rpn_cls: 0.007  loss_rpn_loc: 0.014  time: 0.2811  data_time: 0.0044  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:14:49 d2.utils.events]: [0m eta: 0:07:57  iter: 3299  total_loss: 0.287  loss_cls: 0.092  loss_box_reg: 0.171  loss_rpn_cls: 0.006  loss_rpn_loc: 0.011  time: 0.2811  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:14:55 d2.utils.events]: [0m eta: 0:07:51  iter: 3319  total_loss: 0.387  loss_cls: 0.114  loss_box_reg: 0.251  loss_rpn_cls: 0.009  loss_rpn_loc: 0.021  time: 0.2811  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:15:01 d2.utils.events]: [0m eta: 0:07:46  iter: 3339  total_loss: 0.281  loss_cls: 0.095  loss_box_reg: 0.174  loss_rpn_cls: 0.009  loss_rpn_loc: 0.016  time: 0.2812  data_time: 0.0047  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:15:06 d2.utils.events]: [0m eta: 0:07:40  iter: 3359  total_loss: 0.275  loss_cls: 0.080  loss_box_reg: 0.157  loss_rpn_cls: 0.007  loss_rpn_loc: 0.013  time: 0.2812  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:15:12 d2.utils.events]: [0m eta: 0:07:34  iter: 3379  total_loss: 0.402  loss_cls: 0.108  loss_box_reg: 0.236  loss_rpn_cls: 0.008  loss_rpn_loc: 0.022  time: 0.2812  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:15:17 d2.utils.events]: [0m eta: 0:07:29  iter: 3399  total_loss: 0.297  loss_cls: 0.080  loss_box_reg: 0.186  loss_rpn_cls: 0.007  loss_rpn_loc: 0.012  time: 0.2812  data_time: 0.0041  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:15:23 d2.utils.events]: [0m eta: 0:07:23  iter: 3419  total_loss: 0.376  loss_cls: 0.107  loss_box_reg: 0.226  loss_rpn_cls: 0.008  loss_rpn_loc: 0.020  time: 0.2812  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:15:29 d2.utils.events]: [0m eta: 0:07:17  iter: 3439  total_loss: 0.419  loss_cls: 0.140  loss_box_reg: 0.255  loss_rpn_cls: 0.012  loss_rpn_loc: 0.024  time: 0.2812  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:15:35 d2.utils.events]: [0m eta: 0:07:12  iter: 3459  total_loss: 0.328  loss_cls: 0.088  loss_box_reg: 0.210  loss_rpn_cls: 0.011  loss_rpn_loc: 0.020  time: 0.2813  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:15:40 d2.utils.events]: [0m eta: 0:07:06  iter: 3479  total_loss: 0.382  loss_cls: 0.092  loss_box_reg: 0.229  loss_rpn_cls: 0.007  loss_rpn_loc: 0.020  time: 0.2813  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:15:46 d2.utils.events]: [0m eta: 0:07:01  iter: 3499  total_loss: 0.349  loss_cls: 0.098  loss_box_reg: 0.202  loss_rpn_cls: 0.012  loss_rpn_loc: 0.019  time: 0.2812  data_time: 0.0047  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:15:52 d2.utils.events]: [0m eta: 0:06:55  iter: 3519  total_loss: 0.324  loss_cls: 0.098  loss_box_reg: 0.194  loss_rpn_cls: 0.009  loss_rpn_loc: 0.017  time: 0.2813  data_time: 0.0046  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:15:57 d2.utils.events]: [0m eta: 0:06:49  iter: 3539  total_loss: 0.292  loss_cls: 0.085  loss_box_reg: 0.180  loss_rpn_cls: 0.005  loss_rpn_loc: 0.009  time: 0.2813  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:16:03 d2.utils.events]: [0m eta: 0:06:44  iter: 3559  total_loss: 0.343  loss_cls: 0.098  loss_box_reg: 0.204  loss_rpn_cls: 0.010  loss_rpn_loc: 0.018  time: 0.2813  data_time: 0.0039  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:16:09 d2.utils.events]: [0m eta: 0:06:38  iter: 3579  total_loss: 0.353  loss_cls: 0.105  loss_box_reg: 0.196  loss_rpn_cls: 0.009  loss_rpn_loc: 0.018  time: 0.2813  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:16:14 d2.utils.events]: [0m eta: 0:06:33  iter: 3599  total_loss: 0.325  loss_cls: 0.094  loss_box_reg: 0.212  loss_rpn_cls: 0.008  loss_rpn_loc: 0.015  time: 0.2813  data_time: 0.0035  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:16:20 d2.utils.events]: [0m eta: 0:06:27  iter: 3619  total_loss: 0.308  loss_cls: 0.086  loss_box_reg: 0.182  loss_rpn_cls: 0.008  loss_rpn_loc: 0.017  time: 0.2813  data_time: 0.0035  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:16:26 d2.utils.events]: [0m eta: 0:06:21  iter: 3639  total_loss: 0.313  loss_cls: 0.087  loss_box_reg: 0.213  loss_rpn_cls: 0.006  loss_rpn_loc: 0.013  time: 0.2813  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:16:31 d2.utils.events]: [0m eta: 0:06:16  iter: 3659  total_loss: 0.253  loss_cls: 0.067  loss_box_reg: 0.175  loss_rpn_cls: 0.004  loss_rpn_loc: 0.008  time: 0.2813  data_time: 0.0037  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:16:37 d2.utils.events]: [0m eta: 0:06:10  iter: 3679  total_loss: 0.343  loss_cls: 0.105  loss_box_reg: 0.208  loss_rpn_cls: 0.005  loss_rpn_loc: 0.014  time: 0.2814  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:16:43 d2.utils.events]: [0m eta: 0:06:05  iter: 3699  total_loss: 0.297  loss_cls: 0.089  loss_box_reg: 0.195  loss_rpn_cls: 0.005  loss_rpn_loc: 0.010  time: 0.2814  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:16:48 d2.utils.events]: [0m eta: 0:05:59  iter: 3719  total_loss: 0.312  loss_cls: 0.088  loss_box_reg: 0.203  loss_rpn_cls: 0.005  loss_rpn_loc: 0.013  time: 0.2814  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:16:54 d2.utils.events]: [0m eta: 0:05:53  iter: 3739  total_loss: 0.384  loss_cls: 0.107  loss_box_reg: 0.214  loss_rpn_cls: 0.008  loss_rpn_loc: 0.024  time: 0.2814  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:17:00 d2.utils.events]: [0m eta: 0:05:48  iter: 3759  total_loss: 0.387  loss_cls: 0.120  loss_box_reg: 0.223  loss_rpn_cls: 0.015  loss_rpn_loc: 0.023  time: 0.2814  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:17:05 d2.utils.events]: [0m eta: 0:05:42  iter: 3779  total_loss: 0.312  loss_cls: 0.077  loss_box_reg: 0.187  loss_rpn_cls: 0.008  loss_rpn_loc: 0.014  time: 0.2814  data_time: 0.0035  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:17:11 d2.utils.events]: [0m eta: 0:05:37  iter: 3799  total_loss: 0.377  loss_cls: 0.117  loss_box_reg: 0.223  loss_rpn_cls: 0.011  loss_rpn_loc: 0.017  time: 0.2814  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:17:17 d2.utils.events]: [0m eta: 0:05:31  iter: 3819  total_loss: 0.343  loss_cls: 0.098  loss_box_reg: 0.206  loss_rpn_cls: 0.014  loss_rpn_loc: 0.022  time: 0.2814  data_time: 0.0034  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:17:22 d2.utils.events]: [0m eta: 0:05:25  iter: 3839  total_loss: 0.335  loss_cls: 0.092  loss_box_reg: 0.200  loss_rpn_cls: 0.008  loss_rpn_loc: 0.023  time: 0.2814  data_time: 0.0032  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:17:28 d2.utils.events]: [0m eta: 0:05:20  iter: 3859  total_loss: 0.350  loss_cls: 0.096  loss_box_reg: 0.223  loss_rpn_cls: 0.008  loss_rpn_loc: 0.013  time: 0.2814  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:17:34 d2.utils.events]: [0m eta: 0:05:14  iter: 3879  total_loss: 0.351  loss_cls: 0.108  loss_box_reg: 0.221  loss_rpn_cls: 0.007  loss_rpn_loc: 0.018  time: 0.2814  data_time: 0.0037  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:17:39 d2.utils.events]: [0m eta: 0:05:08  iter: 3899  total_loss: 0.339  loss_cls: 0.102  loss_box_reg: 0.224  loss_rpn_cls: 0.008  loss_rpn_loc: 0.017  time: 0.2814  data_time: 0.0043  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:17:45 d2.utils.events]: [0m eta: 0:05:03  iter: 3919  total_loss: 0.267  loss_cls: 0.086  loss_box_reg: 0.172  loss_rpn_cls: 0.008  loss_rpn_loc: 0.015  time: 0.2814  data_time: 0.0035  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:17:51 d2.utils.events]: [0m eta: 0:04:57  iter: 3939  total_loss: 0.364  loss_cls: 0.102  loss_box_reg: 0.206  loss_rpn_cls: 0.006  loss_rpn_loc: 0.010  time: 0.2815  data_time: 0.0033  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:17:56 d2.utils.events]: [0m eta: 0:04:52  iter: 3959  total_loss: 0.310  loss_cls: 0.092  loss_box_reg: 0.189  loss_rpn_cls: 0.010  loss_rpn_loc: 0.012  time: 0.2815  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:18:02 d2.utils.events]: [0m eta: 0:04:46  iter: 3979  total_loss: 0.468  loss_cls: 0.115  loss_box_reg: 0.235  loss_rpn_cls: 0.012  loss_rpn_loc: 0.034  time: 0.2815  data_time: 0.0050  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:18:08 d2.utils.events]: [0m eta: 0:04:41  iter: 3999  total_loss: 0.381  loss_cls: 0.125  loss_box_reg: 0.218  loss_rpn_cls: 0.011  loss_rpn_loc: 0.026  time: 0.2815  data_time: 0.0034  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:18:13 d2.utils.events]: [0m eta: 0:04:35  iter: 4019  total_loss: 0.321  loss_cls: 0.117  loss_box_reg: 0.191  loss_rpn_cls: 0.010  loss_rpn_loc: 0.020  time: 0.2815  data_time: 0.0034  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:18:19 d2.utils.events]: [0m eta: 0:04:29  iter: 4039  total_loss: 0.345  loss_cls: 0.094  loss_box_reg: 0.221  loss_rpn_cls: 0.008  loss_rpn_loc: 0.022  time: 0.2815  data_time: 0.0034  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:18:25 d2.utils.events]: [0m eta: 0:04:24  iter: 4059  total_loss: 0.353  loss_cls: 0.104  loss_box_reg: 0.206  loss_rpn_cls: 0.006  loss_rpn_loc: 0.013  time: 0.2815  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:18:31 d2.utils.events]: [0m eta: 0:04:18  iter: 4079  total_loss: 0.270  loss_cls: 0.085  loss_box_reg: 0.179  loss_rpn_cls: 0.009  loss_rpn_loc: 0.014  time: 0.2815  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:18:36 d2.utils.events]: [0m eta: 0:04:12  iter: 4099  total_loss: 0.374  loss_cls: 0.106  loss_box_reg: 0.227  loss_rpn_cls: 0.011  loss_rpn_loc: 0.020  time: 0.2815  data_time: 0.0033  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:18:42 d2.utils.events]: [0m eta: 0:04:07  iter: 4119  total_loss: 0.294  loss_cls: 0.094  loss_box_reg: 0.180  loss_rpn_cls: 0.010  loss_rpn_loc: 0.014  time: 0.2816  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:18:48 d2.utils.events]: [0m eta: 0:04:01  iter: 4139  total_loss: 0.392  loss_cls: 0.125  loss_box_reg: 0.229  loss_rpn_cls: 0.010  loss_rpn_loc: 0.023  time: 0.2816  data_time: 0.0043  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:18:53 d2.utils.events]: [0m eta: 0:03:55  iter: 4159  total_loss: 0.374  loss_cls: 0.115  loss_box_reg: 0.220  loss_rpn_cls: 0.008  loss_rpn_loc: 0.019  time: 0.2816  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:18:59 d2.utils.events]: [0m eta: 0:03:50  iter: 4179  total_loss: 0.358  loss_cls: 0.093  loss_box_reg: 0.232  loss_rpn_cls: 0.010  loss_rpn_loc: 0.016  time: 0.2816  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:19:05 d2.utils.events]: [0m eta: 0:03:44  iter: 4199  total_loss: 0.356  loss_cls: 0.099  loss_box_reg: 0.213  loss_rpn_cls: 0.003  loss_rpn_loc: 0.019  time: 0.2816  data_time: 0.0037  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:19:10 d2.utils.events]: [0m eta: 0:03:39  iter: 4219  total_loss: 0.354  loss_cls: 0.099  loss_box_reg: 0.203  loss_rpn_cls: 0.007  loss_rpn_loc: 0.021  time: 0.2816  data_time: 0.0037  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:19:16 d2.utils.events]: [0m eta: 0:03:33  iter: 4239  total_loss: 0.348  loss_cls: 0.097  loss_box_reg: 0.218  loss_rpn_cls: 0.010  loss_rpn_loc: 0.019  time: 0.2816  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:19:21 d2.utils.events]: [0m eta: 0:03:27  iter: 4259  total_loss: 0.363  loss_cls: 0.105  loss_box_reg: 0.239  loss_rpn_cls: 0.011  loss_rpn_loc: 0.015  time: 0.2816  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:19:27 d2.utils.events]: [0m eta: 0:03:22  iter: 4279  total_loss: 0.317  loss_cls: 0.090  loss_box_reg: 0.198  loss_rpn_cls: 0.006  loss_rpn_loc: 0.013  time: 0.2816  data_time: 0.0037  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:19:33 d2.utils.events]: [0m eta: 0:03:16  iter: 4299  total_loss: 0.383  loss_cls: 0.116  loss_box_reg: 0.230  loss_rpn_cls: 0.009  loss_rpn_loc: 0.025  time: 0.2816  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:19:38 d2.utils.events]: [0m eta: 0:03:11  iter: 4319  total_loss: 0.265  loss_cls: 0.090  loss_box_reg: 0.172  loss_rpn_cls: 0.006  loss_rpn_loc: 0.010  time: 0.2816  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:19:44 d2.utils.events]: [0m eta: 0:03:05  iter: 4339  total_loss: 0.305  loss_cls: 0.091  loss_box_reg: 0.187  loss_rpn_cls: 0.010  loss_rpn_loc: 0.016  time: 0.2816  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:19:50 d2.utils.events]: [0m eta: 0:02:59  iter: 4359  total_loss: 0.275  loss_cls: 0.077  loss_box_reg: 0.186  loss_rpn_cls: 0.005  loss_rpn_loc: 0.016  time: 0.2816  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:19:55 d2.utils.events]: [0m eta: 0:02:54  iter: 4379  total_loss: 0.294  loss_cls: 0.090  loss_box_reg: 0.199  loss_rpn_cls: 0.005  loss_rpn_loc: 0.016  time: 0.2816  data_time: 0.0035  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:20:01 d2.utils.events]: [0m eta: 0:02:48  iter: 4399  total_loss: 0.359  loss_cls: 0.096  loss_box_reg: 0.214  loss_rpn_cls: 0.008  loss_rpn_loc: 0.018  time: 0.2816  data_time: 0.0045  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:20:07 d2.utils.events]: [0m eta: 0:02:42  iter: 4419  total_loss: 0.313  loss_cls: 0.101  loss_box_reg: 0.173  loss_rpn_cls: 0.006  loss_rpn_loc: 0.015  time: 0.2816  data_time: 0.0034  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:20:12 d2.utils.events]: [0m eta: 0:02:37  iter: 4439  total_loss: 0.292  loss_cls: 0.083  loss_box_reg: 0.186  loss_rpn_cls: 0.005  loss_rpn_loc: 0.014  time: 0.2816  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:20:18 d2.utils.events]: [0m eta: 0:02:31  iter: 4459  total_loss: 0.364  loss_cls: 0.092  loss_box_reg: 0.206  loss_rpn_cls: 0.010  loss_rpn_loc: 0.025  time: 0.2816  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:20:24 d2.utils.events]: [0m eta: 0:02:25  iter: 4479  total_loss: 0.391  loss_cls: 0.118  loss_box_reg: 0.239  loss_rpn_cls: 0.010  loss_rpn_loc: 0.025  time: 0.2816  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:20:29 d2.utils.events]: [0m eta: 0:02:20  iter: 4499  total_loss: 0.322  loss_cls: 0.082  loss_box_reg: 0.219  loss_rpn_cls: 0.009  loss_rpn_loc: 0.020  time: 0.2816  data_time: 0.0042  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:20:35 d2.utils.events]: [0m eta: 0:02:14  iter: 4519  total_loss: 0.289  loss_cls: 0.079  loss_box_reg: 0.172  loss_rpn_cls: 0.008  loss_rpn_loc: 0.014  time: 0.2816  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:20:40 d2.utils.events]: [0m eta: 0:02:09  iter: 4539  total_loss: 0.261  loss_cls: 0.084  loss_box_reg: 0.174  loss_rpn_cls: 0.005  loss_rpn_loc: 0.012  time: 0.2816  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:20:46 d2.utils.events]: [0m eta: 0:02:03  iter: 4559  total_loss: 0.348  loss_cls: 0.103  loss_box_reg: 0.217  loss_rpn_cls: 0.012  loss_rpn_loc: 0.025  time: 0.2816  data_time: 0.0035  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:20:52 d2.utils.events]: [0m eta: 0:01:57  iter: 4579  total_loss: 0.427  loss_cls: 0.106  loss_box_reg: 0.236  loss_rpn_cls: 0.012  loss_rpn_loc: 0.021  time: 0.2816  data_time: 0.0037  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:20:57 d2.utils.events]: [0m eta: 0:01:52  iter: 4599  total_loss: 0.314  loss_cls: 0.090  loss_box_reg: 0.184  loss_rpn_cls: 0.010  loss_rpn_loc: 0.017  time: 0.2816  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:21:03 d2.utils.events]: [0m eta: 0:01:46  iter: 4619  total_loss: 0.291  loss_cls: 0.076  loss_box_reg: 0.195  loss_rpn_cls: 0.012  loss_rpn_loc: 0.010  time: 0.2816  data_time: 0.0037  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:21:09 d2.utils.events]: [0m eta: 0:01:41  iter: 4639  total_loss: 0.335  loss_cls: 0.100  loss_box_reg: 0.197  loss_rpn_cls: 0.006  loss_rpn_loc: 0.017  time: 0.2816  data_time: 0.0035  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:21:14 d2.utils.events]: [0m eta: 0:01:35  iter: 4659  total_loss: 0.314  loss_cls: 0.090  loss_box_reg: 0.204  loss_rpn_cls: 0.006  loss_rpn_loc: 0.016  time: 0.2816  data_time: 0.0035  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:21:20 d2.utils.events]: [0m eta: 0:01:29  iter: 4679  total_loss: 0.310  loss_cls: 0.093  loss_box_reg: 0.191  loss_rpn_cls: 0.009  loss_rpn_loc: 0.014  time: 0.2816  data_time: 0.0035  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:21:26 d2.utils.events]: [0m eta: 0:01:24  iter: 4699  total_loss: 0.263  loss_cls: 0.082  loss_box_reg: 0.163  loss_rpn_cls: 0.006  loss_rpn_loc: 0.012  time: 0.2816  data_time: 0.0038  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:21:31 d2.utils.events]: [0m eta: 0:01:18  iter: 4719  total_loss: 0.288  loss_cls: 0.092  loss_box_reg: 0.186  loss_rpn_cls: 0.004  loss_rpn_loc: 0.009  time: 0.2816  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:21:37 d2.utils.events]: [0m eta: 0:01:13  iter: 4739  total_loss: 0.315  loss_cls: 0.101  loss_box_reg: 0.191  loss_rpn_cls: 0.010  loss_rpn_loc: 0.021  time: 0.2816  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:21:43 d2.utils.events]: [0m eta: 0:01:07  iter: 4759  total_loss: 0.321  loss_cls: 0.092  loss_box_reg: 0.201  loss_rpn_cls: 0.012  loss_rpn_loc: 0.019  time: 0.2816  data_time: 0.0035  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:21:48 d2.utils.events]: [0m eta: 0:01:01  iter: 4779  total_loss: 0.371  loss_cls: 0.105  loss_box_reg: 0.193  loss_rpn_cls: 0.014  loss_rpn_loc: 0.028  time: 0.2816  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:21:54 d2.utils.events]: [0m eta: 0:00:56  iter: 4799  total_loss: 0.362  loss_cls: 0.080  loss_box_reg: 0.228  loss_rpn_cls: 0.011  loss_rpn_loc: 0.015  time: 0.2816  data_time: 0.0037  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:22:00 d2.utils.events]: [0m eta: 0:00:50  iter: 4819  total_loss: 0.265  loss_cls: 0.076  loss_box_reg: 0.146  loss_rpn_cls: 0.007  loss_rpn_loc: 0.015  time: 0.2816  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:22:05 d2.utils.events]: [0m eta: 0:00:45  iter: 4839  total_loss: 0.320  loss_cls: 0.083  loss_box_reg: 0.215  loss_rpn_cls: 0.008  loss_rpn_loc: 0.020  time: 0.2816  data_time: 0.0040  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:22:11 d2.utils.events]: [0m eta: 0:00:39  iter: 4859  total_loss: 0.312  loss_cls: 0.082  loss_box_reg: 0.193  loss_rpn_cls: 0.007  loss_rpn_loc: 0.019  time: 0.2816  data_time: 0.0037  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:22:17 d2.utils.events]: [0m eta: 0:00:33  iter: 4879  total_loss: 0.397  loss_cls: 0.122  loss_box_reg: 0.202  loss_rpn_cls: 0.013  loss_rpn_loc: 0.023  time: 0.2816  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:22:22 d2.utils.events]: [0m eta: 0:00:28  iter: 4899  total_loss: 0.291  loss_cls: 0.092  loss_box_reg: 0.187  loss_rpn_cls: 0.010  loss_rpn_loc: 0.015  time: 0.2816  data_time: 0.0037  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:22:28 d2.utils.events]: [0m eta: 0:00:22  iter: 4919  total_loss: 0.264  loss_cls: 0.071  loss_box_reg: 0.170  loss_rpn_cls: 0.009  loss_rpn_loc: 0.010  time: 0.2816  data_time: 0.0036  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:22:34 d2.utils.events]: [0m eta: 0:00:17  iter: 4939  total_loss: 0.317  loss_cls: 0.094  loss_box_reg: 0.192  loss_rpn_cls: 0.009  loss_rpn_loc: 0.017  time: 0.2816  data_time: 0.0035  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:22:39 d2.utils.events]: [0m eta: 0:00:11  iter: 4959  total_loss: 0.276  loss_cls: 0.081  loss_box_reg: 0.203  loss_rpn_cls: 0.008  loss_rpn_loc: 0.011  time: 0.2816  data_time: 0.0033  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:22:45 d2.utils.events]: [0m eta: 0:00:05  iter: 4979  total_loss: 0.244  loss_cls: 0.074  loss_box_reg: 0.176  loss_rpn_cls: 0.005  loss_rpn_loc: 0.015  time: 0.2816  data_time: 0.0033  lr: 0.000250  max_mem: 2337M
Loading sequence 0000
Loading sequence 0001
Loading sequence 0002
Loading sequence 0003
Loading sequence 0004
Loading sequence 0005
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0009
Loading sequence 0010
Loading sequence 0011
Loading sequence 0012
Loading sequence 0013
Loading sequence 0014
Loading sequence 0015
Loading sequence 0016
Loading sequence 0017
Loading sequence 0018
Loading sequence 0019
Loading sequence 0020
0000
0001
0002
0003
0004
0005
0006
0007
0008
0009
0010
0011
0012
0013
0014
0015
0016
0017
0018
0019
0020
Loaded 2336 images!
[32m[03/14 18:23:17 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    None    | 0            |    Car     | 7896         | Pedestrian | 3340         |
|            |              |            |              |            |              |
|   total    | 11236        |            |              |            |              |[0m
[32m[03/14 18:23:17 d2.data.common]: [0mSerializing 2336 elements to byte tensors and concatenating them all ...
[32m[03/14 18:23:17 d2.data.common]: [0mSerialized dataset takes 1.67 MiB
[5m[31mWARNING[0m [32m[03/14 18:23:17 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[03/14 18:23:17 d2.utils.events]: [0m eta: 0:00:00  iter: 4999  total_loss: 0.298  loss_cls: 0.066  loss_box_reg: 0.180  loss_rpn_cls: 0.007  loss_rpn_loc: 0.013  time: 0.2816  data_time: 0.0035  lr: 0.000250  max_mem: 2337M
[32m[03/14 18:23:17 d2.engine.hooks]: [0mOverall training speed: 4997 iterations in 0:23:27 (0.2817 s / it)
[32m[03/14 18:23:17 d2.engine.hooks]: [0mTotal training time: 0:23:57 (0:00:29 on hooks)
Loading sequence 0000
Loading sequence 0001
Loading sequence 0002
Loading sequence 0003
Loading sequence 0004
Loading sequence 0005
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0009
Loading sequence 0010
Loading sequence 0011
Loading sequence 0012
Loading sequence 0013
Loading sequence 0014
Loading sequence 0015
Loading sequence 0016
Loading sequence 0017
Loading sequence 0018
Loading sequence 0019
Loading sequence 0020
0000
0001
0002
0003
0004
0005
0006
0007
0008
0009
0010
0011
0012
0013
0014
0015
0016
0017
0018
0019
0020
Loaded 2336 images!
[5m[31mWARNING[0m [32m[03/14 18:24:03 d2.evaluation.coco_evaluation]: [0mjson_file was not found in MetaDataCatalog for 'KITTI_MOTS_val'. Trying to convert it to COCO format ...
[32m[03/14 18:24:03 d2.data.datasets.coco]: [0mCached annotations in COCO format already exist: ./output/KITTI_MOTS_val_coco_format.json
Loading sequence 0000
Loading sequence 0001
Loading sequence 0002
Loading sequence 0003
Loading sequence 0004
Loading sequence 0005
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0009
Loading sequence 0010
Loading sequence 0011
Loading sequence 0012
Loading sequence 0013
Loading sequence 0014
Loading sequence 0015
Loading sequence 0016
Loading sequence 0017
Loading sequence 0018
Loading sequence 0019
Loading sequence 0020
0000
0001
0002
0003
0004
0005
0006
0007
0008
0009
0010
0011
0012
0013
0014
0015
0016
0017
0018
0019
0020
Loaded 2336 images!
[32m[03/14 18:24:26 d2.data.common]: [0mSerializing 2336 elements to byte tensors and concatenating them all ...
[32m[03/14 18:24:26 d2.data.common]: [0mSerialized dataset takes 1.67 MiB
[32m[03/14 18:24:26 d2.evaluation.evaluator]: [0mStart inference on 2336 images
[32m[03/14 18:24:27 d2.evaluation.evaluator]: [0mInference done 11/2336. 0.0664 s / img. ETA=0:02:36
[32m[03/14 18:24:32 d2.evaluation.evaluator]: [0mInference done 83/2336. 0.0683 s / img. ETA=0:02:36
[32m[03/14 18:24:37 d2.evaluation.evaluator]: [0mInference done 157/2336. 0.0676 s / img. ETA=0:02:29
[32m[03/14 18:24:42 d2.evaluation.evaluator]: [0mInference done 231/2336. 0.0674 s / img. ETA=0:02:24
[32m[03/14 18:24:47 d2.evaluation.evaluator]: [0mInference done 304/2336. 0.0674 s / img. ETA=0:02:19
[32m[03/14 18:24:52 d2.evaluation.evaluator]: [0mInference done 378/2336. 0.0674 s / img. ETA=0:02:14
[32m[03/14 18:24:57 d2.evaluation.evaluator]: [0mInference done 451/2336. 0.0674 s / img. ETA=0:02:09
[32m[03/14 18:25:02 d2.evaluation.evaluator]: [0mInference done 525/2336. 0.0674 s / img. ETA=0:02:04
[32m[03/14 18:25:07 d2.evaluation.evaluator]: [0mInference done 599/2336. 0.0674 s / img. ETA=0:01:58
[32m[03/14 18:25:12 d2.evaluation.evaluator]: [0mInference done 673/2336. 0.0674 s / img. ETA=0:01:53
[32m[03/14 18:25:17 d2.evaluation.evaluator]: [0mInference done 746/2336. 0.0674 s / img. ETA=0:01:48
[32m[03/14 18:25:22 d2.evaluation.evaluator]: [0mInference done 820/2336. 0.0674 s / img. ETA=0:01:43
[32m[03/14 18:25:27 d2.evaluation.evaluator]: [0mInference done 894/2336. 0.0673 s / img. ETA=0:01:38
[32m[03/14 18:25:33 d2.evaluation.evaluator]: [0mInference done 967/2336. 0.0674 s / img. ETA=0:01:33
[32m[03/14 18:25:38 d2.evaluation.evaluator]: [0mInference done 1041/2336. 0.0673 s / img. ETA=0:01:28
[32m[03/14 18:25:43 d2.evaluation.evaluator]: [0mInference done 1114/2336. 0.0674 s / img. ETA=0:01:23
[32m[03/14 18:25:48 d2.evaluation.evaluator]: [0mInference done 1187/2336. 0.0674 s / img. ETA=0:01:18
[32m[03/14 18:25:53 d2.evaluation.evaluator]: [0mInference done 1260/2336. 0.0675 s / img. ETA=0:01:13
[32m[03/14 18:25:58 d2.evaluation.evaluator]: [0mInference done 1333/2336. 0.0675 s / img. ETA=0:01:08
[32m[03/14 18:26:03 d2.evaluation.evaluator]: [0mInference done 1406/2336. 0.0675 s / img. ETA=0:01:03
[32m[03/14 18:26:08 d2.evaluation.evaluator]: [0mInference done 1479/2336. 0.0675 s / img. ETA=0:00:58
[32m[03/14 18:26:13 d2.evaluation.evaluator]: [0mInference done 1552/2336. 0.0675 s / img. ETA=0:00:53
[32m[03/14 18:26:18 d2.evaluation.evaluator]: [0mInference done 1625/2336. 0.0675 s / img. ETA=0:00:48
[32m[03/14 18:26:23 d2.evaluation.evaluator]: [0mInference done 1698/2336. 0.0676 s / img. ETA=0:00:43
[32m[03/14 18:26:28 d2.evaluation.evaluator]: [0mInference done 1771/2336. 0.0676 s / img. ETA=0:00:38
[32m[03/14 18:26:33 d2.evaluation.evaluator]: [0mInference done 1844/2336. 0.0676 s / img. ETA=0:00:33
[32m[03/14 18:26:38 d2.evaluation.evaluator]: [0mInference done 1917/2336. 0.0676 s / img. ETA=0:00:28
[32m[03/14 18:26:43 d2.evaluation.evaluator]: [0mInference done 1990/2336. 0.0676 s / img. ETA=0:00:23
[32m[03/14 18:26:48 d2.evaluation.evaluator]: [0mInference done 2063/2336. 0.0677 s / img. ETA=0:00:18
[32m[03/14 18:26:53 d2.evaluation.evaluator]: [0mInference done 2136/2336. 0.0677 s / img. ETA=0:00:13
[32m[03/14 18:26:58 d2.evaluation.evaluator]: [0mInference done 2208/2336. 0.0677 s / img. ETA=0:00:08
[32m[03/14 18:27:03 d2.evaluation.evaluator]: [0mInference done 2281/2336. 0.0677 s / img. ETA=0:00:03
[32m[03/14 18:27:07 d2.evaluation.evaluator]: [0mTotal inference time: 0:02:40.467695 (0.068841 s / img per device, on 1 devices)
[32m[03/14 18:27:07 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:02:37 (0.067735 s / img per device, on 1 devices)
[32m[03/14 18:27:07 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[03/14 18:27:07 d2.evaluation.coco_evaluation]: [0mSaving results to ./output/coco_instances_results.json
[32m[03/14 18:27:07 d2.evaluation.coco_evaluation]: [0mEvaluating predictions ...
Loading and preparing results...
DONE (t=0.02s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=4.18s).
Accumulating evaluation results...
DONE (t=0.42s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.661
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.880
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.771
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.415
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.698
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.838
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.187
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.701
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.712
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.516
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.745
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.879
[32m[03/14 18:27:12 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 66.119 | 87.978 | 77.105 | 41.528 | 69.756 | 83.767 |
[32m[03/14 18:27:12 d2.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category   | AP   | category   | AP     | category   | AP     |
|:-----------|:-----|:-----------|:-------|:-----------|:-------|
| None       | nan  | Car        | 73.284 | Pedestrian | 58.953 |
