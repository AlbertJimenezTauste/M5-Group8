Metadata(name='KITTI_MOTS_train', thing_classes=['None', 'Car', 'Pedestrian'])
Loading sequence 0000
Loading sequence 0001
Loading sequence 0002
Loading sequence 0003
Loading sequence 0004
Loading sequence 0005
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0009
Loading sequence 0010
Loading sequence 0011
Loading sequence 0012
Loading sequence 0013
Loading sequence 0014
Loading sequence 0015
Loading sequence 0016
Loading sequence 0017
Loading sequence 0018
Loading sequence 0019
Loading sequence 0020
0000
0001
0002
0003
0004
0005
0006
0007
0008
0009
0010
0011
0012
0013
0014
0015
0016
0017
0018
0019
0020
Loaded 5549 images!
[32m[03/12 12:42:26 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=12, bias=True)
    )
  )
)
Loading sequence 0000
Loading sequence 0001
Loading sequence 0002
Loading sequence 0003
Loading sequence 0004
Loading sequence 0005
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0009
Loading sequence 0010
Loading sequence 0011
Loading sequence 0012
Loading sequence 0013
Loading sequence 0014
Loading sequence 0015
Loading sequence 0016
Loading sequence 0017
Loading sequence 0018
Loading sequence 0019
Loading sequence 0020
0000
0001
0002
0003
0004
0005
0006
0007
0008
0009
0010
0011
0012
0013
0014
0015
0016
0017
0018
0019
0020
Loaded 5549 images!
[32m[03/12 12:43:28 d2.data.build]: [0mRemoved 530 images with no usable annotations. 5019 images left.
[32m[03/12 12:43:28 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    None    | 0            |    Car     | 18839        | Pedestrian | 8015         |
|            |              |            |              |            |              |
|   total    | 26854        |            |              |            |              |[0m
[32m[03/12 12:43:28 d2.data.common]: [0mSerializing 5019 elements to byte tensors and concatenating them all ...
[32m[03/12 12:43:29 d2.data.common]: [0mSerialized dataset takes 3.92 MiB
[32m[03/12 12:43:29 d2.data.detection_utils]: [0mTransformGens used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[03/12 12:43:29 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[03/12 12:43:30 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[03/12 12:43:36 d2.utils.events]: [0m eta: 0:23:08  iter: 19  total_loss: 2.246  loss_cls: 1.407  loss_box_reg: 0.732  loss_rpn_cls: 0.066  loss_rpn_loc: 0.028  time: 0.2789  data_time: 0.0151  lr: 0.000005  max_mem: 2338M
[32m[03/12 12:43:42 d2.utils.events]: [0m eta: 0:22:33  iter: 39  total_loss: 2.180  loss_cls: 1.328  loss_box_reg: 0.751  loss_rpn_cls: 0.054  loss_rpn_loc: 0.023  time: 0.2747  data_time: 0.0038  lr: 0.000010  max_mem: 2338M
[32m[03/12 12:43:47 d2.utils.events]: [0m eta: 0:22:27  iter: 59  total_loss: 2.007  loss_cls: 1.170  loss_box_reg: 0.730  loss_rpn_cls: 0.048  loss_rpn_loc: 0.022  time: 0.2737  data_time: 0.0035  lr: 0.000015  max_mem: 2338M
[32m[03/12 12:43:52 d2.utils.events]: [0m eta: 0:22:22  iter: 79  total_loss: 1.652  loss_cls: 0.961  loss_box_reg: 0.612  loss_rpn_cls: 0.047  loss_rpn_loc: 0.017  time: 0.2734  data_time: 0.0032  lr: 0.000020  max_mem: 2338M
[32m[03/12 12:43:58 d2.utils.events]: [0m eta: 0:22:16  iter: 99  total_loss: 1.458  loss_cls: 0.762  loss_box_reg: 0.620  loss_rpn_cls: 0.058  loss_rpn_loc: 0.020  time: 0.2734  data_time: 0.0037  lr: 0.000025  max_mem: 2338M
[32m[03/12 12:44:03 d2.utils.events]: [0m eta: 0:22:11  iter: 119  total_loss: 1.360  loss_cls: 0.621  loss_box_reg: 0.644  loss_rpn_cls: 0.051  loss_rpn_loc: 0.016  time: 0.2733  data_time: 0.0033  lr: 0.000030  max_mem: 2338M
[32m[03/12 12:44:09 d2.utils.events]: [0m eta: 0:22:07  iter: 139  total_loss: 1.324  loss_cls: 0.568  loss_box_reg: 0.670  loss_rpn_cls: 0.044  loss_rpn_loc: 0.017  time: 0.2734  data_time: 0.0034  lr: 0.000035  max_mem: 2338M
[32m[03/12 12:44:14 d2.utils.events]: [0m eta: 0:22:03  iter: 159  total_loss: 1.311  loss_cls: 0.488  loss_box_reg: 0.754  loss_rpn_cls: 0.055  loss_rpn_loc: 0.023  time: 0.2736  data_time: 0.0031  lr: 0.000040  max_mem: 2338M
[32m[03/12 12:44:20 d2.utils.events]: [0m eta: 0:21:58  iter: 179  total_loss: 1.114  loss_cls: 0.418  loss_box_reg: 0.618  loss_rpn_cls: 0.044  loss_rpn_loc: 0.025  time: 0.2738  data_time: 0.0035  lr: 0.000045  max_mem: 2338M
[32m[03/12 12:44:25 d2.utils.events]: [0m eta: 0:21:53  iter: 199  total_loss: 1.199  loss_cls: 0.405  loss_box_reg: 0.734  loss_rpn_cls: 0.038  loss_rpn_loc: 0.025  time: 0.2739  data_time: 0.0034  lr: 0.000050  max_mem: 2338M
[32m[03/12 12:44:31 d2.utils.events]: [0m eta: 0:21:49  iter: 219  total_loss: 1.150  loss_cls: 0.402  loss_box_reg: 0.687  loss_rpn_cls: 0.032  loss_rpn_loc: 0.015  time: 0.2748  data_time: 0.0033  lr: 0.000055  max_mem: 2338M
[32m[03/12 12:44:37 d2.utils.events]: [0m eta: 0:21:45  iter: 239  total_loss: 1.160  loss_cls: 0.381  loss_box_reg: 0.675  loss_rpn_cls: 0.038  loss_rpn_loc: 0.014  time: 0.2755  data_time: 0.0032  lr: 0.000060  max_mem: 2338M
[32m[03/12 12:44:43 d2.utils.events]: [0m eta: 0:21:40  iter: 259  total_loss: 1.112  loss_cls: 0.371  loss_box_reg: 0.706  loss_rpn_cls: 0.022  loss_rpn_loc: 0.024  time: 0.2764  data_time: 0.0034  lr: 0.000065  max_mem: 2338M
[32m[03/12 12:44:48 d2.utils.events]: [0m eta: 0:21:36  iter: 279  total_loss: 0.941  loss_cls: 0.292  loss_box_reg: 0.660  loss_rpn_cls: 0.024  loss_rpn_loc: 0.022  time: 0.2768  data_time: 0.0036  lr: 0.000070  max_mem: 2338M
[32m[03/12 12:44:54 d2.utils.events]: [0m eta: 0:21:32  iter: 299  total_loss: 1.129  loss_cls: 0.315  loss_box_reg: 0.724  loss_rpn_cls: 0.034  loss_rpn_loc: 0.033  time: 0.2776  data_time: 0.0033  lr: 0.000075  max_mem: 2338M
[32m[03/12 12:45:00 d2.utils.events]: [0m eta: 0:21:28  iter: 319  total_loss: 0.979  loss_cls: 0.293  loss_box_reg: 0.616  loss_rpn_cls: 0.034  loss_rpn_loc: 0.023  time: 0.2782  data_time: 0.0035  lr: 0.000080  max_mem: 2338M
[32m[03/12 12:45:06 d2.utils.events]: [0m eta: 0:21:23  iter: 339  total_loss: 0.873  loss_cls: 0.218  loss_box_reg: 0.548  loss_rpn_cls: 0.022  loss_rpn_loc: 0.020  time: 0.2788  data_time: 0.0033  lr: 0.000085  max_mem: 2338M
[32m[03/12 12:45:11 d2.utils.events]: [0m eta: 0:21:20  iter: 359  total_loss: 0.952  loss_cls: 0.247  loss_box_reg: 0.625  loss_rpn_cls: 0.037  loss_rpn_loc: 0.032  time: 0.2792  data_time: 0.0032  lr: 0.000090  max_mem: 2338M
[32m[03/12 12:45:17 d2.utils.events]: [0m eta: 0:21:15  iter: 379  total_loss: 0.730  loss_cls: 0.208  loss_box_reg: 0.462  loss_rpn_cls: 0.031  loss_rpn_loc: 0.016  time: 0.2795  data_time: 0.0035  lr: 0.000095  max_mem: 2338M
[32m[03/12 12:45:23 d2.utils.events]: [0m eta: 0:21:10  iter: 399  total_loss: 0.771  loss_cls: 0.213  loss_box_reg: 0.473  loss_rpn_cls: 0.017  loss_rpn_loc: 0.012  time: 0.2796  data_time: 0.0035  lr: 0.000100  max_mem: 2338M
[32m[03/12 12:45:28 d2.utils.events]: [0m eta: 0:21:05  iter: 419  total_loss: 0.766  loss_cls: 0.229  loss_box_reg: 0.475  loss_rpn_cls: 0.020  loss_rpn_loc: 0.025  time: 0.2798  data_time: 0.0037  lr: 0.000105  max_mem: 2338M
[32m[03/12 12:45:34 d2.utils.events]: [0m eta: 0:21:01  iter: 439  total_loss: 0.677  loss_cls: 0.215  loss_box_reg: 0.365  loss_rpn_cls: 0.017  loss_rpn_loc: 0.021  time: 0.2801  data_time: 0.0034  lr: 0.000110  max_mem: 2338M
[32m[03/12 12:45:40 d2.utils.events]: [0m eta: 0:20:56  iter: 459  total_loss: 0.647  loss_cls: 0.210  loss_box_reg: 0.389  loss_rpn_cls: 0.028  loss_rpn_loc: 0.026  time: 0.2802  data_time: 0.0032  lr: 0.000115  max_mem: 2338M
[32m[03/12 12:45:45 d2.utils.events]: [0m eta: 0:20:53  iter: 479  total_loss: 0.529  loss_cls: 0.142  loss_box_reg: 0.297  loss_rpn_cls: 0.023  loss_rpn_loc: 0.014  time: 0.2803  data_time: 0.0034  lr: 0.000120  max_mem: 2338M
[32m[03/12 12:45:51 d2.utils.events]: [0m eta: 0:20:49  iter: 499  total_loss: 0.590  loss_cls: 0.191  loss_box_reg: 0.363  loss_rpn_cls: 0.020  loss_rpn_loc: 0.018  time: 0.2805  data_time: 0.0032  lr: 0.000125  max_mem: 2338M
[32m[03/12 12:45:57 d2.utils.events]: [0m eta: 0:20:44  iter: 519  total_loss: 0.635  loss_cls: 0.181  loss_box_reg: 0.393  loss_rpn_cls: 0.032  loss_rpn_loc: 0.020  time: 0.2807  data_time: 0.0035  lr: 0.000130  max_mem: 2338M
[32m[03/12 12:46:03 d2.utils.events]: [0m eta: 0:20:40  iter: 539  total_loss: 0.540  loss_cls: 0.168  loss_box_reg: 0.327  loss_rpn_cls: 0.018  loss_rpn_loc: 0.020  time: 0.2809  data_time: 0.0038  lr: 0.000135  max_mem: 2338M
[32m[03/12 12:46:08 d2.utils.events]: [0m eta: 0:20:35  iter: 559  total_loss: 0.660  loss_cls: 0.190  loss_box_reg: 0.350  loss_rpn_cls: 0.024  loss_rpn_loc: 0.028  time: 0.2811  data_time: 0.0035  lr: 0.000140  max_mem: 2338M
[32m[03/12 12:46:14 d2.utils.events]: [0m eta: 0:20:30  iter: 579  total_loss: 0.543  loss_cls: 0.162  loss_box_reg: 0.298  loss_rpn_cls: 0.024  loss_rpn_loc: 0.020  time: 0.2812  data_time: 0.0033  lr: 0.000145  max_mem: 2338M
[32m[03/12 12:46:20 d2.utils.events]: [0m eta: 0:20:25  iter: 599  total_loss: 0.461  loss_cls: 0.147  loss_box_reg: 0.275  loss_rpn_cls: 0.023  loss_rpn_loc: 0.021  time: 0.2814  data_time: 0.0034  lr: 0.000150  max_mem: 2338M
[32m[03/12 12:46:25 d2.utils.events]: [0m eta: 0:20:20  iter: 619  total_loss: 0.502  loss_cls: 0.152  loss_box_reg: 0.268  loss_rpn_cls: 0.025  loss_rpn_loc: 0.022  time: 0.2816  data_time: 0.0031  lr: 0.000155  max_mem: 2338M
[32m[03/12 12:46:31 d2.utils.events]: [0m eta: 0:20:15  iter: 639  total_loss: 0.553  loss_cls: 0.170  loss_box_reg: 0.315  loss_rpn_cls: 0.023  loss_rpn_loc: 0.021  time: 0.2817  data_time: 0.0034  lr: 0.000160  max_mem: 2338M
[32m[03/12 12:46:37 d2.utils.events]: [0m eta: 0:20:10  iter: 659  total_loss: 0.473  loss_cls: 0.149  loss_box_reg: 0.294  loss_rpn_cls: 0.016  loss_rpn_loc: 0.021  time: 0.2818  data_time: 0.0035  lr: 0.000165  max_mem: 2338M
[32m[03/12 12:46:43 d2.utils.events]: [0m eta: 0:20:05  iter: 679  total_loss: 0.538  loss_cls: 0.153  loss_box_reg: 0.291  loss_rpn_cls: 0.026  loss_rpn_loc: 0.025  time: 0.2819  data_time: 0.0035  lr: 0.000170  max_mem: 2338M
[32m[03/12 12:46:48 d2.utils.events]: [0m eta: 0:20:00  iter: 699  total_loss: 0.532  loss_cls: 0.167  loss_box_reg: 0.300  loss_rpn_cls: 0.026  loss_rpn_loc: 0.040  time: 0.2819  data_time: 0.0034  lr: 0.000175  max_mem: 2338M
[32m[03/12 12:46:54 d2.utils.events]: [0m eta: 0:19:55  iter: 719  total_loss: 0.411  loss_cls: 0.115  loss_box_reg: 0.233  loss_rpn_cls: 0.012  loss_rpn_loc: 0.024  time: 0.2821  data_time: 0.0036  lr: 0.000180  max_mem: 2338M
[32m[03/12 12:47:00 d2.utils.events]: [0m eta: 0:19:50  iter: 739  total_loss: 0.434  loss_cls: 0.109  loss_box_reg: 0.259  loss_rpn_cls: 0.018  loss_rpn_loc: 0.015  time: 0.2822  data_time: 0.0033  lr: 0.000185  max_mem: 2338M
[32m[03/12 12:47:05 d2.utils.events]: [0m eta: 0:19:45  iter: 759  total_loss: 0.443  loss_cls: 0.122  loss_box_reg: 0.269  loss_rpn_cls: 0.015  loss_rpn_loc: 0.020  time: 0.2822  data_time: 0.0034  lr: 0.000190  max_mem: 2338M
[32m[03/12 12:47:11 d2.utils.events]: [0m eta: 0:19:40  iter: 779  total_loss: 0.465  loss_cls: 0.135  loss_box_reg: 0.284  loss_rpn_cls: 0.021  loss_rpn_loc: 0.028  time: 0.2824  data_time: 0.0032  lr: 0.000195  max_mem: 2338M
[32m[03/12 12:47:17 d2.utils.events]: [0m eta: 0:19:35  iter: 799  total_loss: 0.539  loss_cls: 0.155  loss_box_reg: 0.297  loss_rpn_cls: 0.021  loss_rpn_loc: 0.027  time: 0.2824  data_time: 0.0034  lr: 0.000200  max_mem: 2338M
[32m[03/12 12:47:23 d2.utils.events]: [0m eta: 0:19:30  iter: 819  total_loss: 0.426  loss_cls: 0.120  loss_box_reg: 0.250  loss_rpn_cls: 0.019  loss_rpn_loc: 0.019  time: 0.2825  data_time: 0.0035  lr: 0.000205  max_mem: 2338M
[32m[03/12 12:47:28 d2.utils.events]: [0m eta: 0:19:24  iter: 839  total_loss: 0.414  loss_cls: 0.120  loss_box_reg: 0.251  loss_rpn_cls: 0.013  loss_rpn_loc: 0.017  time: 0.2825  data_time: 0.0033  lr: 0.000210  max_mem: 2338M
[32m[03/12 12:47:34 d2.utils.events]: [0m eta: 0:19:19  iter: 859  total_loss: 0.390  loss_cls: 0.114  loss_box_reg: 0.233  loss_rpn_cls: 0.010  loss_rpn_loc: 0.014  time: 0.2825  data_time: 0.0032  lr: 0.000215  max_mem: 2338M
[32m[03/12 12:47:40 d2.utils.events]: [0m eta: 0:19:13  iter: 879  total_loss: 0.369  loss_cls: 0.115  loss_box_reg: 0.220  loss_rpn_cls: 0.012  loss_rpn_loc: 0.016  time: 0.2826  data_time: 0.0035  lr: 0.000220  max_mem: 2338M
[32m[03/12 12:47:45 d2.utils.events]: [0m eta: 0:19:08  iter: 899  total_loss: 0.439  loss_cls: 0.136  loss_box_reg: 0.249  loss_rpn_cls: 0.016  loss_rpn_loc: 0.013  time: 0.2826  data_time: 0.0032  lr: 0.000225  max_mem: 2338M
[32m[03/12 12:47:51 d2.utils.events]: [0m eta: 0:19:03  iter: 919  total_loss: 0.470  loss_cls: 0.138  loss_box_reg: 0.277  loss_rpn_cls: 0.015  loss_rpn_loc: 0.024  time: 0.2827  data_time: 0.0035  lr: 0.000230  max_mem: 2338M
[32m[03/12 12:47:57 d2.utils.events]: [0m eta: 0:18:57  iter: 939  total_loss: 0.446  loss_cls: 0.136  loss_box_reg: 0.247  loss_rpn_cls: 0.018  loss_rpn_loc: 0.018  time: 0.2828  data_time: 0.0036  lr: 0.000235  max_mem: 2338M
[32m[03/12 12:48:03 d2.utils.events]: [0m eta: 0:18:52  iter: 959  total_loss: 0.433  loss_cls: 0.127  loss_box_reg: 0.211  loss_rpn_cls: 0.015  loss_rpn_loc: 0.019  time: 0.2828  data_time: 0.0034  lr: 0.000240  max_mem: 2338M
[32m[03/12 12:48:08 d2.utils.events]: [0m eta: 0:18:48  iter: 979  total_loss: 0.450  loss_cls: 0.127  loss_box_reg: 0.246  loss_rpn_cls: 0.018  loss_rpn_loc: 0.018  time: 0.2830  data_time: 0.0033  lr: 0.000245  max_mem: 2338M
[32m[03/12 12:48:14 d2.utils.events]: [0m eta: 0:18:42  iter: 999  total_loss: 0.516  loss_cls: 0.156  loss_box_reg: 0.290  loss_rpn_cls: 0.022  loss_rpn_loc: 0.027  time: 0.2830  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:48:20 d2.utils.events]: [0m eta: 0:18:37  iter: 1019  total_loss: 0.420  loss_cls: 0.129  loss_box_reg: 0.248  loss_rpn_cls: 0.018  loss_rpn_loc: 0.024  time: 0.2830  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:48:26 d2.utils.events]: [0m eta: 0:18:32  iter: 1039  total_loss: 0.397  loss_cls: 0.096  loss_box_reg: 0.230  loss_rpn_cls: 0.016  loss_rpn_loc: 0.016  time: 0.2831  data_time: 0.0031  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:48:31 d2.utils.events]: [0m eta: 0:18:28  iter: 1059  total_loss: 0.384  loss_cls: 0.131  loss_box_reg: 0.239  loss_rpn_cls: 0.017  loss_rpn_loc: 0.015  time: 0.2832  data_time: 0.0046  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:48:37 d2.utils.events]: [0m eta: 0:18:23  iter: 1079  total_loss: 0.436  loss_cls: 0.128  loss_box_reg: 0.254  loss_rpn_cls: 0.016  loss_rpn_loc: 0.026  time: 0.2832  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:48:43 d2.utils.events]: [0m eta: 0:18:18  iter: 1099  total_loss: 0.478  loss_cls: 0.139  loss_box_reg: 0.289  loss_rpn_cls: 0.021  loss_rpn_loc: 0.027  time: 0.2832  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:48:48 d2.utils.events]: [0m eta: 0:18:13  iter: 1119  total_loss: 0.370  loss_cls: 0.109  loss_box_reg: 0.221  loss_rpn_cls: 0.010  loss_rpn_loc: 0.014  time: 0.2832  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:48:54 d2.utils.events]: [0m eta: 0:18:09  iter: 1139  total_loss: 0.367  loss_cls: 0.108  loss_box_reg: 0.214  loss_rpn_cls: 0.013  loss_rpn_loc: 0.013  time: 0.2832  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:49:00 d2.utils.events]: [0m eta: 0:18:03  iter: 1159  total_loss: 0.344  loss_cls: 0.115  loss_box_reg: 0.199  loss_rpn_cls: 0.018  loss_rpn_loc: 0.025  time: 0.2832  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:49:05 d2.utils.events]: [0m eta: 0:17:58  iter: 1179  total_loss: 0.434  loss_cls: 0.135  loss_box_reg: 0.220  loss_rpn_cls: 0.016  loss_rpn_loc: 0.018  time: 0.2832  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:49:11 d2.utils.events]: [0m eta: 0:17:53  iter: 1199  total_loss: 0.496  loss_cls: 0.143  loss_box_reg: 0.290  loss_rpn_cls: 0.010  loss_rpn_loc: 0.019  time: 0.2832  data_time: 0.0031  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:49:17 d2.utils.events]: [0m eta: 0:17:48  iter: 1219  total_loss: 0.377  loss_cls: 0.119  loss_box_reg: 0.204  loss_rpn_cls: 0.013  loss_rpn_loc: 0.015  time: 0.2833  data_time: 0.0039  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:49:23 d2.utils.events]: [0m eta: 0:17:43  iter: 1239  total_loss: 0.394  loss_cls: 0.118  loss_box_reg: 0.228  loss_rpn_cls: 0.013  loss_rpn_loc: 0.017  time: 0.2833  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:49:28 d2.utils.events]: [0m eta: 0:17:37  iter: 1259  total_loss: 0.358  loss_cls: 0.104  loss_box_reg: 0.214  loss_rpn_cls: 0.008  loss_rpn_loc: 0.013  time: 0.2833  data_time: 0.0031  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:49:34 d2.utils.events]: [0m eta: 0:17:32  iter: 1279  total_loss: 0.479  loss_cls: 0.142  loss_box_reg: 0.256  loss_rpn_cls: 0.015  loss_rpn_loc: 0.030  time: 0.2833  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:49:40 d2.utils.events]: [0m eta: 0:17:26  iter: 1299  total_loss: 0.327  loss_cls: 0.110  loss_box_reg: 0.215  loss_rpn_cls: 0.010  loss_rpn_loc: 0.016  time: 0.2833  data_time: 0.0037  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:49:45 d2.utils.events]: [0m eta: 0:17:20  iter: 1319  total_loss: 0.445  loss_cls: 0.121  loss_box_reg: 0.245  loss_rpn_cls: 0.012  loss_rpn_loc: 0.025  time: 0.2833  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:49:51 d2.utils.events]: [0m eta: 0:17:14  iter: 1339  total_loss: 0.394  loss_cls: 0.117  loss_box_reg: 0.215  loss_rpn_cls: 0.013  loss_rpn_loc: 0.023  time: 0.2834  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:49:57 d2.utils.events]: [0m eta: 0:17:08  iter: 1359  total_loss: 0.387  loss_cls: 0.119  loss_box_reg: 0.212  loss_rpn_cls: 0.016  loss_rpn_loc: 0.018  time: 0.2834  data_time: 0.0036  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:50:02 d2.utils.events]: [0m eta: 0:17:03  iter: 1379  total_loss: 0.385  loss_cls: 0.110  loss_box_reg: 0.244  loss_rpn_cls: 0.014  loss_rpn_loc: 0.018  time: 0.2834  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:50:08 d2.utils.events]: [0m eta: 0:16:57  iter: 1399  total_loss: 0.434  loss_cls: 0.116  loss_box_reg: 0.269  loss_rpn_cls: 0.016  loss_rpn_loc: 0.022  time: 0.2834  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:50:14 d2.utils.events]: [0m eta: 0:16:51  iter: 1419  total_loss: 0.462  loss_cls: 0.147  loss_box_reg: 0.251  loss_rpn_cls: 0.012  loss_rpn_loc: 0.028  time: 0.2834  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:50:20 d2.utils.events]: [0m eta: 0:16:46  iter: 1439  total_loss: 0.336  loss_cls: 0.107  loss_box_reg: 0.193  loss_rpn_cls: 0.009  loss_rpn_loc: 0.012  time: 0.2834  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:50:25 d2.utils.events]: [0m eta: 0:16:41  iter: 1459  total_loss: 0.376  loss_cls: 0.105  loss_box_reg: 0.213  loss_rpn_cls: 0.017  loss_rpn_loc: 0.028  time: 0.2835  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:50:31 d2.utils.events]: [0m eta: 0:16:35  iter: 1479  total_loss: 0.387  loss_cls: 0.120  loss_box_reg: 0.206  loss_rpn_cls: 0.018  loss_rpn_loc: 0.016  time: 0.2835  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:50:37 d2.utils.events]: [0m eta: 0:16:29  iter: 1499  total_loss: 0.386  loss_cls: 0.100  loss_box_reg: 0.214  loss_rpn_cls: 0.022  loss_rpn_loc: 0.023  time: 0.2836  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:50:42 d2.utils.events]: [0m eta: 0:16:24  iter: 1519  total_loss: 0.346  loss_cls: 0.094  loss_box_reg: 0.201  loss_rpn_cls: 0.012  loss_rpn_loc: 0.014  time: 0.2836  data_time: 0.0036  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:50:48 d2.utils.events]: [0m eta: 0:16:18  iter: 1539  total_loss: 0.355  loss_cls: 0.119  loss_box_reg: 0.209  loss_rpn_cls: 0.011  loss_rpn_loc: 0.015  time: 0.2836  data_time: 0.0039  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:50:54 d2.utils.events]: [0m eta: 0:16:12  iter: 1559  total_loss: 0.342  loss_cls: 0.096  loss_box_reg: 0.204  loss_rpn_cls: 0.013  loss_rpn_loc: 0.017  time: 0.2836  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:51:00 d2.utils.events]: [0m eta: 0:16:06  iter: 1579  total_loss: 0.332  loss_cls: 0.089  loss_box_reg: 0.203  loss_rpn_cls: 0.014  loss_rpn_loc: 0.013  time: 0.2836  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:51:05 d2.utils.events]: [0m eta: 0:16:00  iter: 1599  total_loss: 0.330  loss_cls: 0.118  loss_box_reg: 0.198  loss_rpn_cls: 0.017  loss_rpn_loc: 0.018  time: 0.2836  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:51:11 d2.utils.events]: [0m eta: 0:15:54  iter: 1619  total_loss: 0.385  loss_cls: 0.099  loss_box_reg: 0.207  loss_rpn_cls: 0.011  loss_rpn_loc: 0.019  time: 0.2836  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:51:17 d2.utils.events]: [0m eta: 0:15:49  iter: 1639  total_loss: 0.369  loss_cls: 0.109  loss_box_reg: 0.222  loss_rpn_cls: 0.013  loss_rpn_loc: 0.017  time: 0.2836  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:51:22 d2.utils.events]: [0m eta: 0:15:43  iter: 1659  total_loss: 0.361  loss_cls: 0.116  loss_box_reg: 0.200  loss_rpn_cls: 0.015  loss_rpn_loc: 0.015  time: 0.2836  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:51:28 d2.utils.events]: [0m eta: 0:15:38  iter: 1679  total_loss: 0.414  loss_cls: 0.118  loss_box_reg: 0.253  loss_rpn_cls: 0.014  loss_rpn_loc: 0.022  time: 0.2837  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:51:34 d2.utils.events]: [0m eta: 0:15:33  iter: 1699  total_loss: 0.370  loss_cls: 0.103  loss_box_reg: 0.226  loss_rpn_cls: 0.010  loss_rpn_loc: 0.021  time: 0.2837  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:51:40 d2.utils.events]: [0m eta: 0:15:27  iter: 1719  total_loss: 0.388  loss_cls: 0.118  loss_box_reg: 0.247  loss_rpn_cls: 0.012  loss_rpn_loc: 0.017  time: 0.2837  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:51:45 d2.utils.events]: [0m eta: 0:15:21  iter: 1739  total_loss: 0.352  loss_cls: 0.100  loss_box_reg: 0.207  loss_rpn_cls: 0.013  loss_rpn_loc: 0.013  time: 0.2837  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:51:51 d2.utils.events]: [0m eta: 0:15:15  iter: 1759  total_loss: 0.345  loss_cls: 0.110  loss_box_reg: 0.208  loss_rpn_cls: 0.010  loss_rpn_loc: 0.021  time: 0.2837  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:51:57 d2.utils.events]: [0m eta: 0:15:09  iter: 1779  total_loss: 0.346  loss_cls: 0.101  loss_box_reg: 0.192  loss_rpn_cls: 0.010  loss_rpn_loc: 0.016  time: 0.2837  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:52:02 d2.utils.events]: [0m eta: 0:15:03  iter: 1799  total_loss: 0.373  loss_cls: 0.111  loss_box_reg: 0.231  loss_rpn_cls: 0.014  loss_rpn_loc: 0.023  time: 0.2837  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:52:08 d2.utils.events]: [0m eta: 0:14:58  iter: 1819  total_loss: 0.342  loss_cls: 0.096  loss_box_reg: 0.201  loss_rpn_cls: 0.013  loss_rpn_loc: 0.016  time: 0.2837  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:52:14 d2.utils.events]: [0m eta: 0:14:52  iter: 1839  total_loss: 0.352  loss_cls: 0.097  loss_box_reg: 0.221  loss_rpn_cls: 0.014  loss_rpn_loc: 0.021  time: 0.2837  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:52:19 d2.utils.events]: [0m eta: 0:14:47  iter: 1859  total_loss: 0.392  loss_cls: 0.125  loss_box_reg: 0.251  loss_rpn_cls: 0.012  loss_rpn_loc: 0.020  time: 0.2837  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:52:25 d2.utils.events]: [0m eta: 0:14:41  iter: 1879  total_loss: 0.332  loss_cls: 0.087  loss_box_reg: 0.203  loss_rpn_cls: 0.009  loss_rpn_loc: 0.014  time: 0.2837  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:52:31 d2.utils.events]: [0m eta: 0:14:35  iter: 1899  total_loss: 0.352  loss_cls: 0.104  loss_box_reg: 0.216  loss_rpn_cls: 0.015  loss_rpn_loc: 0.020  time: 0.2837  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:52:36 d2.utils.events]: [0m eta: 0:14:29  iter: 1919  total_loss: 0.290  loss_cls: 0.086  loss_box_reg: 0.181  loss_rpn_cls: 0.012  loss_rpn_loc: 0.016  time: 0.2837  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:52:42 d2.utils.events]: [0m eta: 0:14:23  iter: 1939  total_loss: 0.343  loss_cls: 0.082  loss_box_reg: 0.201  loss_rpn_cls: 0.012  loss_rpn_loc: 0.015  time: 0.2837  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:52:48 d2.utils.events]: [0m eta: 0:14:17  iter: 1959  total_loss: 0.310  loss_cls: 0.108  loss_box_reg: 0.184  loss_rpn_cls: 0.010  loss_rpn_loc: 0.018  time: 0.2837  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:52:53 d2.utils.events]: [0m eta: 0:14:11  iter: 1979  total_loss: 0.388  loss_cls: 0.116  loss_box_reg: 0.250  loss_rpn_cls: 0.013  loss_rpn_loc: 0.024  time: 0.2837  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:52:59 d2.utils.events]: [0m eta: 0:14:05  iter: 1999  total_loss: 0.403  loss_cls: 0.127  loss_box_reg: 0.234  loss_rpn_cls: 0.010  loss_rpn_loc: 0.016  time: 0.2838  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:53:05 d2.utils.events]: [0m eta: 0:14:00  iter: 2019  total_loss: 0.345  loss_cls: 0.090  loss_box_reg: 0.222  loss_rpn_cls: 0.009  loss_rpn_loc: 0.013  time: 0.2837  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:53:11 d2.utils.events]: [0m eta: 0:13:54  iter: 2039  total_loss: 0.359  loss_cls: 0.108  loss_box_reg: 0.221  loss_rpn_cls: 0.010  loss_rpn_loc: 0.016  time: 0.2838  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:53:16 d2.utils.events]: [0m eta: 0:13:48  iter: 2059  total_loss: 0.214  loss_cls: 0.066  loss_box_reg: 0.132  loss_rpn_cls: 0.008  loss_rpn_loc: 0.010  time: 0.2837  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:53:22 d2.utils.events]: [0m eta: 0:13:43  iter: 2079  total_loss: 0.360  loss_cls: 0.110  loss_box_reg: 0.208  loss_rpn_cls: 0.018  loss_rpn_loc: 0.021  time: 0.2837  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:53:28 d2.utils.events]: [0m eta: 0:13:37  iter: 2099  total_loss: 0.363  loss_cls: 0.095  loss_box_reg: 0.217  loss_rpn_cls: 0.010  loss_rpn_loc: 0.017  time: 0.2837  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:53:33 d2.utils.events]: [0m eta: 0:13:31  iter: 2119  total_loss: 0.291  loss_cls: 0.084  loss_box_reg: 0.185  loss_rpn_cls: 0.008  loss_rpn_loc: 0.016  time: 0.2837  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:53:39 d2.utils.events]: [0m eta: 0:13:26  iter: 2139  total_loss: 0.310  loss_cls: 0.109  loss_box_reg: 0.179  loss_rpn_cls: 0.009  loss_rpn_loc: 0.011  time: 0.2837  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:53:45 d2.utils.events]: [0m eta: 0:13:20  iter: 2159  total_loss: 0.336  loss_cls: 0.094  loss_box_reg: 0.200  loss_rpn_cls: 0.005  loss_rpn_loc: 0.012  time: 0.2837  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:53:50 d2.utils.events]: [0m eta: 0:13:15  iter: 2179  total_loss: 0.384  loss_cls: 0.111  loss_box_reg: 0.220  loss_rpn_cls: 0.009  loss_rpn_loc: 0.025  time: 0.2838  data_time: 0.0036  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:53:56 d2.utils.events]: [0m eta: 0:13:09  iter: 2199  total_loss: 0.338  loss_cls: 0.097  loss_box_reg: 0.213  loss_rpn_cls: 0.010  loss_rpn_loc: 0.012  time: 0.2838  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:54:02 d2.utils.events]: [0m eta: 0:13:03  iter: 2219  total_loss: 0.352  loss_cls: 0.103  loss_box_reg: 0.225  loss_rpn_cls: 0.007  loss_rpn_loc: 0.014  time: 0.2838  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:54:07 d2.utils.events]: [0m eta: 0:12:57  iter: 2239  total_loss: 0.338  loss_cls: 0.100  loss_box_reg: 0.209  loss_rpn_cls: 0.008  loss_rpn_loc: 0.018  time: 0.2838  data_time: 0.0031  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:54:13 d2.utils.events]: [0m eta: 0:12:52  iter: 2259  total_loss: 0.349  loss_cls: 0.106  loss_box_reg: 0.227  loss_rpn_cls: 0.014  loss_rpn_loc: 0.015  time: 0.2838  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:54:19 d2.utils.events]: [0m eta: 0:12:47  iter: 2279  total_loss: 0.291  loss_cls: 0.092  loss_box_reg: 0.193  loss_rpn_cls: 0.007  loss_rpn_loc: 0.012  time: 0.2838  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:54:25 d2.utils.events]: [0m eta: 0:12:41  iter: 2299  total_loss: 0.347  loss_cls: 0.109  loss_box_reg: 0.199  loss_rpn_cls: 0.009  loss_rpn_loc: 0.018  time: 0.2838  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:54:30 d2.utils.events]: [0m eta: 0:12:35  iter: 2319  total_loss: 0.321  loss_cls: 0.114  loss_box_reg: 0.175  loss_rpn_cls: 0.011  loss_rpn_loc: 0.014  time: 0.2838  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:54:36 d2.utils.events]: [0m eta: 0:12:30  iter: 2339  total_loss: 0.406  loss_cls: 0.133  loss_box_reg: 0.236  loss_rpn_cls: 0.018  loss_rpn_loc: 0.029  time: 0.2838  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:54:42 d2.utils.events]: [0m eta: 0:12:24  iter: 2359  total_loss: 0.350  loss_cls: 0.110  loss_box_reg: 0.216  loss_rpn_cls: 0.009  loss_rpn_loc: 0.013  time: 0.2838  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:54:47 d2.utils.events]: [0m eta: 0:12:18  iter: 2379  total_loss: 0.421  loss_cls: 0.144  loss_box_reg: 0.225  loss_rpn_cls: 0.015  loss_rpn_loc: 0.025  time: 0.2838  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:54:53 d2.utils.events]: [0m eta: 0:12:13  iter: 2399  total_loss: 0.390  loss_cls: 0.117  loss_box_reg: 0.217  loss_rpn_cls: 0.012  loss_rpn_loc: 0.022  time: 0.2838  data_time: 0.0031  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:54:59 d2.utils.events]: [0m eta: 0:12:07  iter: 2419  total_loss: 0.390  loss_cls: 0.111  loss_box_reg: 0.206  loss_rpn_cls: 0.010  loss_rpn_loc: 0.015  time: 0.2838  data_time: 0.0031  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:55:04 d2.utils.events]: [0m eta: 0:12:02  iter: 2439  total_loss: 0.361  loss_cls: 0.100  loss_box_reg: 0.215  loss_rpn_cls: 0.016  loss_rpn_loc: 0.029  time: 0.2838  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:55:10 d2.utils.events]: [0m eta: 0:11:56  iter: 2459  total_loss: 0.353  loss_cls: 0.107  loss_box_reg: 0.216  loss_rpn_cls: 0.010  loss_rpn_loc: 0.016  time: 0.2838  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:55:16 d2.utils.events]: [0m eta: 0:11:50  iter: 2479  total_loss: 0.377  loss_cls: 0.110  loss_box_reg: 0.229  loss_rpn_cls: 0.010  loss_rpn_loc: 0.020  time: 0.2838  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:55:22 d2.utils.events]: [0m eta: 0:11:45  iter: 2499  total_loss: 0.408  loss_cls: 0.119  loss_box_reg: 0.242  loss_rpn_cls: 0.010  loss_rpn_loc: 0.027  time: 0.2838  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:55:27 d2.utils.events]: [0m eta: 0:11:39  iter: 2519  total_loss: 0.401  loss_cls: 0.114  loss_box_reg: 0.238  loss_rpn_cls: 0.011  loss_rpn_loc: 0.024  time: 0.2838  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:55:33 d2.utils.events]: [0m eta: 0:11:33  iter: 2539  total_loss: 0.325  loss_cls: 0.100  loss_box_reg: 0.176  loss_rpn_cls: 0.013  loss_rpn_loc: 0.012  time: 0.2838  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:55:39 d2.utils.events]: [0m eta: 0:11:28  iter: 2559  total_loss: 0.397  loss_cls: 0.116  loss_box_reg: 0.218  loss_rpn_cls: 0.012  loss_rpn_loc: 0.022  time: 0.2838  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:55:44 d2.utils.events]: [0m eta: 0:11:22  iter: 2579  total_loss: 0.293  loss_cls: 0.087  loss_box_reg: 0.183  loss_rpn_cls: 0.010  loss_rpn_loc: 0.016  time: 0.2838  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:55:50 d2.utils.events]: [0m eta: 0:11:16  iter: 2599  total_loss: 0.401  loss_cls: 0.109  loss_box_reg: 0.257  loss_rpn_cls: 0.010  loss_rpn_loc: 0.026  time: 0.2838  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:55:56 d2.utils.events]: [0m eta: 0:11:11  iter: 2619  total_loss: 0.380  loss_cls: 0.124  loss_box_reg: 0.220  loss_rpn_cls: 0.011  loss_rpn_loc: 0.022  time: 0.2838  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:56:01 d2.utils.events]: [0m eta: 0:11:05  iter: 2639  total_loss: 0.355  loss_cls: 0.097  loss_box_reg: 0.204  loss_rpn_cls: 0.008  loss_rpn_loc: 0.014  time: 0.2838  data_time: 0.0036  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:56:07 d2.utils.events]: [0m eta: 0:10:59  iter: 2659  total_loss: 0.395  loss_cls: 0.115  loss_box_reg: 0.236  loss_rpn_cls: 0.010  loss_rpn_loc: 0.020  time: 0.2838  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:56:13 d2.utils.events]: [0m eta: 0:10:53  iter: 2679  total_loss: 0.365  loss_cls: 0.104  loss_box_reg: 0.222  loss_rpn_cls: 0.014  loss_rpn_loc: 0.023  time: 0.2838  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:56:18 d2.utils.events]: [0m eta: 0:10:48  iter: 2699  total_loss: 0.352  loss_cls: 0.099  loss_box_reg: 0.213  loss_rpn_cls: 0.011  loss_rpn_loc: 0.013  time: 0.2838  data_time: 0.0036  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:56:24 d2.utils.events]: [0m eta: 0:10:42  iter: 2719  total_loss: 0.294  loss_cls: 0.102  loss_box_reg: 0.167  loss_rpn_cls: 0.006  loss_rpn_loc: 0.013  time: 0.2838  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:56:30 d2.utils.events]: [0m eta: 0:10:36  iter: 2739  total_loss: 0.407  loss_cls: 0.140  loss_box_reg: 0.244  loss_rpn_cls: 0.011  loss_rpn_loc: 0.019  time: 0.2838  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:56:35 d2.utils.events]: [0m eta: 0:10:31  iter: 2759  total_loss: 0.397  loss_cls: 0.126  loss_box_reg: 0.229  loss_rpn_cls: 0.016  loss_rpn_loc: 0.017  time: 0.2838  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:56:41 d2.utils.events]: [0m eta: 0:10:25  iter: 2779  total_loss: 0.332  loss_cls: 0.090  loss_box_reg: 0.211  loss_rpn_cls: 0.007  loss_rpn_loc: 0.017  time: 0.2838  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:56:47 d2.utils.events]: [0m eta: 0:10:20  iter: 2799  total_loss: 0.332  loss_cls: 0.098  loss_box_reg: 0.211  loss_rpn_cls: 0.006  loss_rpn_loc: 0.014  time: 0.2838  data_time: 0.0037  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:56:52 d2.utils.events]: [0m eta: 0:10:14  iter: 2819  total_loss: 0.299  loss_cls: 0.088  loss_box_reg: 0.153  loss_rpn_cls: 0.007  loss_rpn_loc: 0.015  time: 0.2838  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:56:58 d2.utils.events]: [0m eta: 0:10:08  iter: 2839  total_loss: 0.374  loss_cls: 0.109  loss_box_reg: 0.227  loss_rpn_cls: 0.009  loss_rpn_loc: 0.025  time: 0.2838  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:57:04 d2.utils.events]: [0m eta: 0:10:03  iter: 2859  total_loss: 0.456  loss_cls: 0.116  loss_box_reg: 0.260  loss_rpn_cls: 0.013  loss_rpn_loc: 0.035  time: 0.2838  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:57:10 d2.utils.events]: [0m eta: 0:09:57  iter: 2879  total_loss: 0.286  loss_cls: 0.080  loss_box_reg: 0.201  loss_rpn_cls: 0.006  loss_rpn_loc: 0.019  time: 0.2838  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:57:15 d2.utils.events]: [0m eta: 0:09:52  iter: 2899  total_loss: 0.313  loss_cls: 0.081  loss_box_reg: 0.212  loss_rpn_cls: 0.008  loss_rpn_loc: 0.013  time: 0.2838  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:57:21 d2.utils.events]: [0m eta: 0:09:46  iter: 2919  total_loss: 0.390  loss_cls: 0.106  loss_box_reg: 0.220  loss_rpn_cls: 0.010  loss_rpn_loc: 0.021  time: 0.2838  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:57:27 d2.utils.events]: [0m eta: 0:09:41  iter: 2939  total_loss: 0.328  loss_cls: 0.116  loss_box_reg: 0.199  loss_rpn_cls: 0.010  loss_rpn_loc: 0.013  time: 0.2838  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:57:32 d2.utils.events]: [0m eta: 0:09:35  iter: 2959  total_loss: 0.327  loss_cls: 0.096  loss_box_reg: 0.198  loss_rpn_cls: 0.011  loss_rpn_loc: 0.019  time: 0.2838  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:57:38 d2.utils.events]: [0m eta: 0:09:29  iter: 2979  total_loss: 0.312  loss_cls: 0.089  loss_box_reg: 0.190  loss_rpn_cls: 0.008  loss_rpn_loc: 0.012  time: 0.2838  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:57:44 d2.utils.events]: [0m eta: 0:09:23  iter: 2999  total_loss: 0.351  loss_cls: 0.101  loss_box_reg: 0.241  loss_rpn_cls: 0.007  loss_rpn_loc: 0.020  time: 0.2838  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:57:49 d2.utils.events]: [0m eta: 0:09:18  iter: 3019  total_loss: 0.360  loss_cls: 0.107  loss_box_reg: 0.209  loss_rpn_cls: 0.008  loss_rpn_loc: 0.016  time: 0.2838  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:57:55 d2.utils.events]: [0m eta: 0:09:12  iter: 3039  total_loss: 0.373  loss_cls: 0.095  loss_box_reg: 0.198  loss_rpn_cls: 0.006  loss_rpn_loc: 0.017  time: 0.2838  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:58:01 d2.utils.events]: [0m eta: 0:09:07  iter: 3059  total_loss: 0.339  loss_cls: 0.099  loss_box_reg: 0.203  loss_rpn_cls: 0.010  loss_rpn_loc: 0.017  time: 0.2838  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:58:06 d2.utils.events]: [0m eta: 0:09:01  iter: 3079  total_loss: 0.400  loss_cls: 0.119  loss_box_reg: 0.236  loss_rpn_cls: 0.011  loss_rpn_loc: 0.029  time: 0.2838  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:58:12 d2.utils.events]: [0m eta: 0:08:55  iter: 3099  total_loss: 0.344  loss_cls: 0.089  loss_box_reg: 0.221  loss_rpn_cls: 0.011  loss_rpn_loc: 0.019  time: 0.2838  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:58:18 d2.utils.events]: [0m eta: 0:08:50  iter: 3119  total_loss: 0.361  loss_cls: 0.101  loss_box_reg: 0.220  loss_rpn_cls: 0.010  loss_rpn_loc: 0.012  time: 0.2838  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:58:24 d2.utils.events]: [0m eta: 0:08:44  iter: 3139  total_loss: 0.323  loss_cls: 0.079  loss_box_reg: 0.206  loss_rpn_cls: 0.008  loss_rpn_loc: 0.017  time: 0.2838  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:58:29 d2.utils.events]: [0m eta: 0:08:39  iter: 3159  total_loss: 0.389  loss_cls: 0.109  loss_box_reg: 0.235  loss_rpn_cls: 0.012  loss_rpn_loc: 0.023  time: 0.2838  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:58:35 d2.utils.events]: [0m eta: 0:08:33  iter: 3179  total_loss: 0.400  loss_cls: 0.126  loss_box_reg: 0.222  loss_rpn_cls: 0.013  loss_rpn_loc: 0.026  time: 0.2839  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:58:41 d2.utils.events]: [0m eta: 0:08:27  iter: 3199  total_loss: 0.367  loss_cls: 0.109  loss_box_reg: 0.231  loss_rpn_cls: 0.007  loss_rpn_loc: 0.015  time: 0.2838  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:58:46 d2.utils.events]: [0m eta: 0:08:22  iter: 3219  total_loss: 0.292  loss_cls: 0.078  loss_box_reg: 0.172  loss_rpn_cls: 0.010  loss_rpn_loc: 0.017  time: 0.2838  data_time: 0.0036  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:58:52 d2.utils.events]: [0m eta: 0:08:16  iter: 3239  total_loss: 0.372  loss_cls: 0.101  loss_box_reg: 0.231  loss_rpn_cls: 0.008  loss_rpn_loc: 0.018  time: 0.2839  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:58:58 d2.utils.events]: [0m eta: 0:08:11  iter: 3259  total_loss: 0.239  loss_cls: 0.077  loss_box_reg: 0.172  loss_rpn_cls: 0.005  loss_rpn_loc: 0.010  time: 0.2839  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:59:03 d2.utils.events]: [0m eta: 0:08:05  iter: 3279  total_loss: 0.299  loss_cls: 0.094  loss_box_reg: 0.174  loss_rpn_cls: 0.006  loss_rpn_loc: 0.014  time: 0.2838  data_time: 0.0036  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:59:09 d2.utils.events]: [0m eta: 0:07:59  iter: 3299  total_loss: 0.384  loss_cls: 0.113  loss_box_reg: 0.216  loss_rpn_cls: 0.012  loss_rpn_loc: 0.022  time: 0.2838  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:59:15 d2.utils.events]: [0m eta: 0:07:54  iter: 3319  total_loss: 0.353  loss_cls: 0.100  loss_box_reg: 0.214  loss_rpn_cls: 0.009  loss_rpn_loc: 0.020  time: 0.2839  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:59:20 d2.utils.events]: [0m eta: 0:07:48  iter: 3339  total_loss: 0.351  loss_cls: 0.112  loss_box_reg: 0.210  loss_rpn_cls: 0.010  loss_rpn_loc: 0.017  time: 0.2839  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:59:26 d2.utils.events]: [0m eta: 0:07:42  iter: 3359  total_loss: 0.324  loss_cls: 0.091  loss_box_reg: 0.209  loss_rpn_cls: 0.007  loss_rpn_loc: 0.020  time: 0.2839  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:59:32 d2.utils.events]: [0m eta: 0:07:37  iter: 3379  total_loss: 0.323  loss_cls: 0.092  loss_box_reg: 0.199  loss_rpn_cls: 0.007  loss_rpn_loc: 0.014  time: 0.2839  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:59:38 d2.utils.events]: [0m eta: 0:07:31  iter: 3399  total_loss: 0.328  loss_cls: 0.086  loss_box_reg: 0.206  loss_rpn_cls: 0.010  loss_rpn_loc: 0.017  time: 0.2839  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:59:43 d2.utils.events]: [0m eta: 0:07:25  iter: 3419  total_loss: 0.348  loss_cls: 0.115  loss_box_reg: 0.211  loss_rpn_cls: 0.011  loss_rpn_loc: 0.024  time: 0.2839  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:59:49 d2.utils.events]: [0m eta: 0:07:20  iter: 3439  total_loss: 0.317  loss_cls: 0.081  loss_box_reg: 0.191  loss_rpn_cls: 0.009  loss_rpn_loc: 0.016  time: 0.2839  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 12:59:55 d2.utils.events]: [0m eta: 0:07:14  iter: 3459  total_loss: 0.306  loss_cls: 0.085  loss_box_reg: 0.188  loss_rpn_cls: 0.009  loss_rpn_loc: 0.019  time: 0.2839  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:00:00 d2.utils.events]: [0m eta: 0:07:08  iter: 3479  total_loss: 0.258  loss_cls: 0.097  loss_box_reg: 0.167  loss_rpn_cls: 0.008  loss_rpn_loc: 0.009  time: 0.2839  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:00:06 d2.utils.events]: [0m eta: 0:07:03  iter: 3499  total_loss: 0.416  loss_cls: 0.112  loss_box_reg: 0.256  loss_rpn_cls: 0.010  loss_rpn_loc: 0.023  time: 0.2839  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:00:12 d2.utils.events]: [0m eta: 0:06:57  iter: 3519  total_loss: 0.238  loss_cls: 0.087  loss_box_reg: 0.129  loss_rpn_cls: 0.006  loss_rpn_loc: 0.010  time: 0.2839  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:00:18 d2.utils.events]: [0m eta: 0:06:52  iter: 3539  total_loss: 0.430  loss_cls: 0.139  loss_box_reg: 0.253  loss_rpn_cls: 0.007  loss_rpn_loc: 0.019  time: 0.2839  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:00:23 d2.utils.events]: [0m eta: 0:06:46  iter: 3559  total_loss: 0.321  loss_cls: 0.101  loss_box_reg: 0.192  loss_rpn_cls: 0.007  loss_rpn_loc: 0.015  time: 0.2839  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:00:29 d2.utils.events]: [0m eta: 0:06:40  iter: 3579  total_loss: 0.301  loss_cls: 0.093  loss_box_reg: 0.179  loss_rpn_cls: 0.007  loss_rpn_loc: 0.017  time: 0.2839  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:00:35 d2.utils.events]: [0m eta: 0:06:35  iter: 3599  total_loss: 0.363  loss_cls: 0.097  loss_box_reg: 0.232  loss_rpn_cls: 0.008  loss_rpn_loc: 0.017  time: 0.2839  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:00:40 d2.utils.events]: [0m eta: 0:06:29  iter: 3619  total_loss: 0.281  loss_cls: 0.072  loss_box_reg: 0.206  loss_rpn_cls: 0.010  loss_rpn_loc: 0.017  time: 0.2839  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:00:46 d2.utils.events]: [0m eta: 0:06:23  iter: 3639  total_loss: 0.366  loss_cls: 0.110  loss_box_reg: 0.212  loss_rpn_cls: 0.009  loss_rpn_loc: 0.016  time: 0.2839  data_time: 0.0031  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:00:52 d2.utils.events]: [0m eta: 0:06:18  iter: 3659  total_loss: 0.192  loss_cls: 0.055  loss_box_reg: 0.130  loss_rpn_cls: 0.002  loss_rpn_loc: 0.006  time: 0.2839  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:00:57 d2.utils.events]: [0m eta: 0:06:12  iter: 3679  total_loss: 0.266  loss_cls: 0.079  loss_box_reg: 0.168  loss_rpn_cls: 0.005  loss_rpn_loc: 0.014  time: 0.2839  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:01:03 d2.utils.events]: [0m eta: 0:06:06  iter: 3699  total_loss: 0.377  loss_cls: 0.111  loss_box_reg: 0.227  loss_rpn_cls: 0.006  loss_rpn_loc: 0.015  time: 0.2839  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:01:09 d2.utils.events]: [0m eta: 0:06:01  iter: 3719  total_loss: 0.354  loss_cls: 0.099  loss_box_reg: 0.208  loss_rpn_cls: 0.009  loss_rpn_loc: 0.016  time: 0.2839  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:01:14 d2.utils.events]: [0m eta: 0:05:55  iter: 3739  total_loss: 0.277  loss_cls: 0.089  loss_box_reg: 0.181  loss_rpn_cls: 0.008  loss_rpn_loc: 0.010  time: 0.2839  data_time: 0.0036  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:01:20 d2.utils.events]: [0m eta: 0:05:49  iter: 3759  total_loss: 0.329  loss_cls: 0.093  loss_box_reg: 0.211  loss_rpn_cls: 0.006  loss_rpn_loc: 0.013  time: 0.2839  data_time: 0.0036  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:01:26 d2.utils.events]: [0m eta: 0:05:44  iter: 3779  total_loss: 0.307  loss_cls: 0.082  loss_box_reg: 0.201  loss_rpn_cls: 0.010  loss_rpn_loc: 0.018  time: 0.2839  data_time: 0.0036  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:01:32 d2.utils.events]: [0m eta: 0:05:38  iter: 3799  total_loss: 0.329  loss_cls: 0.112  loss_box_reg: 0.209  loss_rpn_cls: 0.008  loss_rpn_loc: 0.020  time: 0.2840  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:01:37 d2.utils.events]: [0m eta: 0:05:33  iter: 3819  total_loss: 0.308  loss_cls: 0.075  loss_box_reg: 0.167  loss_rpn_cls: 0.010  loss_rpn_loc: 0.017  time: 0.2839  data_time: 0.0037  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:01:43 d2.utils.events]: [0m eta: 0:05:27  iter: 3839  total_loss: 0.348  loss_cls: 0.099  loss_box_reg: 0.203  loss_rpn_cls: 0.009  loss_rpn_loc: 0.018  time: 0.2839  data_time: 0.0036  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:01:49 d2.utils.events]: [0m eta: 0:05:21  iter: 3859  total_loss: 0.364  loss_cls: 0.107  loss_box_reg: 0.186  loss_rpn_cls: 0.011  loss_rpn_loc: 0.024  time: 0.2840  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:01:54 d2.utils.events]: [0m eta: 0:05:16  iter: 3879  total_loss: 0.363  loss_cls: 0.098  loss_box_reg: 0.218  loss_rpn_cls: 0.007  loss_rpn_loc: 0.014  time: 0.2840  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:02:00 d2.utils.events]: [0m eta: 0:05:10  iter: 3899  total_loss: 0.298  loss_cls: 0.085  loss_box_reg: 0.192  loss_rpn_cls: 0.008  loss_rpn_loc: 0.015  time: 0.2840  data_time: 0.0036  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:02:06 d2.utils.events]: [0m eta: 0:05:04  iter: 3919  total_loss: 0.355  loss_cls: 0.111  loss_box_reg: 0.214  loss_rpn_cls: 0.011  loss_rpn_loc: 0.023  time: 0.2840  data_time: 0.0031  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:02:12 d2.utils.events]: [0m eta: 0:04:59  iter: 3939  total_loss: 0.248  loss_cls: 0.070  loss_box_reg: 0.170  loss_rpn_cls: 0.008  loss_rpn_loc: 0.012  time: 0.2840  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:02:17 d2.utils.events]: [0m eta: 0:04:53  iter: 3959  total_loss: 0.282  loss_cls: 0.100  loss_box_reg: 0.180  loss_rpn_cls: 0.009  loss_rpn_loc: 0.010  time: 0.2840  data_time: 0.0036  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:02:23 d2.utils.events]: [0m eta: 0:04:48  iter: 3979  total_loss: 0.292  loss_cls: 0.078  loss_box_reg: 0.171  loss_rpn_cls: 0.004  loss_rpn_loc: 0.015  time: 0.2840  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:02:29 d2.utils.events]: [0m eta: 0:04:42  iter: 3999  total_loss: 0.365  loss_cls: 0.098  loss_box_reg: 0.231  loss_rpn_cls: 0.006  loss_rpn_loc: 0.014  time: 0.2840  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:02:34 d2.utils.events]: [0m eta: 0:04:36  iter: 4019  total_loss: 0.254  loss_cls: 0.079  loss_box_reg: 0.181  loss_rpn_cls: 0.005  loss_rpn_loc: 0.013  time: 0.2840  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:02:40 d2.utils.events]: [0m eta: 0:04:31  iter: 4039  total_loss: 0.340  loss_cls: 0.094  loss_box_reg: 0.183  loss_rpn_cls: 0.013  loss_rpn_loc: 0.017  time: 0.2840  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:02:46 d2.utils.events]: [0m eta: 0:04:25  iter: 4059  total_loss: 0.240  loss_cls: 0.064  loss_box_reg: 0.151  loss_rpn_cls: 0.003  loss_rpn_loc: 0.007  time: 0.2840  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:02:51 d2.utils.events]: [0m eta: 0:04:19  iter: 4079  total_loss: 0.354  loss_cls: 0.115  loss_box_reg: 0.207  loss_rpn_cls: 0.008  loss_rpn_loc: 0.020  time: 0.2840  data_time: 0.0037  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:02:57 d2.utils.events]: [0m eta: 0:04:14  iter: 4099  total_loss: 0.408  loss_cls: 0.116  loss_box_reg: 0.242  loss_rpn_cls: 0.014  loss_rpn_loc: 0.019  time: 0.2840  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:03:03 d2.utils.events]: [0m eta: 0:04:08  iter: 4119  total_loss: 0.314  loss_cls: 0.106  loss_box_reg: 0.186  loss_rpn_cls: 0.006  loss_rpn_loc: 0.013  time: 0.2840  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:03:09 d2.utils.events]: [0m eta: 0:04:02  iter: 4139  total_loss: 0.346  loss_cls: 0.112  loss_box_reg: 0.221  loss_rpn_cls: 0.011  loss_rpn_loc: 0.026  time: 0.2840  data_time: 0.0038  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:03:14 d2.utils.events]: [0m eta: 0:03:57  iter: 4159  total_loss: 0.327  loss_cls: 0.094  loss_box_reg: 0.199  loss_rpn_cls: 0.013  loss_rpn_loc: 0.020  time: 0.2840  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:03:20 d2.utils.events]: [0m eta: 0:03:51  iter: 4179  total_loss: 0.336  loss_cls: 0.089  loss_box_reg: 0.210  loss_rpn_cls: 0.008  loss_rpn_loc: 0.018  time: 0.2840  data_time: 0.0036  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:03:26 d2.utils.events]: [0m eta: 0:03:46  iter: 4199  total_loss: 0.252  loss_cls: 0.060  loss_box_reg: 0.165  loss_rpn_cls: 0.002  loss_rpn_loc: 0.011  time: 0.2840  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:03:31 d2.utils.events]: [0m eta: 0:03:40  iter: 4219  total_loss: 0.407  loss_cls: 0.115  loss_box_reg: 0.240  loss_rpn_cls: 0.012  loss_rpn_loc: 0.026  time: 0.2840  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:03:37 d2.utils.events]: [0m eta: 0:03:34  iter: 4239  total_loss: 0.336  loss_cls: 0.101  loss_box_reg: 0.201  loss_rpn_cls: 0.008  loss_rpn_loc: 0.021  time: 0.2840  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:03:43 d2.utils.events]: [0m eta: 0:03:29  iter: 4259  total_loss: 0.296  loss_cls: 0.087  loss_box_reg: 0.164  loss_rpn_cls: 0.009  loss_rpn_loc: 0.017  time: 0.2840  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:03:48 d2.utils.events]: [0m eta: 0:03:23  iter: 4279  total_loss: 0.368  loss_cls: 0.105  loss_box_reg: 0.244  loss_rpn_cls: 0.010  loss_rpn_loc: 0.019  time: 0.2840  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:03:54 d2.utils.events]: [0m eta: 0:03:17  iter: 4299  total_loss: 0.359  loss_cls: 0.088  loss_box_reg: 0.210  loss_rpn_cls: 0.010  loss_rpn_loc: 0.017  time: 0.2840  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:04:00 d2.utils.events]: [0m eta: 0:03:12  iter: 4319  total_loss: 0.274  loss_cls: 0.086  loss_box_reg: 0.172  loss_rpn_cls: 0.008  loss_rpn_loc: 0.014  time: 0.2840  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:04:06 d2.utils.events]: [0m eta: 0:03:06  iter: 4339  total_loss: 0.336  loss_cls: 0.100  loss_box_reg: 0.222  loss_rpn_cls: 0.009  loss_rpn_loc: 0.021  time: 0.2840  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:04:11 d2.utils.events]: [0m eta: 0:03:00  iter: 4359  total_loss: 0.286  loss_cls: 0.087  loss_box_reg: 0.179  loss_rpn_cls: 0.006  loss_rpn_loc: 0.012  time: 0.2840  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:04:17 d2.utils.events]: [0m eta: 0:02:55  iter: 4379  total_loss: 0.268  loss_cls: 0.075  loss_box_reg: 0.190  loss_rpn_cls: 0.004  loss_rpn_loc: 0.014  time: 0.2840  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:04:23 d2.utils.events]: [0m eta: 0:02:49  iter: 4399  total_loss: 0.275  loss_cls: 0.081  loss_box_reg: 0.174  loss_rpn_cls: 0.004  loss_rpn_loc: 0.009  time: 0.2840  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:04:29 d2.utils.events]: [0m eta: 0:02:43  iter: 4419  total_loss: 0.231  loss_cls: 0.056  loss_box_reg: 0.160  loss_rpn_cls: 0.005  loss_rpn_loc: 0.010  time: 0.2841  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:04:34 d2.utils.events]: [0m eta: 0:02:38  iter: 4439  total_loss: 0.284  loss_cls: 0.093  loss_box_reg: 0.172  loss_rpn_cls: 0.008  loss_rpn_loc: 0.013  time: 0.2840  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:04:40 d2.utils.events]: [0m eta: 0:02:32  iter: 4459  total_loss: 0.288  loss_cls: 0.076  loss_box_reg: 0.189  loss_rpn_cls: 0.004  loss_rpn_loc: 0.012  time: 0.2840  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:04:45 d2.utils.events]: [0m eta: 0:02:26  iter: 4479  total_loss: 0.274  loss_cls: 0.075  loss_box_reg: 0.162  loss_rpn_cls: 0.005  loss_rpn_loc: 0.012  time: 0.2840  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:04:51 d2.utils.events]: [0m eta: 0:02:21  iter: 4499  total_loss: 0.327  loss_cls: 0.092  loss_box_reg: 0.207  loss_rpn_cls: 0.007  loss_rpn_loc: 0.014  time: 0.2840  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:04:57 d2.utils.events]: [0m eta: 0:02:15  iter: 4519  total_loss: 0.359  loss_cls: 0.105  loss_box_reg: 0.217  loss_rpn_cls: 0.011  loss_rpn_loc: 0.013  time: 0.2840  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:05:03 d2.utils.events]: [0m eta: 0:02:10  iter: 4539  total_loss: 0.327  loss_cls: 0.092  loss_box_reg: 0.196  loss_rpn_cls: 0.012  loss_rpn_loc: 0.024  time: 0.2840  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:05:08 d2.utils.events]: [0m eta: 0:02:04  iter: 4559  total_loss: 0.329  loss_cls: 0.104  loss_box_reg: 0.182  loss_rpn_cls: 0.010  loss_rpn_loc: 0.016  time: 0.2840  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:05:14 d2.utils.events]: [0m eta: 0:01:58  iter: 4579  total_loss: 0.292  loss_cls: 0.077  loss_box_reg: 0.179  loss_rpn_cls: 0.006  loss_rpn_loc: 0.018  time: 0.2840  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:05:20 d2.utils.events]: [0m eta: 0:01:53  iter: 4599  total_loss: 0.381  loss_cls: 0.113  loss_box_reg: 0.241  loss_rpn_cls: 0.007  loss_rpn_loc: 0.014  time: 0.2840  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:05:25 d2.utils.events]: [0m eta: 0:01:47  iter: 4619  total_loss: 0.302  loss_cls: 0.083  loss_box_reg: 0.201  loss_rpn_cls: 0.006  loss_rpn_loc: 0.013  time: 0.2840  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:05:31 d2.utils.events]: [0m eta: 0:01:41  iter: 4639  total_loss: 0.383  loss_cls: 0.110  loss_box_reg: 0.233  loss_rpn_cls: 0.008  loss_rpn_loc: 0.021  time: 0.2841  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:05:37 d2.utils.events]: [0m eta: 0:01:36  iter: 4659  total_loss: 0.337  loss_cls: 0.090  loss_box_reg: 0.202  loss_rpn_cls: 0.007  loss_rpn_loc: 0.016  time: 0.2841  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:05:43 d2.utils.events]: [0m eta: 0:01:30  iter: 4679  total_loss: 0.309  loss_cls: 0.092  loss_box_reg: 0.189  loss_rpn_cls: 0.007  loss_rpn_loc: 0.015  time: 0.2841  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:05:48 d2.utils.events]: [0m eta: 0:01:24  iter: 4699  total_loss: 0.325  loss_cls: 0.096  loss_box_reg: 0.210  loss_rpn_cls: 0.006  loss_rpn_loc: 0.017  time: 0.2841  data_time: 0.0036  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:05:54 d2.utils.events]: [0m eta: 0:01:19  iter: 4719  total_loss: 0.370  loss_cls: 0.127  loss_box_reg: 0.212  loss_rpn_cls: 0.011  loss_rpn_loc: 0.027  time: 0.2841  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:06:00 d2.utils.events]: [0m eta: 0:01:13  iter: 4739  total_loss: 0.384  loss_cls: 0.107  loss_box_reg: 0.209  loss_rpn_cls: 0.010  loss_rpn_loc: 0.023  time: 0.2841  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:06:06 d2.utils.events]: [0m eta: 0:01:08  iter: 4759  total_loss: 0.308  loss_cls: 0.095  loss_box_reg: 0.189  loss_rpn_cls: 0.004  loss_rpn_loc: 0.016  time: 0.2841  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:06:11 d2.utils.events]: [0m eta: 0:01:02  iter: 4779  total_loss: 0.358  loss_cls: 0.087  loss_box_reg: 0.200  loss_rpn_cls: 0.007  loss_rpn_loc: 0.028  time: 0.2841  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:06:17 d2.utils.events]: [0m eta: 0:00:56  iter: 4799  total_loss: 0.393  loss_cls: 0.111  loss_box_reg: 0.217  loss_rpn_cls: 0.011  loss_rpn_loc: 0.022  time: 0.2842  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:06:23 d2.utils.events]: [0m eta: 0:00:51  iter: 4819  total_loss: 0.279  loss_cls: 0.083  loss_box_reg: 0.182  loss_rpn_cls: 0.009  loss_rpn_loc: 0.014  time: 0.2841  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:06:28 d2.utils.events]: [0m eta: 0:00:45  iter: 4839  total_loss: 0.326  loss_cls: 0.093  loss_box_reg: 0.203  loss_rpn_cls: 0.009  loss_rpn_loc: 0.019  time: 0.2841  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:06:34 d2.utils.events]: [0m eta: 0:00:39  iter: 4859  total_loss: 0.398  loss_cls: 0.110  loss_box_reg: 0.224  loss_rpn_cls: 0.011  loss_rpn_loc: 0.029  time: 0.2841  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:06:40 d2.utils.events]: [0m eta: 0:00:34  iter: 4879  total_loss: 0.263  loss_cls: 0.074  loss_box_reg: 0.180  loss_rpn_cls: 0.006  loss_rpn_loc: 0.012  time: 0.2841  data_time: 0.0034  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:06:46 d2.utils.events]: [0m eta: 0:00:28  iter: 4899  total_loss: 0.321  loss_cls: 0.086  loss_box_reg: 0.196  loss_rpn_cls: 0.010  loss_rpn_loc: 0.020  time: 0.2841  data_time: 0.0037  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:06:51 d2.utils.events]: [0m eta: 0:00:22  iter: 4919  total_loss: 0.385  loss_cls: 0.110  loss_box_reg: 0.209  loss_rpn_cls: 0.008  loss_rpn_loc: 0.020  time: 0.2841  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:06:57 d2.utils.events]: [0m eta: 0:00:17  iter: 4939  total_loss: 0.280  loss_cls: 0.080  loss_box_reg: 0.182  loss_rpn_cls: 0.007  loss_rpn_loc: 0.012  time: 0.2841  data_time: 0.0036  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:07:03 d2.utils.events]: [0m eta: 0:00:11  iter: 4959  total_loss: 0.414  loss_cls: 0.120  loss_box_reg: 0.239  loss_rpn_cls: 0.008  loss_rpn_loc: 0.020  time: 0.2841  data_time: 0.0032  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:07:08 d2.utils.events]: [0m eta: 0:00:05  iter: 4979  total_loss: 0.353  loss_cls: 0.105  loss_box_reg: 0.216  loss_rpn_cls: 0.010  loss_rpn_loc: 0.015  time: 0.2842  data_time: 0.0033  lr: 0.000250  max_mem: 2338M
Loading sequence 0000
Loading sequence 0001
Loading sequence 0002
Loading sequence 0003
Loading sequence 0004
Loading sequence 0005
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0009
Loading sequence 0010
Loading sequence 0011
Loading sequence 0012
Loading sequence 0013
Loading sequence 0014
Loading sequence 0015
Loading sequence 0016
Loading sequence 0017
Loading sequence 0018
Loading sequence 0019
Loading sequence 0020
0000
0001
0002
0003
0004
0005
0006
0007
0008
0009
0010
0011
0012
0013
0014
0015
0016
0017
0018
0019
0020
Loaded 2336 images!
[32m[03/12 13:07:45 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    None    | 0            |    Car     | 7896         | Pedestrian | 3340         |
|            |              |            |              |            |              |
|   total    | 11236        |            |              |            |              |[0m
[32m[03/12 13:07:45 d2.data.common]: [0mSerializing 2336 elements to byte tensors and concatenating them all ...
[32m[03/12 13:07:45 d2.data.common]: [0mSerialized dataset takes 1.67 MiB
[5m[31mWARNING[0m [32m[03/12 13:07:45 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[03/12 13:07:45 d2.utils.events]: [0m eta: 0:00:00  iter: 4999  total_loss: 0.308  loss_cls: 0.082  loss_box_reg: 0.190  loss_rpn_cls: 0.008  loss_rpn_loc: 0.015  time: 0.2842  data_time: 0.0035  lr: 0.000250  max_mem: 2338M
[32m[03/12 13:07:45 d2.engine.hooks]: [0mOverall training speed: 4997 iterations in 0:23:40 (0.2842 s / it)
[32m[03/12 13:07:45 d2.engine.hooks]: [0mTotal training time: 0:24:14 (0:00:33 on hooks)
