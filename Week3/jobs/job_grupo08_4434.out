Metadata(name='MOTSChallenge_train', thing_classes=['None', 'Car', 'Pedestrian'])
Loading sequence 0002
Loading sequence 0005
Loading sequence 0009
Loading sequence 0011
0002
0005
0009
0011
Loaded 2004 images!
[32m[03/14 20:10:33 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=12, bias=True)
    )
  )
)
Loading sequence 0002
Loading sequence 0005
Loading sequence 0009
Loading sequence 0011
0002
0005
0009
0011
Loaded 2004 images!
[32m[03/14 20:12:49 d2.data.build]: [0mRemoved 0 images with no usable annotations. 2004 images left.
[32m[03/14 20:12:49 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    None    | 0            |    Car     | 0            | Pedestrian | 18817        |
|            |              |            |              |            |              |
|   total    | 18817        |            |              |            |              |[0m
[32m[03/14 20:12:49 d2.data.common]: [0mSerializing 2004 elements to byte tensors and concatenating them all ...
[32m[03/14 20:12:50 d2.data.common]: [0mSerialized dataset takes 2.29 MiB
[32m[03/14 20:12:50 d2.data.detection_utils]: [0mTransformGens used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[03/14 20:12:50 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[03/14 20:13:05 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[03/14 20:13:23 d2.utils.events]: [0m eta: 0:38:12  iter: 19  total_loss: 2.407  loss_cls: 1.471  loss_box_reg: 0.817  loss_rpn_cls: 0.056  loss_rpn_loc: 0.062  time: 0.4477  data_time: 0.0253  lr: 0.000005  max_mem: 3786M
[32m[03/14 20:13:31 d2.utils.events]: [0m eta: 0:35:29  iter: 39  total_loss: 2.400  loss_cls: 1.406  loss_box_reg: 0.848  loss_rpn_cls: 0.051  loss_rpn_loc: 0.059  time: 0.4275  data_time: 0.0044  lr: 0.000010  max_mem: 3786M
[32m[03/14 20:13:40 d2.utils.events]: [0m eta: 0:35:27  iter: 59  total_loss: 2.212  loss_cls: 1.270  loss_box_reg: 0.807  loss_rpn_cls: 0.050  loss_rpn_loc: 0.051  time: 0.4284  data_time: 0.0051  lr: 0.000015  max_mem: 3786M
[32m[03/14 20:13:48 d2.utils.events]: [0m eta: 0:35:18  iter: 79  total_loss: 2.066  loss_cls: 1.117  loss_box_reg: 0.809  loss_rpn_cls: 0.049  loss_rpn_loc: 0.059  time: 0.4270  data_time: 0.0049  lr: 0.000020  max_mem: 3786M
[32m[03/14 20:13:57 d2.utils.events]: [0m eta: 0:35:21  iter: 99  total_loss: 1.881  loss_cls: 0.933  loss_box_reg: 0.815  loss_rpn_cls: 0.048  loss_rpn_loc: 0.044  time: 0.4283  data_time: 0.0046  lr: 0.000025  max_mem: 3786M
[32m[03/14 20:14:05 d2.utils.events]: [0m eta: 0:35:01  iter: 119  total_loss: 1.730  loss_cls: 0.803  loss_box_reg: 0.818  loss_rpn_cls: 0.044  loss_rpn_loc: 0.060  time: 0.4245  data_time: 0.0039  lr: 0.000030  max_mem: 3786M
[32m[03/14 20:14:14 d2.utils.events]: [0m eta: 0:35:00  iter: 139  total_loss: 1.602  loss_cls: 0.666  loss_box_reg: 0.802  loss_rpn_cls: 0.049  loss_rpn_loc: 0.051  time: 0.4258  data_time: 0.0052  lr: 0.000035  max_mem: 3786M
[32m[03/14 20:14:22 d2.utils.events]: [0m eta: 0:34:44  iter: 159  total_loss: 1.470  loss_cls: 0.575  loss_box_reg: 0.796  loss_rpn_cls: 0.053  loss_rpn_loc: 0.062  time: 0.4250  data_time: 0.0041  lr: 0.000040  max_mem: 3786M
[32m[03/14 20:14:31 d2.utils.events]: [0m eta: 0:34:35  iter: 179  total_loss: 1.407  loss_cls: 0.502  loss_box_reg: 0.808  loss_rpn_cls: 0.049  loss_rpn_loc: 0.061  time: 0.4251  data_time: 0.0048  lr: 0.000045  max_mem: 3786M
[32m[03/14 20:14:39 d2.utils.events]: [0m eta: 0:34:20  iter: 199  total_loss: 1.346  loss_cls: 0.440  loss_box_reg: 0.765  loss_rpn_cls: 0.036  loss_rpn_loc: 0.059  time: 0.4230  data_time: 0.0045  lr: 0.000050  max_mem: 3786M
[32m[03/14 20:14:47 d2.utils.events]: [0m eta: 0:34:16  iter: 219  total_loss: 1.339  loss_cls: 0.429  loss_box_reg: 0.799  loss_rpn_cls: 0.051  loss_rpn_loc: 0.056  time: 0.4241  data_time: 0.0046  lr: 0.000055  max_mem: 3786M
[32m[03/14 20:14:56 d2.utils.events]: [0m eta: 0:34:12  iter: 239  total_loss: 1.210  loss_cls: 0.368  loss_box_reg: 0.740  loss_rpn_cls: 0.040  loss_rpn_loc: 0.054  time: 0.4250  data_time: 0.0046  lr: 0.000060  max_mem: 3786M
[32m[03/14 20:15:04 d2.utils.events]: [0m eta: 0:34:01  iter: 259  total_loss: 1.132  loss_cls: 0.310  loss_box_reg: 0.733  loss_rpn_cls: 0.038  loss_rpn_loc: 0.043  time: 0.4245  data_time: 0.0044  lr: 0.000065  max_mem: 3786M
[32m[03/14 20:15:13 d2.utils.events]: [0m eta: 0:33:54  iter: 279  total_loss: 1.108  loss_cls: 0.294  loss_box_reg: 0.730  loss_rpn_cls: 0.037  loss_rpn_loc: 0.047  time: 0.4247  data_time: 0.0047  lr: 0.000070  max_mem: 3786M
[32m[03/14 20:15:21 d2.utils.events]: [0m eta: 0:33:45  iter: 299  total_loss: 1.107  loss_cls: 0.263  loss_box_reg: 0.683  loss_rpn_cls: 0.047  loss_rpn_loc: 0.065  time: 0.4236  data_time: 0.0044  lr: 0.000075  max_mem: 3786M
[32m[03/14 20:15:30 d2.utils.events]: [0m eta: 0:33:38  iter: 319  total_loss: 1.061  loss_cls: 0.261  loss_box_reg: 0.693  loss_rpn_cls: 0.040  loss_rpn_loc: 0.055  time: 0.4239  data_time: 0.0046  lr: 0.000080  max_mem: 3786M
[32m[03/14 20:15:38 d2.utils.events]: [0m eta: 0:33:31  iter: 339  total_loss: 0.945  loss_cls: 0.231  loss_box_reg: 0.640  loss_rpn_cls: 0.026  loss_rpn_loc: 0.048  time: 0.4237  data_time: 0.0049  lr: 0.000085  max_mem: 3786M
[32m[03/14 20:15:47 d2.utils.events]: [0m eta: 0:33:28  iter: 359  total_loss: 0.957  loss_cls: 0.241  loss_box_reg: 0.616  loss_rpn_cls: 0.031  loss_rpn_loc: 0.055  time: 0.4241  data_time: 0.0041  lr: 0.000090  max_mem: 3786M
[32m[03/14 20:15:56 d2.utils.events]: [0m eta: 0:33:23  iter: 379  total_loss: 0.869  loss_cls: 0.183  loss_box_reg: 0.546  loss_rpn_cls: 0.036  loss_rpn_loc: 0.063  time: 0.4253  data_time: 0.0049  lr: 0.000095  max_mem: 3786M
[32m[03/14 20:16:04 d2.utils.events]: [0m eta: 0:33:15  iter: 399  total_loss: 0.865  loss_cls: 0.229  loss_box_reg: 0.550  loss_rpn_cls: 0.035  loss_rpn_loc: 0.057  time: 0.4250  data_time: 0.0047  lr: 0.000100  max_mem: 3786M
[32m[03/14 20:16:13 d2.utils.events]: [0m eta: 0:33:06  iter: 419  total_loss: 0.773  loss_cls: 0.186  loss_box_reg: 0.461  loss_rpn_cls: 0.031  loss_rpn_loc: 0.066  time: 0.4253  data_time: 0.0040  lr: 0.000105  max_mem: 3786M
[32m[03/14 20:16:22 d2.utils.events]: [0m eta: 0:33:01  iter: 439  total_loss: 0.676  loss_cls: 0.165  loss_box_reg: 0.407  loss_rpn_cls: 0.032  loss_rpn_loc: 0.051  time: 0.4258  data_time: 0.0042  lr: 0.000110  max_mem: 3786M
[32m[03/14 20:16:30 d2.utils.events]: [0m eta: 0:32:51  iter: 459  total_loss: 0.639  loss_cls: 0.169  loss_box_reg: 0.385  loss_rpn_cls: 0.027  loss_rpn_loc: 0.050  time: 0.4260  data_time: 0.0045  lr: 0.000115  max_mem: 3786M
[32m[03/14 20:16:39 d2.utils.events]: [0m eta: 0:32:46  iter: 479  total_loss: 0.574  loss_cls: 0.156  loss_box_reg: 0.348  loss_rpn_cls: 0.024  loss_rpn_loc: 0.048  time: 0.4263  data_time: 0.0041  lr: 0.000120  max_mem: 3786M
[32m[03/14 20:16:47 d2.utils.events]: [0m eta: 0:32:37  iter: 499  total_loss: 0.637  loss_cls: 0.187  loss_box_reg: 0.353  loss_rpn_cls: 0.029  loss_rpn_loc: 0.051  time: 0.4263  data_time: 0.0041  lr: 0.000125  max_mem: 3786M
[32m[03/14 20:16:56 d2.utils.events]: [0m eta: 0:32:29  iter: 519  total_loss: 0.602  loss_cls: 0.165  loss_box_reg: 0.348  loss_rpn_cls: 0.030  loss_rpn_loc: 0.058  time: 0.4262  data_time: 0.0045  lr: 0.000130  max_mem: 3786M
[32m[03/14 20:17:04 d2.utils.events]: [0m eta: 0:32:20  iter: 539  total_loss: 0.646  loss_cls: 0.159  loss_box_reg: 0.351  loss_rpn_cls: 0.032  loss_rpn_loc: 0.051  time: 0.4260  data_time: 0.0045  lr: 0.000135  max_mem: 3786M
[32m[03/14 20:17:13 d2.utils.events]: [0m eta: 0:32:11  iter: 559  total_loss: 0.648  loss_cls: 0.179  loss_box_reg: 0.356  loss_rpn_cls: 0.028  loss_rpn_loc: 0.060  time: 0.4262  data_time: 0.0041  lr: 0.000140  max_mem: 3786M
[32m[03/14 20:17:21 d2.utils.events]: [0m eta: 0:32:02  iter: 579  total_loss: 0.626  loss_cls: 0.168  loss_box_reg: 0.342  loss_rpn_cls: 0.029  loss_rpn_loc: 0.053  time: 0.4262  data_time: 0.0044  lr: 0.000145  max_mem: 3786M
[32m[03/14 20:17:30 d2.utils.events]: [0m eta: 0:31:54  iter: 599  total_loss: 0.588  loss_cls: 0.156  loss_box_reg: 0.313  loss_rpn_cls: 0.030  loss_rpn_loc: 0.047  time: 0.4263  data_time: 0.0046  lr: 0.000150  max_mem: 3786M
[32m[03/14 20:17:39 d2.utils.events]: [0m eta: 0:31:48  iter: 619  total_loss: 0.529  loss_cls: 0.141  loss_box_reg: 0.312  loss_rpn_cls: 0.029  loss_rpn_loc: 0.053  time: 0.4271  data_time: 0.0042  lr: 0.000155  max_mem: 3786M
[32m[03/14 20:17:48 d2.utils.events]: [0m eta: 0:31:40  iter: 639  total_loss: 0.606  loss_cls: 0.160  loss_box_reg: 0.344  loss_rpn_cls: 0.030  loss_rpn_loc: 0.056  time: 0.4273  data_time: 0.0044  lr: 0.000160  max_mem: 3786M
[32m[03/14 20:17:56 d2.utils.events]: [0m eta: 0:31:31  iter: 659  total_loss: 0.580  loss_cls: 0.163  loss_box_reg: 0.314  loss_rpn_cls: 0.029  loss_rpn_loc: 0.057  time: 0.4272  data_time: 0.0040  lr: 0.000165  max_mem: 3786M
[32m[03/14 20:18:05 d2.utils.events]: [0m eta: 0:31:22  iter: 679  total_loss: 0.553  loss_cls: 0.159  loss_box_reg: 0.320  loss_rpn_cls: 0.028  loss_rpn_loc: 0.056  time: 0.4270  data_time: 0.0042  lr: 0.000170  max_mem: 3786M
[32m[03/14 20:18:14 d2.utils.events]: [0m eta: 0:31:14  iter: 699  total_loss: 0.620  loss_cls: 0.168  loss_box_reg: 0.334  loss_rpn_cls: 0.032  loss_rpn_loc: 0.066  time: 0.4276  data_time: 0.0044  lr: 0.000175  max_mem: 3786M
[32m[03/14 20:18:22 d2.utils.events]: [0m eta: 0:31:06  iter: 719  total_loss: 0.531  loss_cls: 0.142  loss_box_reg: 0.295  loss_rpn_cls: 0.027  loss_rpn_loc: 0.042  time: 0.4275  data_time: 0.0040  lr: 0.000180  max_mem: 3786M
[32m[03/14 20:18:31 d2.utils.events]: [0m eta: 0:30:57  iter: 739  total_loss: 0.537  loss_cls: 0.160  loss_box_reg: 0.305  loss_rpn_cls: 0.025  loss_rpn_loc: 0.049  time: 0.4275  data_time: 0.0043  lr: 0.000185  max_mem: 3786M
[32m[03/14 20:18:40 d2.utils.events]: [0m eta: 0:30:49  iter: 759  total_loss: 0.588  loss_cls: 0.151  loss_box_reg: 0.322  loss_rpn_cls: 0.022  loss_rpn_loc: 0.054  time: 0.4278  data_time: 0.0046  lr: 0.000190  max_mem: 3786M
[32m[03/14 20:18:48 d2.utils.events]: [0m eta: 0:30:39  iter: 779  total_loss: 0.519  loss_cls: 0.145  loss_box_reg: 0.308  loss_rpn_cls: 0.025  loss_rpn_loc: 0.047  time: 0.4277  data_time: 0.0047  lr: 0.000195  max_mem: 3786M
[32m[03/14 20:18:57 d2.utils.events]: [0m eta: 0:30:30  iter: 799  total_loss: 0.491  loss_cls: 0.168  loss_box_reg: 0.292  loss_rpn_cls: 0.016  loss_rpn_loc: 0.045  time: 0.4279  data_time: 0.0046  lr: 0.000200  max_mem: 3786M
[32m[03/14 20:19:05 d2.utils.events]: [0m eta: 0:30:22  iter: 819  total_loss: 0.511  loss_cls: 0.145  loss_box_reg: 0.279  loss_rpn_cls: 0.019  loss_rpn_loc: 0.050  time: 0.4280  data_time: 0.0040  lr: 0.000205  max_mem: 3786M
[32m[03/14 20:19:14 d2.utils.events]: [0m eta: 0:30:13  iter: 839  total_loss: 0.528  loss_cls: 0.152  loss_box_reg: 0.307  loss_rpn_cls: 0.015  loss_rpn_loc: 0.049  time: 0.4278  data_time: 0.0041  lr: 0.000210  max_mem: 3786M
[32m[03/14 20:19:22 d2.utils.events]: [0m eta: 0:30:04  iter: 859  total_loss: 0.529  loss_cls: 0.145  loss_box_reg: 0.296  loss_rpn_cls: 0.012  loss_rpn_loc: 0.050  time: 0.4279  data_time: 0.0043  lr: 0.000215  max_mem: 3786M
[32m[03/14 20:19:31 d2.utils.events]: [0m eta: 0:29:55  iter: 879  total_loss: 0.518  loss_cls: 0.154  loss_box_reg: 0.303  loss_rpn_cls: 0.017  loss_rpn_loc: 0.045  time: 0.4279  data_time: 0.0039  lr: 0.000220  max_mem: 3786M
[32m[03/14 20:19:40 d2.utils.events]: [0m eta: 0:29:48  iter: 899  total_loss: 0.527  loss_cls: 0.137  loss_box_reg: 0.296  loss_rpn_cls: 0.022  loss_rpn_loc: 0.054  time: 0.4280  data_time: 0.0044  lr: 0.000225  max_mem: 3786M
[32m[03/14 20:19:48 d2.utils.events]: [0m eta: 0:29:39  iter: 919  total_loss: 0.551  loss_cls: 0.163  loss_box_reg: 0.321  loss_rpn_cls: 0.020  loss_rpn_loc: 0.055  time: 0.4280  data_time: 0.0040  lr: 0.000230  max_mem: 3786M
[32m[03/14 20:19:57 d2.utils.events]: [0m eta: 0:29:30  iter: 939  total_loss: 0.511  loss_cls: 0.140  loss_box_reg: 0.296  loss_rpn_cls: 0.018  loss_rpn_loc: 0.048  time: 0.4278  data_time: 0.0042  lr: 0.000235  max_mem: 3786M
[32m[03/14 20:20:05 d2.utils.events]: [0m eta: 0:29:21  iter: 959  total_loss: 0.506  loss_cls: 0.155  loss_box_reg: 0.296  loss_rpn_cls: 0.014  loss_rpn_loc: 0.050  time: 0.4278  data_time: 0.0046  lr: 0.000240  max_mem: 3786M
[32m[03/14 20:20:14 d2.utils.events]: [0m eta: 0:29:12  iter: 979  total_loss: 0.486  loss_cls: 0.136  loss_box_reg: 0.290  loss_rpn_cls: 0.018  loss_rpn_loc: 0.048  time: 0.4276  data_time: 0.0043  lr: 0.000245  max_mem: 3786M
[32m[03/14 20:20:22 d2.utils.events]: [0m eta: 0:29:03  iter: 999  total_loss: 0.501  loss_cls: 0.145  loss_box_reg: 0.289  loss_rpn_cls: 0.019  loss_rpn_loc: 0.052  time: 0.4279  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:20:31 d2.utils.events]: [0m eta: 0:28:55  iter: 1019  total_loss: 0.467  loss_cls: 0.144  loss_box_reg: 0.269  loss_rpn_cls: 0.012  loss_rpn_loc: 0.045  time: 0.4281  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:20:40 d2.utils.events]: [0m eta: 0:28:50  iter: 1039  total_loss: 0.554  loss_cls: 0.148  loss_box_reg: 0.299  loss_rpn_cls: 0.022  loss_rpn_loc: 0.050  time: 0.4282  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:20:49 d2.utils.events]: [0m eta: 0:28:42  iter: 1059  total_loss: 0.440  loss_cls: 0.114  loss_box_reg: 0.264  loss_rpn_cls: 0.024  loss_rpn_loc: 0.045  time: 0.4283  data_time: 0.0046  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:20:57 d2.utils.events]: [0m eta: 0:28:34  iter: 1079  total_loss: 0.527  loss_cls: 0.142  loss_box_reg: 0.291  loss_rpn_cls: 0.018  loss_rpn_loc: 0.056  time: 0.4284  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:21:06 d2.utils.events]: [0m eta: 0:28:25  iter: 1099  total_loss: 0.495  loss_cls: 0.129  loss_box_reg: 0.278  loss_rpn_cls: 0.020  loss_rpn_loc: 0.049  time: 0.4283  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:21:15 d2.utils.events]: [0m eta: 0:28:17  iter: 1119  total_loss: 0.518  loss_cls: 0.128  loss_box_reg: 0.298  loss_rpn_cls: 0.031  loss_rpn_loc: 0.047  time: 0.4286  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:21:23 d2.utils.events]: [0m eta: 0:28:09  iter: 1139  total_loss: 0.537  loss_cls: 0.147  loss_box_reg: 0.306  loss_rpn_cls: 0.016  loss_rpn_loc: 0.053  time: 0.4287  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:21:32 d2.utils.events]: [0m eta: 0:28:00  iter: 1159  total_loss: 0.468  loss_cls: 0.116  loss_box_reg: 0.276  loss_rpn_cls: 0.015  loss_rpn_loc: 0.054  time: 0.4284  data_time: 0.0035  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:21:42 d2.utils.events]: [0m eta: 0:27:51  iter: 1179  total_loss: 0.480  loss_cls: 0.130  loss_box_reg: 0.282  loss_rpn_cls: 0.020  loss_rpn_loc: 0.053  time: 0.4301  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:21:51 d2.utils.events]: [0m eta: 0:27:45  iter: 1199  total_loss: 0.436  loss_cls: 0.120  loss_box_reg: 0.264  loss_rpn_cls: 0.014  loss_rpn_loc: 0.041  time: 0.4303  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:22:00 d2.utils.events]: [0m eta: 0:27:35  iter: 1219  total_loss: 0.479  loss_cls: 0.124  loss_box_reg: 0.265  loss_rpn_cls: 0.013  loss_rpn_loc: 0.050  time: 0.4304  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:22:08 d2.utils.events]: [0m eta: 0:27:26  iter: 1239  total_loss: 0.524  loss_cls: 0.119  loss_box_reg: 0.288  loss_rpn_cls: 0.017  loss_rpn_loc: 0.045  time: 0.4303  data_time: 0.0052  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:22:17 d2.utils.events]: [0m eta: 0:27:17  iter: 1259  total_loss: 0.477  loss_cls: 0.134  loss_box_reg: 0.267  loss_rpn_cls: 0.024  loss_rpn_loc: 0.056  time: 0.4302  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:22:25 d2.utils.events]: [0m eta: 0:27:08  iter: 1279  total_loss: 0.500  loss_cls: 0.128  loss_box_reg: 0.295  loss_rpn_cls: 0.016  loss_rpn_loc: 0.055  time: 0.4301  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:22:34 d2.utils.events]: [0m eta: 0:27:00  iter: 1299  total_loss: 0.534  loss_cls: 0.145  loss_box_reg: 0.301  loss_rpn_cls: 0.022  loss_rpn_loc: 0.044  time: 0.4300  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:22:43 d2.utils.events]: [0m eta: 0:26:52  iter: 1319  total_loss: 0.483  loss_cls: 0.121  loss_box_reg: 0.281  loss_rpn_cls: 0.016  loss_rpn_loc: 0.051  time: 0.4302  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:22:51 d2.utils.events]: [0m eta: 0:26:44  iter: 1339  total_loss: 0.462  loss_cls: 0.123  loss_box_reg: 0.255  loss_rpn_cls: 0.017  loss_rpn_loc: 0.047  time: 0.4302  data_time: 0.0048  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:23:00 d2.utils.events]: [0m eta: 0:26:35  iter: 1359  total_loss: 0.495  loss_cls: 0.136  loss_box_reg: 0.263  loss_rpn_cls: 0.020  loss_rpn_loc: 0.037  time: 0.4301  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:23:08 d2.utils.events]: [0m eta: 0:26:26  iter: 1379  total_loss: 0.465  loss_cls: 0.121  loss_box_reg: 0.262  loss_rpn_cls: 0.015  loss_rpn_loc: 0.051  time: 0.4300  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:23:17 d2.utils.events]: [0m eta: 0:26:18  iter: 1399  total_loss: 0.487  loss_cls: 0.130  loss_box_reg: 0.299  loss_rpn_cls: 0.024  loss_rpn_loc: 0.057  time: 0.4301  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:23:26 d2.utils.events]: [0m eta: 0:26:09  iter: 1419  total_loss: 0.452  loss_cls: 0.119  loss_box_reg: 0.254  loss_rpn_cls: 0.025  loss_rpn_loc: 0.037  time: 0.4302  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:23:34 d2.utils.events]: [0m eta: 0:26:00  iter: 1439  total_loss: 0.446  loss_cls: 0.135  loss_box_reg: 0.266  loss_rpn_cls: 0.017  loss_rpn_loc: 0.048  time: 0.4302  data_time: 0.0055  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:23:43 d2.utils.events]: [0m eta: 0:25:51  iter: 1459  total_loss: 0.487  loss_cls: 0.128  loss_box_reg: 0.275  loss_rpn_cls: 0.016  loss_rpn_loc: 0.046  time: 0.4303  data_time: 0.0046  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:23:52 d2.utils.events]: [0m eta: 0:25:42  iter: 1479  total_loss: 0.461  loss_cls: 0.112  loss_box_reg: 0.273  loss_rpn_cls: 0.012  loss_rpn_loc: 0.042  time: 0.4302  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:24:00 d2.utils.events]: [0m eta: 0:25:32  iter: 1499  total_loss: 0.511  loss_cls: 0.129  loss_box_reg: 0.273  loss_rpn_cls: 0.022  loss_rpn_loc: 0.057  time: 0.4299  data_time: 0.0041  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:24:09 d2.utils.events]: [0m eta: 0:25:24  iter: 1519  total_loss: 0.478  loss_cls: 0.127  loss_box_reg: 0.291  loss_rpn_cls: 0.019  loss_rpn_loc: 0.061  time: 0.4300  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:24:17 d2.utils.events]: [0m eta: 0:25:16  iter: 1539  total_loss: 0.445  loss_cls: 0.130  loss_box_reg: 0.258  loss_rpn_cls: 0.020  loss_rpn_loc: 0.044  time: 0.4302  data_time: 0.0047  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:24:26 d2.utils.events]: [0m eta: 0:25:08  iter: 1559  total_loss: 0.427  loss_cls: 0.118  loss_box_reg: 0.246  loss_rpn_cls: 0.011  loss_rpn_loc: 0.044  time: 0.4303  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:24:35 d2.utils.events]: [0m eta: 0:24:59  iter: 1579  total_loss: 0.468  loss_cls: 0.112  loss_box_reg: 0.271  loss_rpn_cls: 0.017  loss_rpn_loc: 0.045  time: 0.4302  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:24:43 d2.utils.events]: [0m eta: 0:24:49  iter: 1599  total_loss: 0.503  loss_cls: 0.129  loss_box_reg: 0.277  loss_rpn_cls: 0.016  loss_rpn_loc: 0.043  time: 0.4300  data_time: 0.0041  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:24:52 d2.utils.events]: [0m eta: 0:24:40  iter: 1619  total_loss: 0.459  loss_cls: 0.107  loss_box_reg: 0.274  loss_rpn_cls: 0.013  loss_rpn_loc: 0.046  time: 0.4301  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:25:00 d2.utils.events]: [0m eta: 0:24:31  iter: 1639  total_loss: 0.461  loss_cls: 0.123  loss_box_reg: 0.267  loss_rpn_cls: 0.014  loss_rpn_loc: 0.045  time: 0.4300  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:25:09 d2.utils.events]: [0m eta: 0:24:22  iter: 1659  total_loss: 0.436  loss_cls: 0.114  loss_box_reg: 0.249  loss_rpn_cls: 0.015  loss_rpn_loc: 0.045  time: 0.4301  data_time: 0.0040  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:25:18 d2.utils.events]: [0m eta: 0:24:14  iter: 1679  total_loss: 0.468  loss_cls: 0.112  loss_box_reg: 0.286  loss_rpn_cls: 0.015  loss_rpn_loc: 0.049  time: 0.4301  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:25:26 d2.utils.events]: [0m eta: 0:24:04  iter: 1699  total_loss: 0.454  loss_cls: 0.117  loss_box_reg: 0.257  loss_rpn_cls: 0.015  loss_rpn_loc: 0.048  time: 0.4301  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:25:35 d2.utils.events]: [0m eta: 0:23:56  iter: 1719  total_loss: 0.456  loss_cls: 0.099  loss_box_reg: 0.263  loss_rpn_cls: 0.020  loss_rpn_loc: 0.050  time: 0.4301  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:25:44 d2.utils.events]: [0m eta: 0:23:47  iter: 1739  total_loss: 0.419  loss_cls: 0.114  loss_box_reg: 0.249  loss_rpn_cls: 0.015  loss_rpn_loc: 0.039  time: 0.4302  data_time: 0.0040  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:25:52 d2.utils.events]: [0m eta: 0:23:38  iter: 1759  total_loss: 0.460  loss_cls: 0.115  loss_box_reg: 0.271  loss_rpn_cls: 0.016  loss_rpn_loc: 0.049  time: 0.4302  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:26:01 d2.utils.events]: [0m eta: 0:23:29  iter: 1779  total_loss: 0.460  loss_cls: 0.119  loss_box_reg: 0.266  loss_rpn_cls: 0.017  loss_rpn_loc: 0.043  time: 0.4301  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:26:09 d2.utils.events]: [0m eta: 0:23:21  iter: 1799  total_loss: 0.483  loss_cls: 0.123  loss_box_reg: 0.289  loss_rpn_cls: 0.015  loss_rpn_loc: 0.047  time: 0.4301  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:26:18 d2.utils.events]: [0m eta: 0:23:12  iter: 1819  total_loss: 0.451  loss_cls: 0.111  loss_box_reg: 0.256  loss_rpn_cls: 0.018  loss_rpn_loc: 0.050  time: 0.4303  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:26:27 d2.utils.events]: [0m eta: 0:23:04  iter: 1839  total_loss: 0.454  loss_cls: 0.121  loss_box_reg: 0.266  loss_rpn_cls: 0.016  loss_rpn_loc: 0.049  time: 0.4301  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:26:35 d2.utils.events]: [0m eta: 0:22:55  iter: 1859  total_loss: 0.461  loss_cls: 0.125  loss_box_reg: 0.261  loss_rpn_cls: 0.018  loss_rpn_loc: 0.040  time: 0.4301  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:26:44 d2.utils.events]: [0m eta: 0:22:47  iter: 1879  total_loss: 0.446  loss_cls: 0.115  loss_box_reg: 0.240  loss_rpn_cls: 0.016  loss_rpn_loc: 0.046  time: 0.4302  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:26:53 d2.utils.events]: [0m eta: 0:22:38  iter: 1899  total_loss: 0.430  loss_cls: 0.110  loss_box_reg: 0.268  loss_rpn_cls: 0.011  loss_rpn_loc: 0.046  time: 0.4303  data_time: 0.0040  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:27:01 d2.utils.events]: [0m eta: 0:22:29  iter: 1919  total_loss: 0.404  loss_cls: 0.103  loss_box_reg: 0.238  loss_rpn_cls: 0.012  loss_rpn_loc: 0.040  time: 0.4304  data_time: 0.0048  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:27:10 d2.utils.events]: [0m eta: 0:22:20  iter: 1939  total_loss: 0.446  loss_cls: 0.118  loss_box_reg: 0.228  loss_rpn_cls: 0.012  loss_rpn_loc: 0.043  time: 0.4303  data_time: 0.0048  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:27:19 d2.utils.events]: [0m eta: 0:22:12  iter: 1959  total_loss: 0.484  loss_cls: 0.099  loss_box_reg: 0.277  loss_rpn_cls: 0.019  loss_rpn_loc: 0.047  time: 0.4304  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:27:27 d2.utils.events]: [0m eta: 0:22:03  iter: 1979  total_loss: 0.449  loss_cls: 0.113  loss_box_reg: 0.262  loss_rpn_cls: 0.014  loss_rpn_loc: 0.044  time: 0.4303  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:27:36 d2.utils.events]: [0m eta: 0:21:54  iter: 1999  total_loss: 0.434  loss_cls: 0.111  loss_box_reg: 0.262  loss_rpn_cls: 0.015  loss_rpn_loc: 0.053  time: 0.4302  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:27:45 d2.utils.events]: [0m eta: 0:21:44  iter: 2019  total_loss: 0.449  loss_cls: 0.118  loss_box_reg: 0.259  loss_rpn_cls: 0.018  loss_rpn_loc: 0.052  time: 0.4304  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:27:53 d2.utils.events]: [0m eta: 0:21:35  iter: 2039  total_loss: 0.472  loss_cls: 0.132  loss_box_reg: 0.272  loss_rpn_cls: 0.015  loss_rpn_loc: 0.049  time: 0.4303  data_time: 0.0047  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:28:01 d2.utils.events]: [0m eta: 0:21:26  iter: 2059  total_loss: 0.426  loss_cls: 0.127  loss_box_reg: 0.251  loss_rpn_cls: 0.016  loss_rpn_loc: 0.038  time: 0.4302  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:28:10 d2.utils.events]: [0m eta: 0:21:17  iter: 2079  total_loss: 0.453  loss_cls: 0.110  loss_box_reg: 0.264  loss_rpn_cls: 0.017  loss_rpn_loc: 0.044  time: 0.4302  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:28:19 d2.utils.events]: [0m eta: 0:21:08  iter: 2099  total_loss: 0.434  loss_cls: 0.119  loss_box_reg: 0.252  loss_rpn_cls: 0.012  loss_rpn_loc: 0.045  time: 0.4303  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:28:28 d2.utils.events]: [0m eta: 0:21:00  iter: 2119  total_loss: 0.406  loss_cls: 0.108  loss_box_reg: 0.243  loss_rpn_cls: 0.014  loss_rpn_loc: 0.036  time: 0.4305  data_time: 0.0046  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:28:37 d2.utils.events]: [0m eta: 0:20:51  iter: 2139  total_loss: 0.392  loss_cls: 0.102  loss_box_reg: 0.246  loss_rpn_cls: 0.013  loss_rpn_loc: 0.037  time: 0.4305  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:28:45 d2.utils.events]: [0m eta: 0:20:43  iter: 2159  total_loss: 0.510  loss_cls: 0.138  loss_box_reg: 0.291  loss_rpn_cls: 0.014  loss_rpn_loc: 0.047  time: 0.4306  data_time: 0.0040  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:28:54 d2.utils.events]: [0m eta: 0:20:35  iter: 2179  total_loss: 0.422  loss_cls: 0.119  loss_box_reg: 0.253  loss_rpn_cls: 0.014  loss_rpn_loc: 0.035  time: 0.4307  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:29:03 d2.utils.events]: [0m eta: 0:20:26  iter: 2199  total_loss: 0.440  loss_cls: 0.118  loss_box_reg: 0.256  loss_rpn_cls: 0.018  loss_rpn_loc: 0.050  time: 0.4308  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:29:12 d2.utils.events]: [0m eta: 0:20:17  iter: 2219  total_loss: 0.454  loss_cls: 0.117  loss_box_reg: 0.246  loss_rpn_cls: 0.010  loss_rpn_loc: 0.041  time: 0.4308  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:29:20 d2.utils.events]: [0m eta: 0:20:09  iter: 2239  total_loss: 0.437  loss_cls: 0.107  loss_box_reg: 0.268  loss_rpn_cls: 0.012  loss_rpn_loc: 0.041  time: 0.4308  data_time: 0.0040  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:29:29 d2.utils.events]: [0m eta: 0:20:00  iter: 2259  total_loss: 0.419  loss_cls: 0.095  loss_box_reg: 0.257  loss_rpn_cls: 0.012  loss_rpn_loc: 0.044  time: 0.4309  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:29:38 d2.utils.events]: [0m eta: 0:19:51  iter: 2279  total_loss: 0.417  loss_cls: 0.104  loss_box_reg: 0.241  loss_rpn_cls: 0.013  loss_rpn_loc: 0.048  time: 0.4309  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:29:46 d2.utils.events]: [0m eta: 0:19:42  iter: 2299  total_loss: 0.517  loss_cls: 0.135  loss_box_reg: 0.295  loss_rpn_cls: 0.017  loss_rpn_loc: 0.048  time: 0.4309  data_time: 0.0040  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:29:55 d2.utils.events]: [0m eta: 0:19:33  iter: 2319  total_loss: 0.438  loss_cls: 0.102  loss_box_reg: 0.247  loss_rpn_cls: 0.017  loss_rpn_loc: 0.052  time: 0.4309  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:30:04 d2.utils.events]: [0m eta: 0:19:25  iter: 2339  total_loss: 0.377  loss_cls: 0.104  loss_box_reg: 0.214  loss_rpn_cls: 0.012  loss_rpn_loc: 0.048  time: 0.4310  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:30:13 d2.utils.events]: [0m eta: 0:19:17  iter: 2359  total_loss: 0.437  loss_cls: 0.119  loss_box_reg: 0.272  loss_rpn_cls: 0.013  loss_rpn_loc: 0.042  time: 0.4312  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:30:22 d2.utils.events]: [0m eta: 0:19:08  iter: 2379  total_loss: 0.431  loss_cls: 0.118  loss_box_reg: 0.245  loss_rpn_cls: 0.012  loss_rpn_loc: 0.045  time: 0.4311  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:30:30 d2.utils.events]: [0m eta: 0:18:59  iter: 2399  total_loss: 0.392  loss_cls: 0.114  loss_box_reg: 0.228  loss_rpn_cls: 0.013  loss_rpn_loc: 0.041  time: 0.4312  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:30:39 d2.utils.events]: [0m eta: 0:18:50  iter: 2419  total_loss: 0.434  loss_cls: 0.118  loss_box_reg: 0.246  loss_rpn_cls: 0.012  loss_rpn_loc: 0.043  time: 0.4312  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:30:48 d2.utils.events]: [0m eta: 0:18:41  iter: 2439  total_loss: 0.479  loss_cls: 0.132  loss_box_reg: 0.271  loss_rpn_cls: 0.012  loss_rpn_loc: 0.052  time: 0.4312  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:30:56 d2.utils.events]: [0m eta: 0:18:32  iter: 2459  total_loss: 0.416  loss_cls: 0.104  loss_box_reg: 0.250  loss_rpn_cls: 0.013  loss_rpn_loc: 0.037  time: 0.4311  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:31:04 d2.utils.events]: [0m eta: 0:18:23  iter: 2479  total_loss: 0.443  loss_cls: 0.113  loss_box_reg: 0.262  loss_rpn_cls: 0.007  loss_rpn_loc: 0.037  time: 0.4310  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:31:13 d2.utils.events]: [0m eta: 0:18:15  iter: 2499  total_loss: 0.401  loss_cls: 0.114  loss_box_reg: 0.234  loss_rpn_cls: 0.012  loss_rpn_loc: 0.042  time: 0.4311  data_time: 0.0041  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:31:22 d2.utils.events]: [0m eta: 0:18:07  iter: 2519  total_loss: 0.361  loss_cls: 0.085  loss_box_reg: 0.223  loss_rpn_cls: 0.010  loss_rpn_loc: 0.046  time: 0.4310  data_time: 0.0040  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:31:30 d2.utils.events]: [0m eta: 0:17:58  iter: 2539  total_loss: 0.402  loss_cls: 0.095  loss_box_reg: 0.254  loss_rpn_cls: 0.010  loss_rpn_loc: 0.041  time: 0.4311  data_time: 0.0040  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:31:39 d2.utils.events]: [0m eta: 0:17:49  iter: 2559  total_loss: 0.421  loss_cls: 0.105  loss_box_reg: 0.257  loss_rpn_cls: 0.017  loss_rpn_loc: 0.054  time: 0.4312  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:31:48 d2.utils.events]: [0m eta: 0:17:40  iter: 2579  total_loss: 0.430  loss_cls: 0.110  loss_box_reg: 0.264  loss_rpn_cls: 0.016  loss_rpn_loc: 0.039  time: 0.4310  data_time: 0.0039  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:31:56 d2.utils.events]: [0m eta: 0:17:31  iter: 2599  total_loss: 0.425  loss_cls: 0.109  loss_box_reg: 0.252  loss_rpn_cls: 0.018  loss_rpn_loc: 0.038  time: 0.4309  data_time: 0.0051  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:32:04 d2.utils.events]: [0m eta: 0:17:22  iter: 2619  total_loss: 0.420  loss_cls: 0.103  loss_box_reg: 0.244  loss_rpn_cls: 0.014  loss_rpn_loc: 0.042  time: 0.4307  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:32:13 d2.utils.events]: [0m eta: 0:17:13  iter: 2639  total_loss: 0.427  loss_cls: 0.105  loss_box_reg: 0.252  loss_rpn_cls: 0.012  loss_rpn_loc: 0.041  time: 0.4307  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:32:21 d2.utils.events]: [0m eta: 0:17:04  iter: 2659  total_loss: 0.453  loss_cls: 0.114  loss_box_reg: 0.231  loss_rpn_cls: 0.023  loss_rpn_loc: 0.046  time: 0.4307  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:32:30 d2.utils.events]: [0m eta: 0:16:55  iter: 2679  total_loss: 0.473  loss_cls: 0.115  loss_box_reg: 0.283  loss_rpn_cls: 0.012  loss_rpn_loc: 0.045  time: 0.4307  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:32:38 d2.utils.events]: [0m eta: 0:16:45  iter: 2699  total_loss: 0.394  loss_cls: 0.089  loss_box_reg: 0.249  loss_rpn_cls: 0.014  loss_rpn_loc: 0.048  time: 0.4305  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:32:47 d2.utils.events]: [0m eta: 0:16:38  iter: 2719  total_loss: 0.429  loss_cls: 0.111  loss_box_reg: 0.263  loss_rpn_cls: 0.009  loss_rpn_loc: 0.041  time: 0.4306  data_time: 0.0047  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:32:55 d2.utils.events]: [0m eta: 0:16:28  iter: 2739  total_loss: 0.365  loss_cls: 0.096  loss_box_reg: 0.225  loss_rpn_cls: 0.012  loss_rpn_loc: 0.042  time: 0.4306  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:33:04 d2.utils.events]: [0m eta: 0:16:19  iter: 2759  total_loss: 0.450  loss_cls: 0.111  loss_box_reg: 0.251  loss_rpn_cls: 0.014  loss_rpn_loc: 0.046  time: 0.4305  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:33:13 d2.utils.events]: [0m eta: 0:16:12  iter: 2779  total_loss: 0.460  loss_cls: 0.106  loss_box_reg: 0.247  loss_rpn_cls: 0.012  loss_rpn_loc: 0.044  time: 0.4306  data_time: 0.0052  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:33:22 d2.utils.events]: [0m eta: 0:16:03  iter: 2799  total_loss: 0.410  loss_cls: 0.116  loss_box_reg: 0.231  loss_rpn_cls: 0.010  loss_rpn_loc: 0.035  time: 0.4307  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:33:31 d2.utils.events]: [0m eta: 0:15:55  iter: 2819  total_loss: 0.421  loss_cls: 0.100  loss_box_reg: 0.247  loss_rpn_cls: 0.014  loss_rpn_loc: 0.044  time: 0.4308  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:33:39 d2.utils.events]: [0m eta: 0:15:46  iter: 2839  total_loss: 0.464  loss_cls: 0.111  loss_box_reg: 0.267  loss_rpn_cls: 0.014  loss_rpn_loc: 0.046  time: 0.4308  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:33:48 d2.utils.events]: [0m eta: 0:15:37  iter: 2859  total_loss: 0.416  loss_cls: 0.100  loss_box_reg: 0.251  loss_rpn_cls: 0.007  loss_rpn_loc: 0.042  time: 0.4309  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:33:57 d2.utils.events]: [0m eta: 0:15:28  iter: 2879  total_loss: 0.424  loss_cls: 0.093  loss_box_reg: 0.254  loss_rpn_cls: 0.010  loss_rpn_loc: 0.043  time: 0.4309  data_time: 0.0053  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:34:05 d2.utils.events]: [0m eta: 0:15:20  iter: 2899  total_loss: 0.429  loss_cls: 0.102  loss_box_reg: 0.245  loss_rpn_cls: 0.012  loss_rpn_loc: 0.044  time: 0.4309  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:34:14 d2.utils.events]: [0m eta: 0:15:10  iter: 2919  total_loss: 0.411  loss_cls: 0.094  loss_box_reg: 0.229  loss_rpn_cls: 0.014  loss_rpn_loc: 0.051  time: 0.4307  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:34:22 d2.utils.events]: [0m eta: 0:15:02  iter: 2939  total_loss: 0.410  loss_cls: 0.091  loss_box_reg: 0.242  loss_rpn_cls: 0.017  loss_rpn_loc: 0.055  time: 0.4307  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:34:31 d2.utils.events]: [0m eta: 0:14:53  iter: 2959  total_loss: 0.364  loss_cls: 0.087  loss_box_reg: 0.216  loss_rpn_cls: 0.012  loss_rpn_loc: 0.035  time: 0.4307  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:34:39 d2.utils.events]: [0m eta: 0:14:44  iter: 2979  total_loss: 0.481  loss_cls: 0.126  loss_box_reg: 0.272  loss_rpn_cls: 0.014  loss_rpn_loc: 0.057  time: 0.4306  data_time: 0.0047  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:34:48 d2.utils.events]: [0m eta: 0:14:36  iter: 2999  total_loss: 0.426  loss_cls: 0.100  loss_box_reg: 0.260  loss_rpn_cls: 0.018  loss_rpn_loc: 0.051  time: 0.4306  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:34:56 d2.utils.events]: [0m eta: 0:14:27  iter: 3019  total_loss: 0.397  loss_cls: 0.100  loss_box_reg: 0.238  loss_rpn_cls: 0.014  loss_rpn_loc: 0.045  time: 0.4306  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:35:05 d2.utils.events]: [0m eta: 0:14:18  iter: 3039  total_loss: 0.392  loss_cls: 0.105  loss_box_reg: 0.234  loss_rpn_cls: 0.008  loss_rpn_loc: 0.037  time: 0.4305  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:35:13 d2.utils.events]: [0m eta: 0:14:10  iter: 3059  total_loss: 0.439  loss_cls: 0.116  loss_box_reg: 0.242  loss_rpn_cls: 0.011  loss_rpn_loc: 0.048  time: 0.4306  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:35:22 d2.utils.events]: [0m eta: 0:14:01  iter: 3079  total_loss: 0.397  loss_cls: 0.103  loss_box_reg: 0.246  loss_rpn_cls: 0.008  loss_rpn_loc: 0.035  time: 0.4305  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:35:30 d2.utils.events]: [0m eta: 0:13:52  iter: 3099  total_loss: 0.413  loss_cls: 0.100  loss_box_reg: 0.243  loss_rpn_cls: 0.010  loss_rpn_loc: 0.036  time: 0.4304  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:35:39 d2.utils.events]: [0m eta: 0:13:42  iter: 3119  total_loss: 0.368  loss_cls: 0.097  loss_box_reg: 0.214  loss_rpn_cls: 0.013  loss_rpn_loc: 0.033  time: 0.4304  data_time: 0.0047  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:35:48 d2.utils.events]: [0m eta: 0:13:34  iter: 3139  total_loss: 0.362  loss_cls: 0.101  loss_box_reg: 0.227  loss_rpn_cls: 0.008  loss_rpn_loc: 0.034  time: 0.4305  data_time: 0.0047  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:35:56 d2.utils.events]: [0m eta: 0:13:24  iter: 3159  total_loss: 0.378  loss_cls: 0.088  loss_box_reg: 0.239  loss_rpn_cls: 0.008  loss_rpn_loc: 0.041  time: 0.4304  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:36:05 d2.utils.events]: [0m eta: 0:13:15  iter: 3179  total_loss: 0.414  loss_cls: 0.102  loss_box_reg: 0.251  loss_rpn_cls: 0.011  loss_rpn_loc: 0.040  time: 0.4304  data_time: 0.0046  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:36:13 d2.utils.events]: [0m eta: 0:13:06  iter: 3199  total_loss: 0.464  loss_cls: 0.101  loss_box_reg: 0.250  loss_rpn_cls: 0.012  loss_rpn_loc: 0.050  time: 0.4303  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:36:22 d2.utils.events]: [0m eta: 0:12:58  iter: 3219  total_loss: 0.389  loss_cls: 0.104  loss_box_reg: 0.231  loss_rpn_cls: 0.012  loss_rpn_loc: 0.036  time: 0.4303  data_time: 0.0046  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:36:30 d2.utils.events]: [0m eta: 0:12:49  iter: 3239  total_loss: 0.428  loss_cls: 0.121  loss_box_reg: 0.245  loss_rpn_cls: 0.007  loss_rpn_loc: 0.042  time: 0.4304  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:36:39 d2.utils.events]: [0m eta: 0:12:40  iter: 3259  total_loss: 0.400  loss_cls: 0.098  loss_box_reg: 0.230  loss_rpn_cls: 0.007  loss_rpn_loc: 0.041  time: 0.4303  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:36:48 d2.utils.events]: [0m eta: 0:12:32  iter: 3279  total_loss: 0.432  loss_cls: 0.109  loss_box_reg: 0.252  loss_rpn_cls: 0.012  loss_rpn_loc: 0.045  time: 0.4305  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:36:56 d2.utils.events]: [0m eta: 0:12:23  iter: 3299  total_loss: 0.387  loss_cls: 0.103  loss_box_reg: 0.234  loss_rpn_cls: 0.009  loss_rpn_loc: 0.037  time: 0.4304  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:37:05 d2.utils.events]: [0m eta: 0:12:15  iter: 3319  total_loss: 0.381  loss_cls: 0.091  loss_box_reg: 0.240  loss_rpn_cls: 0.011  loss_rpn_loc: 0.036  time: 0.4305  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:37:14 d2.utils.events]: [0m eta: 0:12:05  iter: 3339  total_loss: 0.416  loss_cls: 0.113  loss_box_reg: 0.240  loss_rpn_cls: 0.009  loss_rpn_loc: 0.042  time: 0.4305  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:37:22 d2.utils.events]: [0m eta: 0:11:56  iter: 3359  total_loss: 0.420  loss_cls: 0.123  loss_box_reg: 0.254  loss_rpn_cls: 0.015  loss_rpn_loc: 0.041  time: 0.4304  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:37:31 d2.utils.events]: [0m eta: 0:11:48  iter: 3379  total_loss: 0.413  loss_cls: 0.113  loss_box_reg: 0.238  loss_rpn_cls: 0.010  loss_rpn_loc: 0.038  time: 0.4305  data_time: 0.0047  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:37:40 d2.utils.events]: [0m eta: 0:11:39  iter: 3399  total_loss: 0.405  loss_cls: 0.105  loss_box_reg: 0.257  loss_rpn_cls: 0.006  loss_rpn_loc: 0.042  time: 0.4305  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:37:49 d2.utils.events]: [0m eta: 0:11:30  iter: 3419  total_loss: 0.403  loss_cls: 0.115  loss_box_reg: 0.254  loss_rpn_cls: 0.007  loss_rpn_loc: 0.039  time: 0.4306  data_time: 0.0041  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:37:58 d2.utils.events]: [0m eta: 0:11:22  iter: 3439  total_loss: 0.397  loss_cls: 0.100  loss_box_reg: 0.244  loss_rpn_cls: 0.010  loss_rpn_loc: 0.049  time: 0.4306  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:38:06 d2.utils.events]: [0m eta: 0:11:14  iter: 3459  total_loss: 0.429  loss_cls: 0.100  loss_box_reg: 0.244  loss_rpn_cls: 0.008  loss_rpn_loc: 0.044  time: 0.4306  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:38:15 d2.utils.events]: [0m eta: 0:11:05  iter: 3479  total_loss: 0.400  loss_cls: 0.107  loss_box_reg: 0.247  loss_rpn_cls: 0.009  loss_rpn_loc: 0.042  time: 0.4306  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:38:24 d2.utils.events]: [0m eta: 0:10:56  iter: 3499  total_loss: 0.364  loss_cls: 0.089  loss_box_reg: 0.221  loss_rpn_cls: 0.008  loss_rpn_loc: 0.040  time: 0.4307  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:38:32 d2.utils.events]: [0m eta: 0:10:48  iter: 3519  total_loss: 0.364  loss_cls: 0.094  loss_box_reg: 0.219  loss_rpn_cls: 0.007  loss_rpn_loc: 0.041  time: 0.4307  data_time: 0.0041  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:38:41 d2.utils.events]: [0m eta: 0:10:39  iter: 3539  total_loss: 0.409  loss_cls: 0.104  loss_box_reg: 0.225  loss_rpn_cls: 0.013  loss_rpn_loc: 0.043  time: 0.4307  data_time: 0.0047  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:38:49 d2.utils.events]: [0m eta: 0:10:30  iter: 3559  total_loss: 0.400  loss_cls: 0.098  loss_box_reg: 0.241  loss_rpn_cls: 0.010  loss_rpn_loc: 0.049  time: 0.4307  data_time: 0.0041  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:38:58 d2.utils.events]: [0m eta: 0:10:21  iter: 3579  total_loss: 0.417  loss_cls: 0.100  loss_box_reg: 0.217  loss_rpn_cls: 0.019  loss_rpn_loc: 0.040  time: 0.4307  data_time: 0.0041  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:39:07 d2.utils.events]: [0m eta: 0:10:13  iter: 3599  total_loss: 0.444  loss_cls: 0.123  loss_box_reg: 0.247  loss_rpn_cls: 0.014  loss_rpn_loc: 0.044  time: 0.4307  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:39:16 d2.utils.events]: [0m eta: 0:10:05  iter: 3619  total_loss: 0.347  loss_cls: 0.087  loss_box_reg: 0.226  loss_rpn_cls: 0.012  loss_rpn_loc: 0.034  time: 0.4307  data_time: 0.0047  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:39:24 d2.utils.events]: [0m eta: 0:09:56  iter: 3639  total_loss: 0.436  loss_cls: 0.112  loss_box_reg: 0.232  loss_rpn_cls: 0.013  loss_rpn_loc: 0.049  time: 0.4307  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:39:33 d2.utils.events]: [0m eta: 0:09:47  iter: 3659  total_loss: 0.457  loss_cls: 0.129  loss_box_reg: 0.255  loss_rpn_cls: 0.013  loss_rpn_loc: 0.043  time: 0.4307  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:39:41 d2.utils.events]: [0m eta: 0:09:38  iter: 3679  total_loss: 0.391  loss_cls: 0.099  loss_box_reg: 0.232  loss_rpn_cls: 0.015  loss_rpn_loc: 0.040  time: 0.4307  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:39:50 d2.utils.events]: [0m eta: 0:09:30  iter: 3699  total_loss: 0.447  loss_cls: 0.124  loss_box_reg: 0.257  loss_rpn_cls: 0.018  loss_rpn_loc: 0.047  time: 0.4307  data_time: 0.0049  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:39:58 d2.utils.events]: [0m eta: 0:09:21  iter: 3719  total_loss: 0.437  loss_cls: 0.107  loss_box_reg: 0.247  loss_rpn_cls: 0.009  loss_rpn_loc: 0.043  time: 0.4306  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:40:07 d2.utils.events]: [0m eta: 0:09:12  iter: 3739  total_loss: 0.414  loss_cls: 0.105  loss_box_reg: 0.244  loss_rpn_cls: 0.008  loss_rpn_loc: 0.051  time: 0.4307  data_time: 0.0047  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:40:16 d2.utils.events]: [0m eta: 0:09:04  iter: 3759  total_loss: 0.388  loss_cls: 0.111  loss_box_reg: 0.212  loss_rpn_cls: 0.010  loss_rpn_loc: 0.041  time: 0.4307  data_time: 0.0041  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:40:24 d2.utils.events]: [0m eta: 0:08:55  iter: 3779  total_loss: 0.413  loss_cls: 0.106  loss_box_reg: 0.245  loss_rpn_cls: 0.008  loss_rpn_loc: 0.042  time: 0.4306  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:40:33 d2.utils.events]: [0m eta: 0:08:45  iter: 3799  total_loss: 0.446  loss_cls: 0.121  loss_box_reg: 0.251  loss_rpn_cls: 0.010  loss_rpn_loc: 0.048  time: 0.4306  data_time: 0.0046  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:40:41 d2.utils.events]: [0m eta: 0:08:37  iter: 3819  total_loss: 0.470  loss_cls: 0.118  loss_box_reg: 0.263  loss_rpn_cls: 0.009  loss_rpn_loc: 0.048  time: 0.4306  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:40:50 d2.utils.events]: [0m eta: 0:08:28  iter: 3839  total_loss: 0.466  loss_cls: 0.128  loss_box_reg: 0.270  loss_rpn_cls: 0.012  loss_rpn_loc: 0.041  time: 0.4306  data_time: 0.0046  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:40:58 d2.utils.events]: [0m eta: 0:08:19  iter: 3859  total_loss: 0.388  loss_cls: 0.095  loss_box_reg: 0.218  loss_rpn_cls: 0.009  loss_rpn_loc: 0.042  time: 0.4306  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:41:07 d2.utils.events]: [0m eta: 0:08:10  iter: 3879  total_loss: 0.386  loss_cls: 0.095  loss_box_reg: 0.233  loss_rpn_cls: 0.014  loss_rpn_loc: 0.040  time: 0.4305  data_time: 0.0047  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:41:16 d2.utils.events]: [0m eta: 0:08:01  iter: 3899  total_loss: 0.453  loss_cls: 0.118  loss_box_reg: 0.259  loss_rpn_cls: 0.010  loss_rpn_loc: 0.048  time: 0.4306  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:41:25 d2.utils.events]: [0m eta: 0:07:53  iter: 3919  total_loss: 0.382  loss_cls: 0.093  loss_box_reg: 0.237  loss_rpn_cls: 0.013  loss_rpn_loc: 0.036  time: 0.4307  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:41:33 d2.utils.events]: [0m eta: 0:07:44  iter: 3939  total_loss: 0.398  loss_cls: 0.101  loss_box_reg: 0.250  loss_rpn_cls: 0.008  loss_rpn_loc: 0.041  time: 0.4306  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:41:42 d2.utils.events]: [0m eta: 0:07:36  iter: 3959  total_loss: 0.400  loss_cls: 0.100  loss_box_reg: 0.230  loss_rpn_cls: 0.009  loss_rpn_loc: 0.039  time: 0.4307  data_time: 0.0046  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:41:50 d2.utils.events]: [0m eta: 0:07:27  iter: 3979  total_loss: 0.417  loss_cls: 0.113  loss_box_reg: 0.240  loss_rpn_cls: 0.009  loss_rpn_loc: 0.043  time: 0.4306  data_time: 0.0041  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:41:59 d2.utils.events]: [0m eta: 0:07:18  iter: 3999  total_loss: 0.390  loss_cls: 0.094  loss_box_reg: 0.225  loss_rpn_cls: 0.008  loss_rpn_loc: 0.035  time: 0.4307  data_time: 0.0046  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:42:08 d2.utils.events]: [0m eta: 0:07:10  iter: 4019  total_loss: 0.413  loss_cls: 0.112  loss_box_reg: 0.234  loss_rpn_cls: 0.008  loss_rpn_loc: 0.041  time: 0.4307  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:42:17 d2.utils.events]: [0m eta: 0:07:01  iter: 4039  total_loss: 0.398  loss_cls: 0.098  loss_box_reg: 0.241  loss_rpn_cls: 0.014  loss_rpn_loc: 0.035  time: 0.4307  data_time: 0.0055  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:42:25 d2.utils.events]: [0m eta: 0:06:52  iter: 4059  total_loss: 0.422  loss_cls: 0.110  loss_box_reg: 0.250  loss_rpn_cls: 0.015  loss_rpn_loc: 0.049  time: 0.4307  data_time: 0.0047  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:42:34 d2.utils.events]: [0m eta: 0:06:44  iter: 4079  total_loss: 0.384  loss_cls: 0.093  loss_box_reg: 0.226  loss_rpn_cls: 0.010  loss_rpn_loc: 0.045  time: 0.4307  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:42:42 d2.utils.events]: [0m eta: 0:06:35  iter: 4099  total_loss: 0.367  loss_cls: 0.095  loss_box_reg: 0.224  loss_rpn_cls: 0.008  loss_rpn_loc: 0.036  time: 0.4307  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:42:51 d2.utils.events]: [0m eta: 0:06:26  iter: 4119  total_loss: 0.431  loss_cls: 0.111  loss_box_reg: 0.256  loss_rpn_cls: 0.012  loss_rpn_loc: 0.037  time: 0.4306  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:42:59 d2.utils.events]: [0m eta: 0:06:17  iter: 4139  total_loss: 0.400  loss_cls: 0.100  loss_box_reg: 0.222  loss_rpn_cls: 0.015  loss_rpn_loc: 0.032  time: 0.4306  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:43:08 d2.utils.events]: [0m eta: 0:06:09  iter: 4159  total_loss: 0.397  loss_cls: 0.102  loss_box_reg: 0.236  loss_rpn_cls: 0.009  loss_rpn_loc: 0.046  time: 0.4306  data_time: 0.0046  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:43:16 d2.utils.events]: [0m eta: 0:05:59  iter: 4179  total_loss: 0.393  loss_cls: 0.098  loss_box_reg: 0.235  loss_rpn_cls: 0.011  loss_rpn_loc: 0.044  time: 0.4305  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:43:25 d2.utils.events]: [0m eta: 0:05:51  iter: 4199  total_loss: 0.351  loss_cls: 0.102  loss_box_reg: 0.204  loss_rpn_cls: 0.009  loss_rpn_loc: 0.035  time: 0.4306  data_time: 0.0049  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:43:33 d2.utils.events]: [0m eta: 0:05:42  iter: 4219  total_loss: 0.362  loss_cls: 0.089  loss_box_reg: 0.220  loss_rpn_cls: 0.013  loss_rpn_loc: 0.032  time: 0.4305  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:43:42 d2.utils.events]: [0m eta: 0:05:33  iter: 4239  total_loss: 0.388  loss_cls: 0.112  loss_box_reg: 0.239  loss_rpn_cls: 0.012  loss_rpn_loc: 0.038  time: 0.4305  data_time: 0.0046  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:43:51 d2.utils.events]: [0m eta: 0:05:25  iter: 4259  total_loss: 0.383  loss_cls: 0.094  loss_box_reg: 0.222  loss_rpn_cls: 0.008  loss_rpn_loc: 0.033  time: 0.4306  data_time: 0.0047  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:43:59 d2.utils.events]: [0m eta: 0:05:16  iter: 4279  total_loss: 0.371  loss_cls: 0.088  loss_box_reg: 0.226  loss_rpn_cls: 0.009  loss_rpn_loc: 0.035  time: 0.4305  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:44:08 d2.utils.events]: [0m eta: 0:05:07  iter: 4299  total_loss: 0.365  loss_cls: 0.087  loss_box_reg: 0.221  loss_rpn_cls: 0.007  loss_rpn_loc: 0.041  time: 0.4305  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:44:17 d2.utils.events]: [0m eta: 0:04:58  iter: 4319  total_loss: 0.345  loss_cls: 0.082  loss_box_reg: 0.193  loss_rpn_cls: 0.009  loss_rpn_loc: 0.038  time: 0.4305  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:44:26 d2.utils.events]: [0m eta: 0:04:50  iter: 4339  total_loss: 0.423  loss_cls: 0.111  loss_box_reg: 0.250  loss_rpn_cls: 0.006  loss_rpn_loc: 0.042  time: 0.4306  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:44:34 d2.utils.events]: [0m eta: 0:04:41  iter: 4359  total_loss: 0.423  loss_cls: 0.109  loss_box_reg: 0.243  loss_rpn_cls: 0.011  loss_rpn_loc: 0.047  time: 0.4306  data_time: 0.0056  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:44:43 d2.utils.events]: [0m eta: 0:04:32  iter: 4379  total_loss: 0.396  loss_cls: 0.107  loss_box_reg: 0.241  loss_rpn_cls: 0.007  loss_rpn_loc: 0.038  time: 0.4307  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:44:52 d2.utils.events]: [0m eta: 0:04:23  iter: 4399  total_loss: 0.411  loss_cls: 0.111  loss_box_reg: 0.249  loss_rpn_cls: 0.010  loss_rpn_loc: 0.042  time: 0.4306  data_time: 0.0049  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:45:01 d2.utils.events]: [0m eta: 0:04:14  iter: 4419  total_loss: 0.383  loss_cls: 0.097  loss_box_reg: 0.216  loss_rpn_cls: 0.010  loss_rpn_loc: 0.037  time: 0.4307  data_time: 0.0046  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:45:10 d2.utils.events]: [0m eta: 0:04:06  iter: 4439  total_loss: 0.411  loss_cls: 0.107  loss_box_reg: 0.244  loss_rpn_cls: 0.010  loss_rpn_loc: 0.049  time: 0.4308  data_time: 0.0047  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:45:19 d2.utils.events]: [0m eta: 0:03:57  iter: 4459  total_loss: 0.412  loss_cls: 0.112  loss_box_reg: 0.226  loss_rpn_cls: 0.011  loss_rpn_loc: 0.054  time: 0.4309  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:45:27 d2.utils.events]: [0m eta: 0:03:48  iter: 4479  total_loss: 0.444  loss_cls: 0.123  loss_box_reg: 0.260  loss_rpn_cls: 0.010  loss_rpn_loc: 0.045  time: 0.4309  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:45:36 d2.utils.events]: [0m eta: 0:03:39  iter: 4499  total_loss: 0.319  loss_cls: 0.089  loss_box_reg: 0.195  loss_rpn_cls: 0.011  loss_rpn_loc: 0.039  time: 0.4309  data_time: 0.0050  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:45:44 d2.utils.events]: [0m eta: 0:03:30  iter: 4519  total_loss: 0.411  loss_cls: 0.110  loss_box_reg: 0.240  loss_rpn_cls: 0.008  loss_rpn_loc: 0.047  time: 0.4308  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:45:53 d2.utils.events]: [0m eta: 0:03:22  iter: 4539  total_loss: 0.368  loss_cls: 0.091  loss_box_reg: 0.230  loss_rpn_cls: 0.009  loss_rpn_loc: 0.041  time: 0.4309  data_time: 0.0049  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:46:02 d2.utils.events]: [0m eta: 0:03:13  iter: 4559  total_loss: 0.353  loss_cls: 0.095  loss_box_reg: 0.210  loss_rpn_cls: 0.008  loss_rpn_loc: 0.033  time: 0.4309  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:46:11 d2.utils.events]: [0m eta: 0:03:04  iter: 4579  total_loss: 0.412  loss_cls: 0.115  loss_box_reg: 0.233  loss_rpn_cls: 0.008  loss_rpn_loc: 0.042  time: 0.4309  data_time: 0.0046  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:46:19 d2.utils.events]: [0m eta: 0:02:55  iter: 4599  total_loss: 0.418  loss_cls: 0.109  loss_box_reg: 0.246  loss_rpn_cls: 0.008  loss_rpn_loc: 0.037  time: 0.4309  data_time: 0.0054  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:46:28 d2.utils.events]: [0m eta: 0:02:47  iter: 4619  total_loss: 0.409  loss_cls: 0.106  loss_box_reg: 0.250  loss_rpn_cls: 0.008  loss_rpn_loc: 0.039  time: 0.4309  data_time: 0.0050  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:46:36 d2.utils.events]: [0m eta: 0:02:38  iter: 4639  total_loss: 0.411  loss_cls: 0.109  loss_box_reg: 0.249  loss_rpn_cls: 0.005  loss_rpn_loc: 0.042  time: 0.4309  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:46:45 d2.utils.events]: [0m eta: 0:02:29  iter: 4659  total_loss: 0.395  loss_cls: 0.098  loss_box_reg: 0.226  loss_rpn_cls: 0.011  loss_rpn_loc: 0.046  time: 0.4309  data_time: 0.0050  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:46:54 d2.utils.events]: [0m eta: 0:02:21  iter: 4679  total_loss: 0.403  loss_cls: 0.113  loss_box_reg: 0.248  loss_rpn_cls: 0.009  loss_rpn_loc: 0.033  time: 0.4309  data_time: 0.0048  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:47:03 d2.utils.events]: [0m eta: 0:02:12  iter: 4699  total_loss: 0.405  loss_cls: 0.103  loss_box_reg: 0.226  loss_rpn_cls: 0.007  loss_rpn_loc: 0.044  time: 0.4310  data_time: 0.0046  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:47:11 d2.utils.events]: [0m eta: 0:02:03  iter: 4719  total_loss: 0.397  loss_cls: 0.103  loss_box_reg: 0.229  loss_rpn_cls: 0.009  loss_rpn_loc: 0.047  time: 0.4309  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:47:20 d2.utils.events]: [0m eta: 0:01:54  iter: 4739  total_loss: 0.413  loss_cls: 0.101  loss_box_reg: 0.249  loss_rpn_cls: 0.009  loss_rpn_loc: 0.041  time: 0.4310  data_time: 0.0042  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:47:29 d2.utils.events]: [0m eta: 0:01:46  iter: 4759  total_loss: 0.431  loss_cls: 0.118  loss_box_reg: 0.239  loss_rpn_cls: 0.008  loss_rpn_loc: 0.041  time: 0.4310  data_time: 0.0046  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:47:37 d2.utils.events]: [0m eta: 0:01:37  iter: 4779  total_loss: 0.370  loss_cls: 0.093  loss_box_reg: 0.212  loss_rpn_cls: 0.008  loss_rpn_loc: 0.040  time: 0.4310  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:47:46 d2.utils.events]: [0m eta: 0:01:28  iter: 4799  total_loss: 0.345  loss_cls: 0.098  loss_box_reg: 0.209  loss_rpn_cls: 0.008  loss_rpn_loc: 0.034  time: 0.4310  data_time: 0.0047  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:47:55 d2.utils.events]: [0m eta: 0:01:19  iter: 4819  total_loss: 0.324  loss_cls: 0.086  loss_box_reg: 0.196  loss_rpn_cls: 0.011  loss_rpn_loc: 0.039  time: 0.4310  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:48:03 d2.utils.events]: [0m eta: 0:01:10  iter: 4839  total_loss: 0.419  loss_cls: 0.114  loss_box_reg: 0.235  loss_rpn_cls: 0.012  loss_rpn_loc: 0.047  time: 0.4310  data_time: 0.0046  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:48:12 d2.utils.events]: [0m eta: 0:01:02  iter: 4859  total_loss: 0.365  loss_cls: 0.095  loss_box_reg: 0.214  loss_rpn_cls: 0.007  loss_rpn_loc: 0.045  time: 0.4310  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:48:21 d2.utils.events]: [0m eta: 0:00:53  iter: 4879  total_loss: 0.385  loss_cls: 0.097  loss_box_reg: 0.225  loss_rpn_cls: 0.011  loss_rpn_loc: 0.040  time: 0.4310  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:48:29 d2.utils.events]: [0m eta: 0:00:44  iter: 4899  total_loss: 0.382  loss_cls: 0.099  loss_box_reg: 0.228  loss_rpn_cls: 0.009  loss_rpn_loc: 0.045  time: 0.4310  data_time: 0.0044  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:48:38 d2.utils.events]: [0m eta: 0:00:35  iter: 4919  total_loss: 0.368  loss_cls: 0.085  loss_box_reg: 0.236  loss_rpn_cls: 0.012  loss_rpn_loc: 0.041  time: 0.4310  data_time: 0.0047  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:48:46 d2.utils.events]: [0m eta: 0:00:26  iter: 4939  total_loss: 0.384  loss_cls: 0.102  loss_box_reg: 0.218  loss_rpn_cls: 0.007  loss_rpn_loc: 0.042  time: 0.4310  data_time: 0.0045  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:48:55 d2.utils.events]: [0m eta: 0:00:18  iter: 4959  total_loss: 0.382  loss_cls: 0.088  loss_box_reg: 0.211  loss_rpn_cls: 0.005  loss_rpn_loc: 0.035  time: 0.4310  data_time: 0.0043  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:49:04 d2.utils.events]: [0m eta: 0:00:09  iter: 4979  total_loss: 0.348  loss_cls: 0.084  loss_box_reg: 0.211  loss_rpn_cls: 0.006  loss_rpn_loc: 0.039  time: 0.4310  data_time: 0.0046  lr: 0.000250  max_mem: 3786M
Loading sequence 0002
Loading sequence 0005
Loading sequence 0009
Loading sequence 0011
0002
0005
0009
0011
Loaded 850 images!
[32m[03/14 20:50:14 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    None    | 0            |    Car     | 0            | Pedestrian | 8006         |
|            |              |            |              |            |              |
|   total    | 8006         |            |              |            |              |[0m
[32m[03/14 20:50:14 d2.data.common]: [0mSerializing 850 elements to byte tensors and concatenating them all ...
[32m[03/14 20:50:14 d2.data.common]: [0mSerialized dataset takes 0.97 MiB
[5m[31mWARNING[0m [32m[03/14 20:50:14 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[03/14 20:50:14 d2.utils.events]: [0m eta: 0:00:00  iter: 4999  total_loss: 0.400  loss_cls: 0.114  loss_box_reg: 0.238  loss_rpn_cls: 0.011  loss_rpn_loc: 0.037  time: 0.4310  data_time: 0.0046  lr: 0.000250  max_mem: 3786M
[32m[03/14 20:50:14 d2.engine.hooks]: [0mOverall training speed: 4997 iterations in 0:35:54 (0.4311 s / it)
[32m[03/14 20:50:14 d2.engine.hooks]: [0mTotal training time: 0:36:59 (0:01:05 on hooks)
Loading sequence 0002
Loading sequence 0005
Loading sequence 0009
Loading sequence 0011
0002
0005
0009
0011
Loaded 850 images!
[5m[31mWARNING[0m [32m[03/14 20:51:25 d2.evaluation.coco_evaluation]: [0mjson_file was not found in MetaDataCatalog for 'MOTSChallenge_val'. Trying to convert it to COCO format ...
[32m[03/14 20:51:25 d2.data.datasets.coco]: [0mConverting dataset annotations in 'MOTSChallenge_val' to COCO format ...)
Loading sequence 0002
Loading sequence 0005
Loading sequence 0009
Loading sequence 0011
0002
0005
0009
0011
Loaded 850 images!
[32m[03/14 20:52:25 d2.data.datasets.coco]: [0mConverting dataset dicts into COCO format
[32m[03/14 20:52:27 d2.data.datasets.coco]: [0mConversion finished, num images: 850, num annotations: 8006
[32m[03/14 20:52:27 d2.data.datasets.coco]: [0mCaching annotations in COCO format: ./output/MOTSChallenge_val_coco_format.json
Loading sequence 0002
Loading sequence 0005
Loading sequence 0009
Loading sequence 0011
0002
0005
0009
0011
Loaded 850 images!
[32m[03/14 20:53:28 d2.data.common]: [0mSerializing 850 elements to byte tensors and concatenating them all ...
[32m[03/14 20:53:28 d2.data.common]: [0mSerialized dataset takes 0.97 MiB
[32m[03/14 20:53:28 d2.evaluation.evaluator]: [0mStart inference on 850 images
[32m[03/14 20:53:30 d2.evaluation.evaluator]: [0mInference done 11/850. 0.1282 s / img. ETA=0:01:51
[32m[03/14 20:53:35 d2.evaluation.evaluator]: [0mInference done 49/850. 0.1173 s / img. ETA=0:01:46
[32m[03/14 20:53:40 d2.evaluation.evaluator]: [0mInference done 84/850. 0.1202 s / img. ETA=0:01:45
[32m[03/14 20:53:45 d2.evaluation.evaluator]: [0mInference done 130/850. 0.1149 s / img. ETA=0:01:31
[32m[03/14 20:53:50 d2.evaluation.evaluator]: [0mInference done 176/850. 0.1115 s / img. ETA=0:01:22
[32m[03/14 20:53:55 d2.evaluation.evaluator]: [0mInference done 236/850. 0.1041 s / img. ETA=0:01:09
[32m[03/14 20:54:00 d2.evaluation.evaluator]: [0mInference done 296/850. 0.0998 s / img. ETA=0:00:59
[32m[03/14 20:54:05 d2.evaluation.evaluator]: [0mInference done 356/850. 0.0969 s / img. ETA=0:00:50
[32m[03/14 20:54:10 d2.evaluation.evaluator]: [0mInference done 416/850. 0.0949 s / img. ETA=0:00:43
[32m[03/14 20:54:15 d2.evaluation.evaluator]: [0mInference done 463/850. 0.0954 s / img. ETA=0:00:39
[32m[03/14 20:54:20 d2.evaluation.evaluator]: [0mInference done 508/850. 0.0966 s / img. ETA=0:00:34
[32m[03/14 20:54:25 d2.evaluation.evaluator]: [0mInference done 555/850. 0.0971 s / img. ETA=0:00:30
[32m[03/14 20:54:30 d2.evaluation.evaluator]: [0mInference done 601/850. 0.0976 s / img. ETA=0:00:25
[32m[03/14 20:54:36 d2.evaluation.evaluator]: [0mInference done 644/850. 0.0982 s / img. ETA=0:00:21
[32m[03/14 20:54:41 d2.evaluation.evaluator]: [0mInference done 689/850. 0.0988 s / img. ETA=0:00:16
[32m[03/14 20:54:46 d2.evaluation.evaluator]: [0mInference done 732/850. 0.0995 s / img. ETA=0:00:12
[32m[03/14 20:54:51 d2.evaluation.evaluator]: [0mInference done 771/850. 0.1004 s / img. ETA=0:00:08
[32m[03/14 20:54:56 d2.evaluation.evaluator]: [0mInference done 814/850. 0.1010 s / img. ETA=0:00:03
[32m[03/14 20:55:00 d2.evaluation.evaluator]: [0mTotal inference time: 0:01:30.960110 (0.107645 s / img per device, on 1 devices)
[32m[03/14 20:55:00 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:01:25 (0.101217 s / img per device, on 1 devices)
[32m[03/14 20:55:00 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[03/14 20:55:00 d2.evaluation.coco_evaluation]: [0mSaving results to ./output/coco_instances_results.json
[32m[03/14 20:55:00 d2.evaluation.coco_evaluation]: [0mEvaluating predictions ...
Loading and preparing results...
DONE (t=0.01s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=3.46s).
Accumulating evaluation results...
DONE (t=0.23s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.763
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.926
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.849
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.351
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.634
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.836
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.102
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.760
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.791
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.436
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.686
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.862
[32m[03/14 20:55:04 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 76.314 | 92.587 | 84.946 | 35.063 | 63.350 | 83.580 |
[32m[03/14 20:55:04 d2.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category   | AP   | category   | AP   | category   | AP     |
|:-----------|:-----|:-----------|:-----|:-----------|:-------|
| None       | nan  | Car        | nan  | Pedestrian | 76.314 |
