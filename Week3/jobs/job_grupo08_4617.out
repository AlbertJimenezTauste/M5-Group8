Metadata(name='MOTSChallenge_train', thing_classes=['None', 'Car', 'Pedestrian'])
Loading sequence 0002
Loading sequence 0009
Loading sequence 0011
0002
0009
0011
Loaded 2025 images!
[32m[03/15 14:08:25 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=12, bias=True)
    )
  )
)
Loading sequence 0002
Loading sequence 0009
Loading sequence 0011
0002
0009
0011
Loaded 2025 images!
[32m[03/15 14:11:34 d2.data.build]: [0mRemoved 0 images with no usable annotations. 2025 images left.
[32m[03/15 14:11:34 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    None    | 0            |    Car     | 0            | Pedestrian | 20324        |
|            |              |            |              |            |              |
|   total    | 20324        |            |              |            |              |[0m
[32m[03/15 14:11:34 d2.data.common]: [0mSerializing 2025 elements to byte tensors and concatenating them all ...
[32m[03/15 14:11:34 d2.data.common]: [0mSerialized dataset takes 2.43 MiB
[32m[03/15 14:11:34 d2.data.detection_utils]: [0mTransformGens used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[03/15 14:11:34 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[03/15 14:11:35 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[03/15 14:11:45 d2.utils.events]: [0m eta: 0:35:38  iter: 19  total_loss: 2.344  loss_cls: 1.425  loss_box_reg: 0.803  loss_rpn_cls: 0.056  loss_rpn_loc: 0.055  time: 0.4268  data_time: 0.0189  lr: 0.000005  max_mem: 3674M
[32m[03/15 14:11:53 d2.utils.events]: [0m eta: 0:35:41  iter: 39  total_loss: 2.322  loss_cls: 1.384  loss_box_reg: 0.785  loss_rpn_cls: 0.068  loss_rpn_loc: 0.058  time: 0.4253  data_time: 0.0040  lr: 0.000010  max_mem: 3674M
[32m[03/15 14:12:02 d2.utils.events]: [0m eta: 0:35:36  iter: 59  total_loss: 2.152  loss_cls: 1.256  loss_box_reg: 0.806  loss_rpn_cls: 0.049  loss_rpn_loc: 0.056  time: 0.4256  data_time: 0.0041  lr: 0.000015  max_mem: 3674M
[32m[03/15 14:12:11 d2.utils.events]: [0m eta: 0:35:40  iter: 79  total_loss: 2.007  loss_cls: 1.093  loss_box_reg: 0.766  loss_rpn_cls: 0.064  loss_rpn_loc: 0.059  time: 0.4276  data_time: 0.0041  lr: 0.000020  max_mem: 3674M
[32m[03/15 14:12:19 d2.utils.events]: [0m eta: 0:35:36  iter: 99  total_loss: 1.828  loss_cls: 0.940  loss_box_reg: 0.793  loss_rpn_cls: 0.055  loss_rpn_loc: 0.058  time: 0.4292  data_time: 0.0041  lr: 0.000025  max_mem: 3674M
[32m[03/15 14:12:28 d2.utils.events]: [0m eta: 0:35:27  iter: 119  total_loss: 1.690  loss_cls: 0.767  loss_box_reg: 0.785  loss_rpn_cls: 0.053  loss_rpn_loc: 0.065  time: 0.4282  data_time: 0.0041  lr: 0.000030  max_mem: 3674M
[32m[03/15 14:12:36 d2.utils.events]: [0m eta: 0:35:17  iter: 139  total_loss: 1.549  loss_cls: 0.666  loss_box_reg: 0.777  loss_rpn_cls: 0.044  loss_rpn_loc: 0.052  time: 0.4276  data_time: 0.0043  lr: 0.000035  max_mem: 3674M
[32m[03/15 14:12:45 d2.utils.events]: [0m eta: 0:35:09  iter: 159  total_loss: 1.412  loss_cls: 0.548  loss_box_reg: 0.776  loss_rpn_cls: 0.047  loss_rpn_loc: 0.052  time: 0.4282  data_time: 0.0044  lr: 0.000040  max_mem: 3674M
[32m[03/15 14:12:54 d2.utils.events]: [0m eta: 0:35:03  iter: 179  total_loss: 1.390  loss_cls: 0.481  loss_box_reg: 0.773  loss_rpn_cls: 0.049  loss_rpn_loc: 0.054  time: 0.4296  data_time: 0.0044  lr: 0.000045  max_mem: 3674M
[32m[03/15 14:13:03 d2.utils.events]: [0m eta: 0:34:59  iter: 199  total_loss: 1.299  loss_cls: 0.440  loss_box_reg: 0.752  loss_rpn_cls: 0.048  loss_rpn_loc: 0.056  time: 0.4324  data_time: 0.0044  lr: 0.000050  max_mem: 3674M
[32m[03/15 14:13:12 d2.utils.events]: [0m eta: 0:34:52  iter: 219  total_loss: 1.281  loss_cls: 0.393  loss_box_reg: 0.753  loss_rpn_cls: 0.058  loss_rpn_loc: 0.062  time: 0.4338  data_time: 0.0045  lr: 0.000055  max_mem: 3674M
[32m[03/15 14:13:21 d2.utils.events]: [0m eta: 0:34:44  iter: 239  total_loss: 1.215  loss_cls: 0.353  loss_box_reg: 0.738  loss_rpn_cls: 0.042  loss_rpn_loc: 0.067  time: 0.4343  data_time: 0.0045  lr: 0.000060  max_mem: 3674M
[32m[03/15 14:13:30 d2.utils.events]: [0m eta: 0:34:38  iter: 259  total_loss: 1.171  loss_cls: 0.324  loss_box_reg: 0.731  loss_rpn_cls: 0.035  loss_rpn_loc: 0.056  time: 0.4352  data_time: 0.0046  lr: 0.000065  max_mem: 3674M
[32m[03/15 14:13:38 d2.utils.events]: [0m eta: 0:34:30  iter: 279  total_loss: 1.048  loss_cls: 0.257  loss_box_reg: 0.688  loss_rpn_cls: 0.047  loss_rpn_loc: 0.049  time: 0.4354  data_time: 0.0043  lr: 0.000070  max_mem: 3674M
[32m[03/15 14:13:47 d2.utils.events]: [0m eta: 0:34:22  iter: 299  total_loss: 1.034  loss_cls: 0.249  loss_box_reg: 0.681  loss_rpn_cls: 0.040  loss_rpn_loc: 0.052  time: 0.4359  data_time: 0.0044  lr: 0.000075  max_mem: 3674M
[32m[03/15 14:13:56 d2.utils.events]: [0m eta: 0:34:12  iter: 319  total_loss: 0.992  loss_cls: 0.234  loss_box_reg: 0.657  loss_rpn_cls: 0.035  loss_rpn_loc: 0.056  time: 0.4353  data_time: 0.0043  lr: 0.000080  max_mem: 3674M
[32m[03/15 14:14:05 d2.utils.events]: [0m eta: 0:34:06  iter: 339  total_loss: 0.972  loss_cls: 0.222  loss_box_reg: 0.647  loss_rpn_cls: 0.040  loss_rpn_loc: 0.059  time: 0.4358  data_time: 0.0045  lr: 0.000085  max_mem: 3674M
[32m[03/15 14:14:14 d2.utils.events]: [0m eta: 0:33:59  iter: 359  total_loss: 0.945  loss_cls: 0.218  loss_box_reg: 0.604  loss_rpn_cls: 0.034  loss_rpn_loc: 0.070  time: 0.4366  data_time: 0.0046  lr: 0.000090  max_mem: 3674M
[32m[03/15 14:14:23 d2.utils.events]: [0m eta: 0:33:51  iter: 379  total_loss: 0.818  loss_cls: 0.183  loss_box_reg: 0.537  loss_rpn_cls: 0.028  loss_rpn_loc: 0.050  time: 0.4368  data_time: 0.0042  lr: 0.000095  max_mem: 3674M
[32m[03/15 14:14:32 d2.utils.events]: [0m eta: 0:33:44  iter: 399  total_loss: 0.794  loss_cls: 0.183  loss_box_reg: 0.485  loss_rpn_cls: 0.033  loss_rpn_loc: 0.068  time: 0.4374  data_time: 0.0046  lr: 0.000100  max_mem: 3674M
[32m[03/15 14:14:40 d2.utils.events]: [0m eta: 0:33:34  iter: 419  total_loss: 0.688  loss_cls: 0.174  loss_box_reg: 0.455  loss_rpn_cls: 0.027  loss_rpn_loc: 0.052  time: 0.4372  data_time: 0.0043  lr: 0.000105  max_mem: 3674M
[32m[03/15 14:14:49 d2.utils.events]: [0m eta: 0:33:27  iter: 439  total_loss: 0.705  loss_cls: 0.172  loss_box_reg: 0.409  loss_rpn_cls: 0.032  loss_rpn_loc: 0.058  time: 0.4377  data_time: 0.0040  lr: 0.000110  max_mem: 3674M
[32m[03/15 14:14:58 d2.utils.events]: [0m eta: 0:33:18  iter: 459  total_loss: 0.606  loss_cls: 0.161  loss_box_reg: 0.358  loss_rpn_cls: 0.031  loss_rpn_loc: 0.045  time: 0.4380  data_time: 0.0040  lr: 0.000115  max_mem: 3674M
[32m[03/15 14:15:07 d2.utils.events]: [0m eta: 0:33:12  iter: 479  total_loss: 0.672  loss_cls: 0.181  loss_box_reg: 0.369  loss_rpn_cls: 0.034  loss_rpn_loc: 0.060  time: 0.4386  data_time: 0.0042  lr: 0.000120  max_mem: 3674M
[32m[03/15 14:15:16 d2.utils.events]: [0m eta: 0:33:04  iter: 499  total_loss: 0.601  loss_cls: 0.173  loss_box_reg: 0.368  loss_rpn_cls: 0.022  loss_rpn_loc: 0.044  time: 0.4390  data_time: 0.0040  lr: 0.000125  max_mem: 3674M
[32m[03/15 14:15:25 d2.utils.events]: [0m eta: 0:32:55  iter: 519  total_loss: 0.546  loss_cls: 0.161  loss_box_reg: 0.325  loss_rpn_cls: 0.023  loss_rpn_loc: 0.047  time: 0.4387  data_time: 0.0042  lr: 0.000130  max_mem: 3674M
[32m[03/15 14:15:34 d2.utils.events]: [0m eta: 0:32:47  iter: 539  total_loss: 0.587  loss_cls: 0.161  loss_box_reg: 0.334  loss_rpn_cls: 0.023  loss_rpn_loc: 0.051  time: 0.4390  data_time: 0.0041  lr: 0.000135  max_mem: 3674M
[32m[03/15 14:15:43 d2.utils.events]: [0m eta: 0:32:39  iter: 559  total_loss: 0.577  loss_cls: 0.160  loss_box_reg: 0.325  loss_rpn_cls: 0.031  loss_rpn_loc: 0.060  time: 0.4391  data_time: 0.0042  lr: 0.000140  max_mem: 3674M
[32m[03/15 14:15:51 d2.utils.events]: [0m eta: 0:32:30  iter: 579  total_loss: 0.633  loss_cls: 0.183  loss_box_reg: 0.335  loss_rpn_cls: 0.014  loss_rpn_loc: 0.056  time: 0.4391  data_time: 0.0041  lr: 0.000145  max_mem: 3674M
[32m[03/15 14:16:00 d2.utils.events]: [0m eta: 0:32:23  iter: 599  total_loss: 0.539  loss_cls: 0.156  loss_box_reg: 0.304  loss_rpn_cls: 0.020  loss_rpn_loc: 0.051  time: 0.4393  data_time: 0.0045  lr: 0.000150  max_mem: 3674M
[32m[03/15 14:16:09 d2.utils.events]: [0m eta: 0:32:15  iter: 619  total_loss: 0.609  loss_cls: 0.180  loss_box_reg: 0.308  loss_rpn_cls: 0.034  loss_rpn_loc: 0.069  time: 0.4396  data_time: 0.0044  lr: 0.000155  max_mem: 3674M
[32m[03/15 14:16:18 d2.utils.events]: [0m eta: 0:32:08  iter: 639  total_loss: 0.547  loss_cls: 0.166  loss_box_reg: 0.301  loss_rpn_cls: 0.024  loss_rpn_loc: 0.055  time: 0.4399  data_time: 0.0041  lr: 0.000160  max_mem: 3674M
[32m[03/15 14:16:27 d2.utils.events]: [0m eta: 0:31:59  iter: 659  total_loss: 0.522  loss_cls: 0.144  loss_box_reg: 0.298  loss_rpn_cls: 0.019  loss_rpn_loc: 0.043  time: 0.4398  data_time: 0.0042  lr: 0.000165  max_mem: 3674M
[32m[03/15 14:16:36 d2.utils.events]: [0m eta: 0:31:50  iter: 679  total_loss: 0.513  loss_cls: 0.140  loss_box_reg: 0.299  loss_rpn_cls: 0.021  loss_rpn_loc: 0.050  time: 0.4400  data_time: 0.0042  lr: 0.000170  max_mem: 3674M
[32m[03/15 14:16:45 d2.utils.events]: [0m eta: 0:31:42  iter: 699  total_loss: 0.481  loss_cls: 0.140  loss_box_reg: 0.289  loss_rpn_cls: 0.022  loss_rpn_loc: 0.044  time: 0.4401  data_time: 0.0047  lr: 0.000175  max_mem: 3674M
[32m[03/15 14:16:54 d2.utils.events]: [0m eta: 0:31:33  iter: 719  total_loss: 0.554  loss_cls: 0.149  loss_box_reg: 0.312  loss_rpn_cls: 0.011  loss_rpn_loc: 0.050  time: 0.4400  data_time: 0.0042  lr: 0.000180  max_mem: 3674M
[32m[03/15 14:17:03 d2.utils.events]: [0m eta: 0:31:24  iter: 739  total_loss: 0.566  loss_cls: 0.161  loss_box_reg: 0.300  loss_rpn_cls: 0.020  loss_rpn_loc: 0.053  time: 0.4402  data_time: 0.0043  lr: 0.000185  max_mem: 3674M
[32m[03/15 14:17:11 d2.utils.events]: [0m eta: 0:31:16  iter: 759  total_loss: 0.475  loss_cls: 0.138  loss_box_reg: 0.271  loss_rpn_cls: 0.020  loss_rpn_loc: 0.052  time: 0.4403  data_time: 0.0043  lr: 0.000190  max_mem: 3674M
[32m[03/15 14:17:20 d2.utils.events]: [0m eta: 0:31:07  iter: 779  total_loss: 0.494  loss_cls: 0.149  loss_box_reg: 0.289  loss_rpn_cls: 0.018  loss_rpn_loc: 0.052  time: 0.4402  data_time: 0.0043  lr: 0.000195  max_mem: 3674M
[32m[03/15 14:17:29 d2.utils.events]: [0m eta: 0:30:57  iter: 799  total_loss: 0.576  loss_cls: 0.167  loss_box_reg: 0.288  loss_rpn_cls: 0.029  loss_rpn_loc: 0.060  time: 0.4401  data_time: 0.0045  lr: 0.000200  max_mem: 3674M
[32m[03/15 14:17:38 d2.utils.events]: [0m eta: 0:30:48  iter: 819  total_loss: 0.546  loss_cls: 0.149  loss_box_reg: 0.291  loss_rpn_cls: 0.021  loss_rpn_loc: 0.050  time: 0.4400  data_time: 0.0041  lr: 0.000205  max_mem: 3674M
[32m[03/15 14:17:47 d2.utils.events]: [0m eta: 0:30:41  iter: 839  total_loss: 0.556  loss_cls: 0.160  loss_box_reg: 0.323  loss_rpn_cls: 0.013  loss_rpn_loc: 0.058  time: 0.4406  data_time: 0.0047  lr: 0.000210  max_mem: 3674M
[32m[03/15 14:17:56 d2.utils.events]: [0m eta: 0:30:32  iter: 859  total_loss: 0.525  loss_cls: 0.153  loss_box_reg: 0.277  loss_rpn_cls: 0.027  loss_rpn_loc: 0.054  time: 0.4409  data_time: 0.0044  lr: 0.000215  max_mem: 3674M
[32m[03/15 14:18:05 d2.utils.events]: [0m eta: 0:30:24  iter: 879  total_loss: 0.502  loss_cls: 0.144  loss_box_reg: 0.281  loss_rpn_cls: 0.017  loss_rpn_loc: 0.050  time: 0.4410  data_time: 0.0044  lr: 0.000220  max_mem: 3674M
[32m[03/15 14:18:14 d2.utils.events]: [0m eta: 0:30:16  iter: 899  total_loss: 0.476  loss_cls: 0.127  loss_box_reg: 0.276  loss_rpn_cls: 0.020  loss_rpn_loc: 0.050  time: 0.4412  data_time: 0.0043  lr: 0.000225  max_mem: 3674M
[32m[03/15 14:18:23 d2.utils.events]: [0m eta: 0:30:07  iter: 919  total_loss: 0.472  loss_cls: 0.128  loss_box_reg: 0.274  loss_rpn_cls: 0.014  loss_rpn_loc: 0.047  time: 0.4411  data_time: 0.0044  lr: 0.000230  max_mem: 3674M
[32m[03/15 14:18:32 d2.utils.events]: [0m eta: 0:29:59  iter: 939  total_loss: 0.559  loss_cls: 0.153  loss_box_reg: 0.274  loss_rpn_cls: 0.022  loss_rpn_loc: 0.055  time: 0.4411  data_time: 0.0043  lr: 0.000235  max_mem: 3674M
[32m[03/15 14:18:40 d2.utils.events]: [0m eta: 0:29:50  iter: 959  total_loss: 0.509  loss_cls: 0.152  loss_box_reg: 0.292  loss_rpn_cls: 0.016  loss_rpn_loc: 0.051  time: 0.4412  data_time: 0.0045  lr: 0.000240  max_mem: 3674M
[32m[03/15 14:18:49 d2.utils.events]: [0m eta: 0:29:41  iter: 979  total_loss: 0.515  loss_cls: 0.122  loss_box_reg: 0.287  loss_rpn_cls: 0.022  loss_rpn_loc: 0.063  time: 0.4412  data_time: 0.0044  lr: 0.000245  max_mem: 3674M
[32m[03/15 14:18:58 d2.utils.events]: [0m eta: 0:29:31  iter: 999  total_loss: 0.504  loss_cls: 0.131  loss_box_reg: 0.286  loss_rpn_cls: 0.021  loss_rpn_loc: 0.042  time: 0.4408  data_time: 0.0042  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:19:07 d2.utils.events]: [0m eta: 0:29:24  iter: 1019  total_loss: 0.480  loss_cls: 0.119  loss_box_reg: 0.278  loss_rpn_cls: 0.018  loss_rpn_loc: 0.050  time: 0.4408  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:19:15 d2.utils.events]: [0m eta: 0:29:17  iter: 1039  total_loss: 0.474  loss_cls: 0.140  loss_box_reg: 0.267  loss_rpn_cls: 0.016  loss_rpn_loc: 0.053  time: 0.4408  data_time: 0.0046  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:19:24 d2.utils.events]: [0m eta: 0:29:09  iter: 1059  total_loss: 0.489  loss_cls: 0.135  loss_box_reg: 0.273  loss_rpn_cls: 0.014  loss_rpn_loc: 0.055  time: 0.4406  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:19:33 d2.utils.events]: [0m eta: 0:29:01  iter: 1079  total_loss: 0.477  loss_cls: 0.127  loss_box_reg: 0.272  loss_rpn_cls: 0.018  loss_rpn_loc: 0.047  time: 0.4406  data_time: 0.0044  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:19:42 d2.utils.events]: [0m eta: 0:28:53  iter: 1099  total_loss: 0.442  loss_cls: 0.121  loss_box_reg: 0.262  loss_rpn_cls: 0.014  loss_rpn_loc: 0.045  time: 0.4405  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:19:50 d2.utils.events]: [0m eta: 0:28:45  iter: 1119  total_loss: 0.450  loss_cls: 0.122  loss_box_reg: 0.264  loss_rpn_cls: 0.013  loss_rpn_loc: 0.046  time: 0.4405  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:19:59 d2.utils.events]: [0m eta: 0:28:38  iter: 1139  total_loss: 0.527  loss_cls: 0.153  loss_box_reg: 0.289  loss_rpn_cls: 0.019  loss_rpn_loc: 0.056  time: 0.4407  data_time: 0.0044  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:20:08 d2.utils.events]: [0m eta: 0:28:30  iter: 1159  total_loss: 0.442  loss_cls: 0.133  loss_box_reg: 0.261  loss_rpn_cls: 0.023  loss_rpn_loc: 0.052  time: 0.4405  data_time: 0.0042  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:20:17 d2.utils.events]: [0m eta: 0:28:20  iter: 1179  total_loss: 0.403  loss_cls: 0.115  loss_box_reg: 0.239  loss_rpn_cls: 0.014  loss_rpn_loc: 0.042  time: 0.4403  data_time: 0.0044  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:20:26 d2.utils.events]: [0m eta: 0:28:11  iter: 1199  total_loss: 0.439  loss_cls: 0.116  loss_box_reg: 0.260  loss_rpn_cls: 0.018  loss_rpn_loc: 0.042  time: 0.4405  data_time: 0.0044  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:20:34 d2.utils.events]: [0m eta: 0:28:02  iter: 1219  total_loss: 0.463  loss_cls: 0.120  loss_box_reg: 0.268  loss_rpn_cls: 0.014  loss_rpn_loc: 0.039  time: 0.4404  data_time: 0.0042  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:20:43 d2.utils.events]: [0m eta: 0:27:54  iter: 1239  total_loss: 0.490  loss_cls: 0.136  loss_box_reg: 0.290  loss_rpn_cls: 0.015  loss_rpn_loc: 0.052  time: 0.4405  data_time: 0.0042  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:20:52 d2.utils.events]: [0m eta: 0:27:44  iter: 1259  total_loss: 0.513  loss_cls: 0.134  loss_box_reg: 0.279  loss_rpn_cls: 0.015  loss_rpn_loc: 0.060  time: 0.4403  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:21:01 d2.utils.events]: [0m eta: 0:27:34  iter: 1279  total_loss: 0.472  loss_cls: 0.137  loss_box_reg: 0.259  loss_rpn_cls: 0.019  loss_rpn_loc: 0.044  time: 0.4402  data_time: 0.0046  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:21:10 d2.utils.events]: [0m eta: 0:27:27  iter: 1299  total_loss: 0.460  loss_cls: 0.129  loss_box_reg: 0.261  loss_rpn_cls: 0.009  loss_rpn_loc: 0.049  time: 0.4405  data_time: 0.0050  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:21:19 d2.utils.events]: [0m eta: 0:27:19  iter: 1319  total_loss: 0.466  loss_cls: 0.131  loss_box_reg: 0.247  loss_rpn_cls: 0.016  loss_rpn_loc: 0.052  time: 0.4407  data_time: 0.0044  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:21:28 d2.utils.events]: [0m eta: 0:27:10  iter: 1339  total_loss: 0.444  loss_cls: 0.115  loss_box_reg: 0.254  loss_rpn_cls: 0.020  loss_rpn_loc: 0.049  time: 0.4407  data_time: 0.0044  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:21:37 d2.utils.events]: [0m eta: 0:27:00  iter: 1359  total_loss: 0.412  loss_cls: 0.110  loss_box_reg: 0.255  loss_rpn_cls: 0.010  loss_rpn_loc: 0.038  time: 0.4407  data_time: 0.0044  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:21:46 d2.utils.events]: [0m eta: 0:26:53  iter: 1379  total_loss: 0.466  loss_cls: 0.115  loss_box_reg: 0.278  loss_rpn_cls: 0.015  loss_rpn_loc: 0.043  time: 0.4408  data_time: 0.0045  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:21:55 d2.utils.events]: [0m eta: 0:26:44  iter: 1399  total_loss: 0.459  loss_cls: 0.126  loss_box_reg: 0.260  loss_rpn_cls: 0.016  loss_rpn_loc: 0.040  time: 0.4410  data_time: 0.0045  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:22:04 d2.utils.events]: [0m eta: 0:26:36  iter: 1419  total_loss: 0.464  loss_cls: 0.121  loss_box_reg: 0.248  loss_rpn_cls: 0.012  loss_rpn_loc: 0.047  time: 0.4410  data_time: 0.0044  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:22:13 d2.utils.events]: [0m eta: 0:26:27  iter: 1439  total_loss: 0.488  loss_cls: 0.127  loss_box_reg: 0.272  loss_rpn_cls: 0.019  loss_rpn_loc: 0.056  time: 0.4411  data_time: 0.0046  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:22:22 d2.utils.events]: [0m eta: 0:26:18  iter: 1459  total_loss: 0.436  loss_cls: 0.119  loss_box_reg: 0.254  loss_rpn_cls: 0.014  loss_rpn_loc: 0.037  time: 0.4414  data_time: 0.0054  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:22:31 d2.utils.events]: [0m eta: 0:26:09  iter: 1479  total_loss: 0.419  loss_cls: 0.101  loss_box_reg: 0.247  loss_rpn_cls: 0.011  loss_rpn_loc: 0.044  time: 0.4418  data_time: 0.0058  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:22:41 d2.utils.events]: [0m eta: 0:26:01  iter: 1499  total_loss: 0.453  loss_cls: 0.108  loss_box_reg: 0.226  loss_rpn_cls: 0.016  loss_rpn_loc: 0.042  time: 0.4421  data_time: 0.0045  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:22:49 d2.utils.events]: [0m eta: 0:25:52  iter: 1519  total_loss: 0.448  loss_cls: 0.111  loss_box_reg: 0.247  loss_rpn_cls: 0.015  loss_rpn_loc: 0.050  time: 0.4421  data_time: 0.0046  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:22:58 d2.utils.events]: [0m eta: 0:25:43  iter: 1539  total_loss: 0.420  loss_cls: 0.122  loss_box_reg: 0.241  loss_rpn_cls: 0.014  loss_rpn_loc: 0.048  time: 0.4421  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:23:07 d2.utils.events]: [0m eta: 0:25:34  iter: 1559  total_loss: 0.435  loss_cls: 0.112  loss_box_reg: 0.262  loss_rpn_cls: 0.011  loss_rpn_loc: 0.048  time: 0.4419  data_time: 0.0045  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:23:16 d2.utils.events]: [0m eta: 0:25:25  iter: 1579  total_loss: 0.455  loss_cls: 0.107  loss_box_reg: 0.262  loss_rpn_cls: 0.016  loss_rpn_loc: 0.050  time: 0.4420  data_time: 0.0045  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:23:25 d2.utils.events]: [0m eta: 0:25:17  iter: 1599  total_loss: 0.406  loss_cls: 0.091  loss_box_reg: 0.253  loss_rpn_cls: 0.011  loss_rpn_loc: 0.044  time: 0.4421  data_time: 0.0047  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:23:34 d2.utils.events]: [0m eta: 0:25:08  iter: 1619  total_loss: 0.440  loss_cls: 0.123  loss_box_reg: 0.258  loss_rpn_cls: 0.017  loss_rpn_loc: 0.042  time: 0.4422  data_time: 0.0045  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:23:42 d2.utils.events]: [0m eta: 0:24:58  iter: 1639  total_loss: 0.450  loss_cls: 0.119  loss_box_reg: 0.244  loss_rpn_cls: 0.014  loss_rpn_loc: 0.049  time: 0.4420  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:23:51 d2.utils.events]: [0m eta: 0:24:49  iter: 1659  total_loss: 0.419  loss_cls: 0.108  loss_box_reg: 0.255  loss_rpn_cls: 0.010  loss_rpn_loc: 0.043  time: 0.4419  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:23:59 d2.utils.events]: [0m eta: 0:24:39  iter: 1679  total_loss: 0.453  loss_cls: 0.130  loss_box_reg: 0.251  loss_rpn_cls: 0.013  loss_rpn_loc: 0.046  time: 0.4416  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:24:08 d2.utils.events]: [0m eta: 0:24:29  iter: 1699  total_loss: 0.465  loss_cls: 0.136  loss_box_reg: 0.265  loss_rpn_cls: 0.009  loss_rpn_loc: 0.047  time: 0.4416  data_time: 0.0036  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:24:17 d2.utils.events]: [0m eta: 0:24:20  iter: 1719  total_loss: 0.441  loss_cls: 0.106  loss_box_reg: 0.258  loss_rpn_cls: 0.011  loss_rpn_loc: 0.045  time: 0.4417  data_time: 0.0037  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:24:26 d2.utils.events]: [0m eta: 0:24:11  iter: 1739  total_loss: 0.403  loss_cls: 0.111  loss_box_reg: 0.237  loss_rpn_cls: 0.010  loss_rpn_loc: 0.046  time: 0.4416  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:24:35 d2.utils.events]: [0m eta: 0:24:02  iter: 1759  total_loss: 0.448  loss_cls: 0.129  loss_box_reg: 0.249  loss_rpn_cls: 0.017  loss_rpn_loc: 0.043  time: 0.4415  data_time: 0.0036  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:24:43 d2.utils.events]: [0m eta: 0:23:54  iter: 1779  total_loss: 0.460  loss_cls: 0.112  loss_box_reg: 0.244  loss_rpn_cls: 0.015  loss_rpn_loc: 0.046  time: 0.4415  data_time: 0.0037  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:24:52 d2.utils.events]: [0m eta: 0:23:45  iter: 1799  total_loss: 0.443  loss_cls: 0.113  loss_box_reg: 0.259  loss_rpn_cls: 0.011  loss_rpn_loc: 0.052  time: 0.4413  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:25:01 d2.utils.events]: [0m eta: 0:23:37  iter: 1819  total_loss: 0.418  loss_cls: 0.128  loss_box_reg: 0.242  loss_rpn_cls: 0.017  loss_rpn_loc: 0.038  time: 0.4413  data_time: 0.0036  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:25:10 d2.utils.events]: [0m eta: 0:23:26  iter: 1839  total_loss: 0.436  loss_cls: 0.108  loss_box_reg: 0.231  loss_rpn_cls: 0.022  loss_rpn_loc: 0.060  time: 0.4412  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:25:18 d2.utils.events]: [0m eta: 0:23:16  iter: 1859  total_loss: 0.468  loss_cls: 0.109  loss_box_reg: 0.277  loss_rpn_cls: 0.019  loss_rpn_loc: 0.041  time: 0.4412  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:25:27 d2.utils.events]: [0m eta: 0:23:05  iter: 1879  total_loss: 0.469  loss_cls: 0.120  loss_box_reg: 0.264  loss_rpn_cls: 0.014  loss_rpn_loc: 0.053  time: 0.4412  data_time: 0.0040  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:25:36 d2.utils.events]: [0m eta: 0:22:56  iter: 1899  total_loss: 0.430  loss_cls: 0.108  loss_box_reg: 0.251  loss_rpn_cls: 0.015  loss_rpn_loc: 0.046  time: 0.4410  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:25:44 d2.utils.events]: [0m eta: 0:22:47  iter: 1919  total_loss: 0.426  loss_cls: 0.108  loss_box_reg: 0.232  loss_rpn_cls: 0.014  loss_rpn_loc: 0.048  time: 0.4409  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:25:53 d2.utils.events]: [0m eta: 0:22:38  iter: 1939  total_loss: 0.443  loss_cls: 0.106  loss_box_reg: 0.245  loss_rpn_cls: 0.016  loss_rpn_loc: 0.050  time: 0.4410  data_time: 0.0037  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:26:02 d2.utils.events]: [0m eta: 0:22:29  iter: 1959  total_loss: 0.433  loss_cls: 0.119  loss_box_reg: 0.254  loss_rpn_cls: 0.015  loss_rpn_loc: 0.044  time: 0.4410  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:26:11 d2.utils.events]: [0m eta: 0:22:20  iter: 1979  total_loss: 0.428  loss_cls: 0.103  loss_box_reg: 0.265  loss_rpn_cls: 0.015  loss_rpn_loc: 0.037  time: 0.4409  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:26:20 d2.utils.events]: [0m eta: 0:22:12  iter: 1999  total_loss: 0.437  loss_cls: 0.110  loss_box_reg: 0.257  loss_rpn_cls: 0.017  loss_rpn_loc: 0.050  time: 0.4409  data_time: 0.0042  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:26:28 d2.utils.events]: [0m eta: 0:22:03  iter: 2019  total_loss: 0.410  loss_cls: 0.106  loss_box_reg: 0.235  loss_rpn_cls: 0.014  loss_rpn_loc: 0.043  time: 0.4408  data_time: 0.0040  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:26:37 d2.utils.events]: [0m eta: 0:21:54  iter: 2039  total_loss: 0.414  loss_cls: 0.092  loss_box_reg: 0.239  loss_rpn_cls: 0.013  loss_rpn_loc: 0.045  time: 0.4409  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:26:46 d2.utils.events]: [0m eta: 0:21:45  iter: 2059  total_loss: 0.410  loss_cls: 0.100  loss_box_reg: 0.220  loss_rpn_cls: 0.013  loss_rpn_loc: 0.046  time: 0.4409  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:26:55 d2.utils.events]: [0m eta: 0:21:36  iter: 2079  total_loss: 0.363  loss_cls: 0.091  loss_box_reg: 0.223  loss_rpn_cls: 0.010  loss_rpn_loc: 0.048  time: 0.4409  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:27:04 d2.utils.events]: [0m eta: 0:21:28  iter: 2099  total_loss: 0.374  loss_cls: 0.111  loss_box_reg: 0.219  loss_rpn_cls: 0.008  loss_rpn_loc: 0.041  time: 0.4410  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:27:13 d2.utils.events]: [0m eta: 0:21:20  iter: 2119  total_loss: 0.426  loss_cls: 0.112  loss_box_reg: 0.261  loss_rpn_cls: 0.008  loss_rpn_loc: 0.044  time: 0.4410  data_time: 0.0042  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:27:21 d2.utils.events]: [0m eta: 0:21:10  iter: 2139  total_loss: 0.414  loss_cls: 0.107  loss_box_reg: 0.230  loss_rpn_cls: 0.011  loss_rpn_loc: 0.045  time: 0.4409  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:27:30 d2.utils.events]: [0m eta: 0:21:01  iter: 2159  total_loss: 0.367  loss_cls: 0.101  loss_box_reg: 0.218  loss_rpn_cls: 0.011  loss_rpn_loc: 0.037  time: 0.4409  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:27:39 d2.utils.events]: [0m eta: 0:20:53  iter: 2179  total_loss: 0.365  loss_cls: 0.093  loss_box_reg: 0.218  loss_rpn_cls: 0.009  loss_rpn_loc: 0.036  time: 0.4409  data_time: 0.0044  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:27:48 d2.utils.events]: [0m eta: 0:20:44  iter: 2199  total_loss: 0.404  loss_cls: 0.096  loss_box_reg: 0.228  loss_rpn_cls: 0.008  loss_rpn_loc: 0.049  time: 0.4409  data_time: 0.0044  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:27:57 d2.utils.events]: [0m eta: 0:20:35  iter: 2219  total_loss: 0.386  loss_cls: 0.095  loss_box_reg: 0.235  loss_rpn_cls: 0.013  loss_rpn_loc: 0.039  time: 0.4409  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:28:06 d2.utils.events]: [0m eta: 0:20:26  iter: 2239  total_loss: 0.495  loss_cls: 0.130  loss_box_reg: 0.254  loss_rpn_cls: 0.012  loss_rpn_loc: 0.061  time: 0.4409  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:28:14 d2.utils.events]: [0m eta: 0:20:17  iter: 2259  total_loss: 0.439  loss_cls: 0.115  loss_box_reg: 0.249  loss_rpn_cls: 0.010  loss_rpn_loc: 0.044  time: 0.4409  data_time: 0.0042  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:28:23 d2.utils.events]: [0m eta: 0:20:08  iter: 2279  total_loss: 0.379  loss_cls: 0.107  loss_box_reg: 0.218  loss_rpn_cls: 0.010  loss_rpn_loc: 0.037  time: 0.4408  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:28:32 d2.utils.events]: [0m eta: 0:19:59  iter: 2299  total_loss: 0.400  loss_cls: 0.108  loss_box_reg: 0.241  loss_rpn_cls: 0.012  loss_rpn_loc: 0.038  time: 0.4409  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:28:41 d2.utils.events]: [0m eta: 0:19:49  iter: 2319  total_loss: 0.430  loss_cls: 0.095  loss_box_reg: 0.256  loss_rpn_cls: 0.010  loss_rpn_loc: 0.044  time: 0.4408  data_time: 0.0040  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:28:50 d2.utils.events]: [0m eta: 0:19:41  iter: 2339  total_loss: 0.375  loss_cls: 0.098  loss_box_reg: 0.217  loss_rpn_cls: 0.011  loss_rpn_loc: 0.034  time: 0.4409  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:28:59 d2.utils.events]: [0m eta: 0:19:32  iter: 2359  total_loss: 0.416  loss_cls: 0.094  loss_box_reg: 0.239  loss_rpn_cls: 0.012  loss_rpn_loc: 0.040  time: 0.4409  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:29:07 d2.utils.events]: [0m eta: 0:19:22  iter: 2379  total_loss: 0.422  loss_cls: 0.118  loss_box_reg: 0.262  loss_rpn_cls: 0.011  loss_rpn_loc: 0.043  time: 0.4408  data_time: 0.0036  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:29:16 d2.utils.events]: [0m eta: 0:19:13  iter: 2399  total_loss: 0.400  loss_cls: 0.109  loss_box_reg: 0.233  loss_rpn_cls: 0.007  loss_rpn_loc: 0.045  time: 0.4409  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:29:25 d2.utils.events]: [0m eta: 0:19:04  iter: 2419  total_loss: 0.385  loss_cls: 0.089  loss_box_reg: 0.217  loss_rpn_cls: 0.014  loss_rpn_loc: 0.046  time: 0.4408  data_time: 0.0037  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:29:34 d2.utils.events]: [0m eta: 0:18:55  iter: 2439  total_loss: 0.435  loss_cls: 0.100  loss_box_reg: 0.265  loss_rpn_cls: 0.009  loss_rpn_loc: 0.042  time: 0.4408  data_time: 0.0037  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:29:42 d2.utils.events]: [0m eta: 0:18:45  iter: 2459  total_loss: 0.389  loss_cls: 0.096  loss_box_reg: 0.221  loss_rpn_cls: 0.011  loss_rpn_loc: 0.045  time: 0.4407  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:29:51 d2.utils.events]: [0m eta: 0:18:36  iter: 2479  total_loss: 0.395  loss_cls: 0.091  loss_box_reg: 0.233  loss_rpn_cls: 0.010  loss_rpn_loc: 0.038  time: 0.4407  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:30:00 d2.utils.events]: [0m eta: 0:18:26  iter: 2499  total_loss: 0.392  loss_cls: 0.103  loss_box_reg: 0.229  loss_rpn_cls: 0.015  loss_rpn_loc: 0.048  time: 0.4407  data_time: 0.0040  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:30:09 d2.utils.events]: [0m eta: 0:18:17  iter: 2519  total_loss: 0.373  loss_cls: 0.098  loss_box_reg: 0.221  loss_rpn_cls: 0.010  loss_rpn_loc: 0.044  time: 0.4406  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:30:17 d2.utils.events]: [0m eta: 0:18:08  iter: 2539  total_loss: 0.366  loss_cls: 0.094  loss_box_reg: 0.211  loss_rpn_cls: 0.011  loss_rpn_loc: 0.032  time: 0.4406  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:30:26 d2.utils.events]: [0m eta: 0:17:59  iter: 2559  total_loss: 0.414  loss_cls: 0.108  loss_box_reg: 0.229  loss_rpn_cls: 0.011  loss_rpn_loc: 0.044  time: 0.4405  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:30:34 d2.utils.events]: [0m eta: 0:17:50  iter: 2579  total_loss: 0.407  loss_cls: 0.105  loss_box_reg: 0.233  loss_rpn_cls: 0.009  loss_rpn_loc: 0.040  time: 0.4404  data_time: 0.0040  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:30:43 d2.utils.events]: [0m eta: 0:17:41  iter: 2599  total_loss: 0.416  loss_cls: 0.103  loss_box_reg: 0.230  loss_rpn_cls: 0.008  loss_rpn_loc: 0.047  time: 0.4403  data_time: 0.0040  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:30:52 d2.utils.events]: [0m eta: 0:17:32  iter: 2619  total_loss: 0.423  loss_cls: 0.112  loss_box_reg: 0.237  loss_rpn_cls: 0.008  loss_rpn_loc: 0.046  time: 0.4404  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:31:01 d2.utils.events]: [0m eta: 0:17:24  iter: 2639  total_loss: 0.418  loss_cls: 0.105  loss_box_reg: 0.252  loss_rpn_cls: 0.008  loss_rpn_loc: 0.041  time: 0.4405  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:31:10 d2.utils.events]: [0m eta: 0:17:16  iter: 2659  total_loss: 0.391  loss_cls: 0.102  loss_box_reg: 0.247  loss_rpn_cls: 0.010  loss_rpn_loc: 0.046  time: 0.4405  data_time: 0.0040  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:31:19 d2.utils.events]: [0m eta: 0:17:08  iter: 2679  total_loss: 0.372  loss_cls: 0.095  loss_box_reg: 0.228  loss_rpn_cls: 0.008  loss_rpn_loc: 0.044  time: 0.4405  data_time: 0.0040  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:31:27 d2.utils.events]: [0m eta: 0:16:59  iter: 2699  total_loss: 0.414  loss_cls: 0.106  loss_box_reg: 0.233  loss_rpn_cls: 0.013  loss_rpn_loc: 0.046  time: 0.4404  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:31:36 d2.utils.events]: [0m eta: 0:16:50  iter: 2719  total_loss: 0.382  loss_cls: 0.092  loss_box_reg: 0.225  loss_rpn_cls: 0.009  loss_rpn_loc: 0.045  time: 0.4404  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:31:45 d2.utils.events]: [0m eta: 0:16:41  iter: 2739  total_loss: 0.418  loss_cls: 0.114  loss_box_reg: 0.244  loss_rpn_cls: 0.012  loss_rpn_loc: 0.038  time: 0.4404  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:31:54 d2.utils.events]: [0m eta: 0:16:32  iter: 2759  total_loss: 0.404  loss_cls: 0.098  loss_box_reg: 0.241  loss_rpn_cls: 0.010  loss_rpn_loc: 0.043  time: 0.4405  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:32:03 d2.utils.events]: [0m eta: 0:16:23  iter: 2779  total_loss: 0.395  loss_cls: 0.111  loss_box_reg: 0.229  loss_rpn_cls: 0.009  loss_rpn_loc: 0.046  time: 0.4405  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:32:12 d2.utils.events]: [0m eta: 0:16:15  iter: 2799  total_loss: 0.387  loss_cls: 0.094  loss_box_reg: 0.237  loss_rpn_cls: 0.009  loss_rpn_loc: 0.043  time: 0.4405  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:32:21 d2.utils.events]: [0m eta: 0:16:06  iter: 2819  total_loss: 0.426  loss_cls: 0.115  loss_box_reg: 0.250  loss_rpn_cls: 0.011  loss_rpn_loc: 0.048  time: 0.4406  data_time: 0.0040  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:32:30 d2.utils.events]: [0m eta: 0:15:58  iter: 2839  total_loss: 0.372  loss_cls: 0.097  loss_box_reg: 0.214  loss_rpn_cls: 0.010  loss_rpn_loc: 0.035  time: 0.4406  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:32:38 d2.utils.events]: [0m eta: 0:15:49  iter: 2859  total_loss: 0.437  loss_cls: 0.107  loss_box_reg: 0.259  loss_rpn_cls: 0.016  loss_rpn_loc: 0.042  time: 0.4405  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:32:47 d2.utils.events]: [0m eta: 0:15:40  iter: 2879  total_loss: 0.392  loss_cls: 0.102  loss_box_reg: 0.234  loss_rpn_cls: 0.012  loss_rpn_loc: 0.041  time: 0.4405  data_time: 0.0042  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:32:56 d2.utils.events]: [0m eta: 0:15:31  iter: 2899  total_loss: 0.419  loss_cls: 0.100  loss_box_reg: 0.244  loss_rpn_cls: 0.012  loss_rpn_loc: 0.045  time: 0.4406  data_time: 0.0046  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:33:05 d2.utils.events]: [0m eta: 0:15:22  iter: 2919  total_loss: 0.397  loss_cls: 0.106  loss_box_reg: 0.229  loss_rpn_cls: 0.011  loss_rpn_loc: 0.048  time: 0.4405  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:33:14 d2.utils.events]: [0m eta: 0:15:13  iter: 2939  total_loss: 0.365  loss_cls: 0.091  loss_box_reg: 0.210  loss_rpn_cls: 0.008  loss_rpn_loc: 0.040  time: 0.4405  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:33:23 d2.utils.events]: [0m eta: 0:15:04  iter: 2959  total_loss: 0.412  loss_cls: 0.099  loss_box_reg: 0.238  loss_rpn_cls: 0.011  loss_rpn_loc: 0.046  time: 0.4406  data_time: 0.0042  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:33:31 d2.utils.events]: [0m eta: 0:14:55  iter: 2979  total_loss: 0.400  loss_cls: 0.100  loss_box_reg: 0.236  loss_rpn_cls: 0.009  loss_rpn_loc: 0.039  time: 0.4405  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:33:40 d2.utils.events]: [0m eta: 0:14:47  iter: 2999  total_loss: 0.417  loss_cls: 0.109  loss_box_reg: 0.223  loss_rpn_cls: 0.016  loss_rpn_loc: 0.046  time: 0.4406  data_time: 0.0047  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:33:49 d2.utils.events]: [0m eta: 0:14:38  iter: 3019  total_loss: 0.415  loss_cls: 0.107  loss_box_reg: 0.224  loss_rpn_cls: 0.013  loss_rpn_loc: 0.043  time: 0.4406  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:33:58 d2.utils.events]: [0m eta: 0:14:29  iter: 3039  total_loss: 0.458  loss_cls: 0.096  loss_box_reg: 0.268  loss_rpn_cls: 0.012  loss_rpn_loc: 0.054  time: 0.4407  data_time: 0.0044  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:34:07 d2.utils.events]: [0m eta: 0:14:20  iter: 3059  total_loss: 0.362  loss_cls: 0.086  loss_box_reg: 0.212  loss_rpn_cls: 0.011  loss_rpn_loc: 0.040  time: 0.4406  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:34:15 d2.utils.events]: [0m eta: 0:14:11  iter: 3079  total_loss: 0.372  loss_cls: 0.087  loss_box_reg: 0.230  loss_rpn_cls: 0.009  loss_rpn_loc: 0.039  time: 0.4405  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:34:24 d2.utils.events]: [0m eta: 0:14:02  iter: 3099  total_loss: 0.424  loss_cls: 0.129  loss_box_reg: 0.246  loss_rpn_cls: 0.014  loss_rpn_loc: 0.043  time: 0.4405  data_time: 0.0045  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:34:33 d2.utils.events]: [0m eta: 0:13:52  iter: 3119  total_loss: 0.389  loss_cls: 0.096  loss_box_reg: 0.220  loss_rpn_cls: 0.013  loss_rpn_loc: 0.042  time: 0.4405  data_time: 0.0042  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:34:42 d2.utils.events]: [0m eta: 0:13:44  iter: 3139  total_loss: 0.394  loss_cls: 0.097  loss_box_reg: 0.218  loss_rpn_cls: 0.012  loss_rpn_loc: 0.047  time: 0.4405  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:34:51 d2.utils.events]: [0m eta: 0:13:35  iter: 3159  total_loss: 0.393  loss_cls: 0.100  loss_box_reg: 0.239  loss_rpn_cls: 0.009  loss_rpn_loc: 0.047  time: 0.4405  data_time: 0.0042  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:35:00 d2.utils.events]: [0m eta: 0:13:26  iter: 3179  total_loss: 0.396  loss_cls: 0.094  loss_box_reg: 0.242  loss_rpn_cls: 0.008  loss_rpn_loc: 0.041  time: 0.4405  data_time: 0.0042  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:35:08 d2.utils.events]: [0m eta: 0:13:17  iter: 3199  total_loss: 0.447  loss_cls: 0.116  loss_box_reg: 0.247  loss_rpn_cls: 0.011  loss_rpn_loc: 0.040  time: 0.4405  data_time: 0.0042  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:35:17 d2.utils.events]: [0m eta: 0:13:09  iter: 3219  total_loss: 0.374  loss_cls: 0.094  loss_box_reg: 0.224  loss_rpn_cls: 0.009  loss_rpn_loc: 0.038  time: 0.4406  data_time: 0.0042  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:35:26 d2.utils.events]: [0m eta: 0:13:00  iter: 3239  total_loss: 0.390  loss_cls: 0.101  loss_box_reg: 0.231  loss_rpn_cls: 0.007  loss_rpn_loc: 0.049  time: 0.4405  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:35:35 d2.utils.events]: [0m eta: 0:12:51  iter: 3259  total_loss: 0.352  loss_cls: 0.085  loss_box_reg: 0.206  loss_rpn_cls: 0.010  loss_rpn_loc: 0.046  time: 0.4405  data_time: 0.0046  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:35:44 d2.utils.events]: [0m eta: 0:12:42  iter: 3279  total_loss: 0.401  loss_cls: 0.101  loss_box_reg: 0.238  loss_rpn_cls: 0.011  loss_rpn_loc: 0.044  time: 0.4406  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:35:52 d2.utils.events]: [0m eta: 0:12:33  iter: 3299  total_loss: 0.396  loss_cls: 0.087  loss_box_reg: 0.235  loss_rpn_cls: 0.013  loss_rpn_loc: 0.043  time: 0.4405  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:36:01 d2.utils.events]: [0m eta: 0:12:24  iter: 3319  total_loss: 0.390  loss_cls: 0.098  loss_box_reg: 0.243  loss_rpn_cls: 0.011  loss_rpn_loc: 0.049  time: 0.4405  data_time: 0.0042  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:36:10 d2.utils.events]: [0m eta: 0:12:15  iter: 3339  total_loss: 0.374  loss_cls: 0.087  loss_box_reg: 0.211  loss_rpn_cls: 0.009  loss_rpn_loc: 0.044  time: 0.4405  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:36:19 d2.utils.events]: [0m eta: 0:12:07  iter: 3359  total_loss: 0.350  loss_cls: 0.097  loss_box_reg: 0.199  loss_rpn_cls: 0.011  loss_rpn_loc: 0.045  time: 0.4405  data_time: 0.0045  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:36:27 d2.utils.events]: [0m eta: 0:11:58  iter: 3379  total_loss: 0.390  loss_cls: 0.101  loss_box_reg: 0.239  loss_rpn_cls: 0.007  loss_rpn_loc: 0.039  time: 0.4404  data_time: 0.0042  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:36:37 d2.utils.events]: [0m eta: 0:11:49  iter: 3399  total_loss: 0.385  loss_cls: 0.091  loss_box_reg: 0.220  loss_rpn_cls: 0.013  loss_rpn_loc: 0.051  time: 0.4405  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:36:45 d2.utils.events]: [0m eta: 0:11:40  iter: 3419  total_loss: 0.372  loss_cls: 0.098  loss_box_reg: 0.212  loss_rpn_cls: 0.008  loss_rpn_loc: 0.038  time: 0.4405  data_time: 0.0044  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:36:54 d2.utils.events]: [0m eta: 0:11:31  iter: 3439  total_loss: 0.389  loss_cls: 0.108  loss_box_reg: 0.239  loss_rpn_cls: 0.008  loss_rpn_loc: 0.035  time: 0.4405  data_time: 0.0044  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:37:03 d2.utils.events]: [0m eta: 0:11:23  iter: 3459  total_loss: 0.360  loss_cls: 0.092  loss_box_reg: 0.240  loss_rpn_cls: 0.009  loss_rpn_loc: 0.038  time: 0.4405  data_time: 0.0045  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:37:12 d2.utils.events]: [0m eta: 0:11:14  iter: 3479  total_loss: 0.364  loss_cls: 0.086  loss_box_reg: 0.223  loss_rpn_cls: 0.009  loss_rpn_loc: 0.034  time: 0.4405  data_time: 0.0045  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:37:21 d2.utils.events]: [0m eta: 0:11:05  iter: 3499  total_loss: 0.354  loss_cls: 0.091  loss_box_reg: 0.207  loss_rpn_cls: 0.008  loss_rpn_loc: 0.037  time: 0.4405  data_time: 0.0042  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:37:30 d2.utils.events]: [0m eta: 0:10:56  iter: 3519  total_loss: 0.423  loss_cls: 0.110  loss_box_reg: 0.247  loss_rpn_cls: 0.011  loss_rpn_loc: 0.048  time: 0.4406  data_time: 0.0048  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:37:38 d2.utils.events]: [0m eta: 0:10:48  iter: 3539  total_loss: 0.367  loss_cls: 0.089  loss_box_reg: 0.217  loss_rpn_cls: 0.011  loss_rpn_loc: 0.044  time: 0.4405  data_time: 0.0042  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:37:47 d2.utils.events]: [0m eta: 0:10:39  iter: 3559  total_loss: 0.322  loss_cls: 0.089  loss_box_reg: 0.192  loss_rpn_cls: 0.008  loss_rpn_loc: 0.035  time: 0.4405  data_time: 0.0044  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:37:56 d2.utils.events]: [0m eta: 0:10:30  iter: 3579  total_loss: 0.302  loss_cls: 0.088  loss_box_reg: 0.187  loss_rpn_cls: 0.007  loss_rpn_loc: 0.032  time: 0.4404  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:38:04 d2.utils.events]: [0m eta: 0:10:21  iter: 3599  total_loss: 0.386  loss_cls: 0.083  loss_box_reg: 0.220  loss_rpn_cls: 0.008  loss_rpn_loc: 0.031  time: 0.4404  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:38:13 d2.utils.events]: [0m eta: 0:10:12  iter: 3619  total_loss: 0.327  loss_cls: 0.084  loss_box_reg: 0.197  loss_rpn_cls: 0.009  loss_rpn_loc: 0.034  time: 0.4403  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:38:22 d2.utils.events]: [0m eta: 0:10:03  iter: 3639  total_loss: 0.326  loss_cls: 0.086  loss_box_reg: 0.197  loss_rpn_cls: 0.012  loss_rpn_loc: 0.038  time: 0.4404  data_time: 0.0046  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:38:31 d2.utils.events]: [0m eta: 0:09:54  iter: 3659  total_loss: 0.326  loss_cls: 0.085  loss_box_reg: 0.190  loss_rpn_cls: 0.009  loss_rpn_loc: 0.036  time: 0.4404  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:38:39 d2.utils.events]: [0m eta: 0:09:45  iter: 3679  total_loss: 0.341  loss_cls: 0.082  loss_box_reg: 0.215  loss_rpn_cls: 0.009  loss_rpn_loc: 0.040  time: 0.4403  data_time: 0.0040  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:38:48 d2.utils.events]: [0m eta: 0:09:36  iter: 3699  total_loss: 0.389  loss_cls: 0.100  loss_box_reg: 0.227  loss_rpn_cls: 0.007  loss_rpn_loc: 0.038  time: 0.4403  data_time: 0.0045  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:38:57 d2.utils.events]: [0m eta: 0:09:27  iter: 3719  total_loss: 0.432  loss_cls: 0.109  loss_box_reg: 0.260  loss_rpn_cls: 0.007  loss_rpn_loc: 0.050  time: 0.4403  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:39:06 d2.utils.events]: [0m eta: 0:09:18  iter: 3739  total_loss: 0.371  loss_cls: 0.083  loss_box_reg: 0.221  loss_rpn_cls: 0.006  loss_rpn_loc: 0.038  time: 0.4402  data_time: 0.0037  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:39:14 d2.utils.events]: [0m eta: 0:09:09  iter: 3759  total_loss: 0.370  loss_cls: 0.089  loss_box_reg: 0.202  loss_rpn_cls: 0.009  loss_rpn_loc: 0.034  time: 0.4401  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:39:23 d2.utils.events]: [0m eta: 0:09:00  iter: 3779  total_loss: 0.379  loss_cls: 0.093  loss_box_reg: 0.210  loss_rpn_cls: 0.007  loss_rpn_loc: 0.039  time: 0.4401  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:39:32 d2.utils.events]: [0m eta: 0:08:51  iter: 3799  total_loss: 0.409  loss_cls: 0.111  loss_box_reg: 0.235  loss_rpn_cls: 0.010  loss_rpn_loc: 0.045  time: 0.4402  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:39:41 d2.utils.events]: [0m eta: 0:08:42  iter: 3819  total_loss: 0.392  loss_cls: 0.103  loss_box_reg: 0.238  loss_rpn_cls: 0.011  loss_rpn_loc: 0.040  time: 0.4402  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:39:49 d2.utils.events]: [0m eta: 0:08:33  iter: 3839  total_loss: 0.350  loss_cls: 0.080  loss_box_reg: 0.206  loss_rpn_cls: 0.008  loss_rpn_loc: 0.030  time: 0.4402  data_time: 0.0037  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:39:59 d2.utils.events]: [0m eta: 0:08:25  iter: 3859  total_loss: 0.384  loss_cls: 0.107  loss_box_reg: 0.217  loss_rpn_cls: 0.007  loss_rpn_loc: 0.044  time: 0.4403  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:40:07 d2.utils.events]: [0m eta: 0:08:16  iter: 3879  total_loss: 0.374  loss_cls: 0.081  loss_box_reg: 0.239  loss_rpn_cls: 0.007  loss_rpn_loc: 0.039  time: 0.4403  data_time: 0.0037  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:40:16 d2.utils.events]: [0m eta: 0:08:07  iter: 3899  total_loss: 0.412  loss_cls: 0.100  loss_box_reg: 0.228  loss_rpn_cls: 0.008  loss_rpn_loc: 0.043  time: 0.4402  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:40:25 d2.utils.events]: [0m eta: 0:07:58  iter: 3919  total_loss: 0.372  loss_cls: 0.097  loss_box_reg: 0.217  loss_rpn_cls: 0.009  loss_rpn_loc: 0.050  time: 0.4403  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:40:34 d2.utils.events]: [0m eta: 0:07:49  iter: 3939  total_loss: 0.347  loss_cls: 0.087  loss_box_reg: 0.197  loss_rpn_cls: 0.010  loss_rpn_loc: 0.034  time: 0.4403  data_time: 0.0040  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:40:42 d2.utils.events]: [0m eta: 0:07:40  iter: 3959  total_loss: 0.365  loss_cls: 0.089  loss_box_reg: 0.216  loss_rpn_cls: 0.004  loss_rpn_loc: 0.044  time: 0.4402  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:40:52 d2.utils.events]: [0m eta: 0:07:32  iter: 3979  total_loss: 0.399  loss_cls: 0.109  loss_box_reg: 0.235  loss_rpn_cls: 0.007  loss_rpn_loc: 0.050  time: 0.4403  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:41:00 d2.utils.events]: [0m eta: 0:07:23  iter: 3999  total_loss: 0.377  loss_cls: 0.088  loss_box_reg: 0.220  loss_rpn_cls: 0.009  loss_rpn_loc: 0.045  time: 0.4403  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:41:09 d2.utils.events]: [0m eta: 0:07:14  iter: 4019  total_loss: 0.348  loss_cls: 0.085  loss_box_reg: 0.218  loss_rpn_cls: 0.010  loss_rpn_loc: 0.036  time: 0.4403  data_time: 0.0037  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:41:18 d2.utils.events]: [0m eta: 0:07:05  iter: 4039  total_loss: 0.353  loss_cls: 0.093  loss_box_reg: 0.227  loss_rpn_cls: 0.007  loss_rpn_loc: 0.040  time: 0.4402  data_time: 0.0040  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:41:27 d2.utils.events]: [0m eta: 0:06:56  iter: 4059  total_loss: 0.371  loss_cls: 0.097  loss_box_reg: 0.219  loss_rpn_cls: 0.010  loss_rpn_loc: 0.045  time: 0.4403  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:41:35 d2.utils.events]: [0m eta: 0:06:47  iter: 4079  total_loss: 0.377  loss_cls: 0.092  loss_box_reg: 0.218  loss_rpn_cls: 0.006  loss_rpn_loc: 0.040  time: 0.4403  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:41:44 d2.utils.events]: [0m eta: 0:06:38  iter: 4099  total_loss: 0.328  loss_cls: 0.076  loss_box_reg: 0.205  loss_rpn_cls: 0.005  loss_rpn_loc: 0.044  time: 0.4402  data_time: 0.0036  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:41:53 d2.utils.events]: [0m eta: 0:06:29  iter: 4119  total_loss: 0.388  loss_cls: 0.097  loss_box_reg: 0.225  loss_rpn_cls: 0.006  loss_rpn_loc: 0.037  time: 0.4402  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:42:02 d2.utils.events]: [0m eta: 0:06:21  iter: 4139  total_loss: 0.364  loss_cls: 0.097  loss_box_reg: 0.219  loss_rpn_cls: 0.007  loss_rpn_loc: 0.037  time: 0.4402  data_time: 0.0041  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:42:10 d2.utils.events]: [0m eta: 0:06:12  iter: 4159  total_loss: 0.324  loss_cls: 0.088  loss_box_reg: 0.194  loss_rpn_cls: 0.007  loss_rpn_loc: 0.043  time: 0.4402  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:42:19 d2.utils.events]: [0m eta: 0:06:03  iter: 4179  total_loss: 0.341  loss_cls: 0.091  loss_box_reg: 0.211  loss_rpn_cls: 0.006  loss_rpn_loc: 0.036  time: 0.4401  data_time: 0.0037  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:42:28 d2.utils.events]: [0m eta: 0:05:54  iter: 4199  total_loss: 0.338  loss_cls: 0.090  loss_box_reg: 0.190  loss_rpn_cls: 0.006  loss_rpn_loc: 0.042  time: 0.4401  data_time: 0.0036  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:42:37 d2.utils.events]: [0m eta: 0:05:45  iter: 4219  total_loss: 0.372  loss_cls: 0.103  loss_box_reg: 0.221  loss_rpn_cls: 0.010  loss_rpn_loc: 0.036  time: 0.4401  data_time: 0.0036  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:42:45 d2.utils.events]: [0m eta: 0:05:36  iter: 4239  total_loss: 0.335  loss_cls: 0.081  loss_box_reg: 0.191  loss_rpn_cls: 0.006  loss_rpn_loc: 0.032  time: 0.4401  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:42:54 d2.utils.events]: [0m eta: 0:05:27  iter: 4259  total_loss: 0.350  loss_cls: 0.097  loss_box_reg: 0.220  loss_rpn_cls: 0.007  loss_rpn_loc: 0.049  time: 0.4401  data_time: 0.0037  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:43:03 d2.utils.events]: [0m eta: 0:05:19  iter: 4279  total_loss: 0.347  loss_cls: 0.089  loss_box_reg: 0.200  loss_rpn_cls: 0.008  loss_rpn_loc: 0.031  time: 0.4401  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:43:12 d2.utils.events]: [0m eta: 0:05:10  iter: 4299  total_loss: 0.357  loss_cls: 0.083  loss_box_reg: 0.229  loss_rpn_cls: 0.006  loss_rpn_loc: 0.035  time: 0.4401  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:43:21 d2.utils.events]: [0m eta: 0:05:01  iter: 4319  total_loss: 0.378  loss_cls: 0.094  loss_box_reg: 0.224  loss_rpn_cls: 0.010  loss_rpn_loc: 0.040  time: 0.4401  data_time: 0.0040  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:43:29 d2.utils.events]: [0m eta: 0:04:52  iter: 4339  total_loss: 0.360  loss_cls: 0.089  loss_box_reg: 0.214  loss_rpn_cls: 0.007  loss_rpn_loc: 0.036  time: 0.4401  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:43:38 d2.utils.events]: [0m eta: 0:04:43  iter: 4359  total_loss: 0.384  loss_cls: 0.097  loss_box_reg: 0.223  loss_rpn_cls: 0.009  loss_rpn_loc: 0.049  time: 0.4401  data_time: 0.0036  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:43:47 d2.utils.events]: [0m eta: 0:04:34  iter: 4379  total_loss: 0.447  loss_cls: 0.108  loss_box_reg: 0.239  loss_rpn_cls: 0.010  loss_rpn_loc: 0.050  time: 0.4401  data_time: 0.0036  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:43:56 d2.utils.events]: [0m eta: 0:04:26  iter: 4399  total_loss: 0.412  loss_cls: 0.099  loss_box_reg: 0.243  loss_rpn_cls: 0.006  loss_rpn_loc: 0.047  time: 0.4402  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:44:05 d2.utils.events]: [0m eta: 0:04:17  iter: 4419  total_loss: 0.297  loss_cls: 0.079  loss_box_reg: 0.179  loss_rpn_cls: 0.004  loss_rpn_loc: 0.037  time: 0.4402  data_time: 0.0036  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:44:14 d2.utils.events]: [0m eta: 0:04:08  iter: 4439  total_loss: 0.364  loss_cls: 0.098  loss_box_reg: 0.202  loss_rpn_cls: 0.005  loss_rpn_loc: 0.044  time: 0.4402  data_time: 0.0036  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:44:23 d2.utils.events]: [0m eta: 0:03:59  iter: 4459  total_loss: 0.356  loss_cls: 0.087  loss_box_reg: 0.215  loss_rpn_cls: 0.006  loss_rpn_loc: 0.034  time: 0.4402  data_time: 0.0040  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:44:32 d2.utils.events]: [0m eta: 0:03:50  iter: 4479  total_loss: 0.353  loss_cls: 0.086  loss_box_reg: 0.195  loss_rpn_cls: 0.013  loss_rpn_loc: 0.036  time: 0.4402  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:44:40 d2.utils.events]: [0m eta: 0:03:41  iter: 4499  total_loss: 0.368  loss_cls: 0.095  loss_box_reg: 0.217  loss_rpn_cls: 0.009  loss_rpn_loc: 0.042  time: 0.4402  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:44:49 d2.utils.events]: [0m eta: 0:03:32  iter: 4519  total_loss: 0.372  loss_cls: 0.080  loss_box_reg: 0.207  loss_rpn_cls: 0.008  loss_rpn_loc: 0.044  time: 0.4402  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:44:58 d2.utils.events]: [0m eta: 0:03:24  iter: 4539  total_loss: 0.351  loss_cls: 0.087  loss_box_reg: 0.190  loss_rpn_cls: 0.010  loss_rpn_loc: 0.044  time: 0.4402  data_time: 0.0040  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:45:07 d2.utils.events]: [0m eta: 0:03:15  iter: 4559  total_loss: 0.378  loss_cls: 0.082  loss_box_reg: 0.234  loss_rpn_cls: 0.011  loss_rpn_loc: 0.044  time: 0.4402  data_time: 0.0043  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:45:16 d2.utils.events]: [0m eta: 0:03:06  iter: 4579  total_loss: 0.396  loss_cls: 0.095  loss_box_reg: 0.230  loss_rpn_cls: 0.010  loss_rpn_loc: 0.058  time: 0.4402  data_time: 0.0037  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:45:24 d2.utils.events]: [0m eta: 0:02:57  iter: 4599  total_loss: 0.359  loss_cls: 0.092  loss_box_reg: 0.218  loss_rpn_cls: 0.007  loss_rpn_loc: 0.042  time: 0.4402  data_time: 0.0036  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:45:33 d2.utils.events]: [0m eta: 0:02:48  iter: 4619  total_loss: 0.329  loss_cls: 0.076  loss_box_reg: 0.189  loss_rpn_cls: 0.008  loss_rpn_loc: 0.033  time: 0.4402  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:45:42 d2.utils.events]: [0m eta: 0:02:39  iter: 4639  total_loss: 0.340  loss_cls: 0.085  loss_box_reg: 0.201  loss_rpn_cls: 0.006  loss_rpn_loc: 0.036  time: 0.4402  data_time: 0.0036  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:45:51 d2.utils.events]: [0m eta: 0:02:31  iter: 4659  total_loss: 0.389  loss_cls: 0.104  loss_box_reg: 0.226  loss_rpn_cls: 0.006  loss_rpn_loc: 0.043  time: 0.4402  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:46:00 d2.utils.events]: [0m eta: 0:02:22  iter: 4679  total_loss: 0.401  loss_cls: 0.109  loss_box_reg: 0.236  loss_rpn_cls: 0.011  loss_rpn_loc: 0.044  time: 0.4402  data_time: 0.0040  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:46:09 d2.utils.events]: [0m eta: 0:02:13  iter: 4699  total_loss: 0.327  loss_cls: 0.082  loss_box_reg: 0.189  loss_rpn_cls: 0.006  loss_rpn_loc: 0.033  time: 0.4403  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:46:17 d2.utils.events]: [0m eta: 0:02:04  iter: 4719  total_loss: 0.370  loss_cls: 0.098  loss_box_reg: 0.217  loss_rpn_cls: 0.010  loss_rpn_loc: 0.038  time: 0.4402  data_time: 0.0037  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:46:26 d2.utils.events]: [0m eta: 0:01:55  iter: 4739  total_loss: 0.363  loss_cls: 0.091  loss_box_reg: 0.215  loss_rpn_cls: 0.007  loss_rpn_loc: 0.044  time: 0.4402  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:46:35 d2.utils.events]: [0m eta: 0:01:46  iter: 4759  total_loss: 0.345  loss_cls: 0.085  loss_box_reg: 0.203  loss_rpn_cls: 0.008  loss_rpn_loc: 0.039  time: 0.4402  data_time: 0.0037  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:46:44 d2.utils.events]: [0m eta: 0:01:38  iter: 4779  total_loss: 0.357  loss_cls: 0.100  loss_box_reg: 0.211  loss_rpn_cls: 0.009  loss_rpn_loc: 0.036  time: 0.4402  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:46:53 d2.utils.events]: [0m eta: 0:01:29  iter: 4799  total_loss: 0.357  loss_cls: 0.088  loss_box_reg: 0.216  loss_rpn_cls: 0.006  loss_rpn_loc: 0.037  time: 0.4402  data_time: 0.0037  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:47:02 d2.utils.events]: [0m eta: 0:01:20  iter: 4819  total_loss: 0.390  loss_cls: 0.101  loss_box_reg: 0.223  loss_rpn_cls: 0.010  loss_rpn_loc: 0.041  time: 0.4402  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:47:10 d2.utils.events]: [0m eta: 0:01:11  iter: 4839  total_loss: 0.302  loss_cls: 0.075  loss_box_reg: 0.193  loss_rpn_cls: 0.006  loss_rpn_loc: 0.033  time: 0.4403  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:47:19 d2.utils.events]: [0m eta: 0:01:02  iter: 4859  total_loss: 0.335  loss_cls: 0.092  loss_box_reg: 0.201  loss_rpn_cls: 0.006  loss_rpn_loc: 0.035  time: 0.4402  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:47:28 d2.utils.events]: [0m eta: 0:00:53  iter: 4879  total_loss: 0.355  loss_cls: 0.088  loss_box_reg: 0.221  loss_rpn_cls: 0.004  loss_rpn_loc: 0.036  time: 0.4402  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:47:37 d2.utils.events]: [0m eta: 0:00:44  iter: 4899  total_loss: 0.352  loss_cls: 0.094  loss_box_reg: 0.216  loss_rpn_cls: 0.007  loss_rpn_loc: 0.041  time: 0.4402  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:47:45 d2.utils.events]: [0m eta: 0:00:35  iter: 4919  total_loss: 0.331  loss_cls: 0.086  loss_box_reg: 0.196  loss_rpn_cls: 0.005  loss_rpn_loc: 0.038  time: 0.4402  data_time: 0.0038  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:47:54 d2.utils.events]: [0m eta: 0:00:27  iter: 4939  total_loss: 0.359  loss_cls: 0.092  loss_box_reg: 0.207  loss_rpn_cls: 0.010  loss_rpn_loc: 0.035  time: 0.4402  data_time: 0.0040  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:48:03 d2.utils.events]: [0m eta: 0:00:18  iter: 4959  total_loss: 0.339  loss_cls: 0.077  loss_box_reg: 0.210  loss_rpn_cls: 0.009  loss_rpn_loc: 0.036  time: 0.4402  data_time: 0.0040  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:48:12 d2.utils.events]: [0m eta: 0:00:09  iter: 4979  total_loss: 0.396  loss_cls: 0.109  loss_box_reg: 0.241  loss_rpn_cls: 0.007  loss_rpn_loc: 0.041  time: 0.4402  data_time: 0.0039  lr: 0.000250  max_mem: 3674M
Loading sequence 0005
0005
Loaded 837 images!
[32m[03/15 14:48:32 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    None    | 0            |    Car     | 0            | Pedestrian | 6570         |
|            |              |            |              |            |              |
|   total    | 6570         |            |              |            |              |[0m
[32m[03/15 14:48:32 d2.data.common]: [0mSerializing 837 elements to byte tensors and concatenating them all ...
[32m[03/15 14:48:32 d2.data.common]: [0mSerialized dataset takes 0.84 MiB
[5m[31mWARNING[0m [32m[03/15 14:48:32 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[03/15 14:48:32 d2.utils.events]: [0m eta: 0:00:00  iter: 4999  total_loss: 0.343  loss_cls: 0.089  loss_box_reg: 0.214  loss_rpn_cls: 0.007  loss_rpn_loc: 0.042  time: 0.4402  data_time: 0.0036  lr: 0.000250  max_mem: 3674M
[32m[03/15 14:48:32 d2.engine.hooks]: [0mOverall training speed: 4997 iterations in 0:36:39 (0.4403 s / it)
[32m[03/15 14:48:32 d2.engine.hooks]: [0mTotal training time: 0:36:55 (0:00:15 on hooks)
Loading sequence 0005
0005
Loaded 837 images!
[5m[31mWARNING[0m [32m[03/15 14:48:49 d2.evaluation.coco_evaluation]: [0mjson_file was not found in MetaDataCatalog for 'MOTSChallenge_val'. Trying to convert it to COCO format ...
[32m[03/15 14:48:49 d2.data.datasets.coco]: [0mConverting dataset annotations in 'MOTSChallenge_val' to COCO format ...)
Loading sequence 0005
0005
Loaded 837 images!
[32m[03/15 14:48:59 d2.data.datasets.coco]: [0mConverting dataset dicts into COCO format
[32m[03/15 14:49:00 d2.data.datasets.coco]: [0mConversion finished, num images: 837, num annotations: 6570
[32m[03/15 14:49:00 d2.data.datasets.coco]: [0mCaching annotations in COCO format: ./output/MOTSChallenge_val_coco_format.json
Loading sequence 0005
0005
Loaded 837 images!
[32m[03/15 14:49:10 d2.data.common]: [0mSerializing 837 elements to byte tensors and concatenating them all ...
[32m[03/15 14:49:10 d2.data.common]: [0mSerialized dataset takes 0.84 MiB
[32m[03/15 14:49:10 d2.evaluation.evaluator]: [0mStart inference on 837 images
[32m[03/15 14:49:11 d2.evaluation.evaluator]: [0mInference done 11/837. 0.0805 s / img. ETA=0:01:07
[32m[03/15 14:49:16 d2.evaluation.evaluator]: [0mInference done 72/837. 0.0820 s / img. ETA=0:01:03
[32m[03/15 14:49:21 d2.evaluation.evaluator]: [0mInference done 131/837. 0.0834 s / img. ETA=0:00:59
[32m[03/15 14:49:26 d2.evaluation.evaluator]: [0mInference done 190/837. 0.0835 s / img. ETA=0:00:54
[32m[03/15 14:49:31 d2.evaluation.evaluator]: [0mInference done 249/837. 0.0837 s / img. ETA=0:00:49
[32m[03/15 14:49:36 d2.evaluation.evaluator]: [0mInference done 309/837. 0.0836 s / img. ETA=0:00:44
[32m[03/15 14:49:41 d2.evaluation.evaluator]: [0mInference done 369/837. 0.0836 s / img. ETA=0:00:39
[32m[03/15 14:49:46 d2.evaluation.evaluator]: [0mInference done 428/837. 0.0836 s / img. ETA=0:00:34
[32m[03/15 14:49:51 d2.evaluation.evaluator]: [0mInference done 486/837. 0.0838 s / img. ETA=0:00:29
[32m[03/15 14:49:57 d2.evaluation.evaluator]: [0mInference done 545/837. 0.0839 s / img. ETA=0:00:24
[32m[03/15 14:50:02 d2.evaluation.evaluator]: [0mInference done 603/837. 0.0840 s / img. ETA=0:00:19
[32m[03/15 14:50:07 d2.evaluation.evaluator]: [0mInference done 662/837. 0.0841 s / img. ETA=0:00:14
[32m[03/15 14:50:12 d2.evaluation.evaluator]: [0mInference done 720/837. 0.0842 s / img. ETA=0:00:09
[32m[03/15 14:50:17 d2.evaluation.evaluator]: [0mInference done 778/837. 0.0843 s / img. ETA=0:00:05
[32m[03/15 14:50:22 d2.evaluation.evaluator]: [0mInference done 836/837. 0.0844 s / img. ETA=0:00:00
[32m[03/15 14:50:22 d2.evaluation.evaluator]: [0mTotal inference time: 0:01:11.195722 (0.085572 s / img per device, on 1 devices)
[32m[03/15 14:50:22 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:01:10 (0.084377 s / img per device, on 1 devices)
[32m[03/15 14:50:22 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[03/15 14:50:22 d2.evaluation.coco_evaluation]: [0mSaving results to ./output/coco_instances_results.json
[32m[03/15 14:50:22 d2.evaluation.coco_evaluation]: [0mEvaluating predictions ...
Loading and preparing results...
DONE (t=0.01s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=1.92s).
Accumulating evaluation results...
DONE (t=0.16s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.600
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.768
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.670
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.081
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.488
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.805
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.119
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.629
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.632
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.112
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.530
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.844
[32m[03/15 14:50:24 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:------:|:------:|:------:|:-----:|:------:|:------:|
| 59.999 | 76.770 | 67.007 | 8.146 | 48.800 | 80.479 |
[32m[03/15 14:50:24 d2.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category   | AP   | category   | AP   | category   | AP     |
|:-----------|:-----|:-----------|:-----|:-----------|:-------|
| None       | nan  | Car        | nan  | Pedestrian | 59.999 |
