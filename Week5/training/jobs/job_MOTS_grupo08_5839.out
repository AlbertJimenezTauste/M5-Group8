/home/grupo08/datasets/MOTSChallenge/instances_txt/
.jpg
Loading sequence 0002
Loading sequence 0005
Loading sequence 0009
Loading sequence 0011
0002
0005
0009
0011
Loaded 2862 images!
[32m[03/25 18:32:17 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=12, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask_fcn2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask_fcn3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask_fcn4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (predictor): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
/home/grupo08/datasets/MOTSChallenge/instances_txt/
.jpg
Loading sequence 0002
Loading sequence 0005
Loading sequence 0009
Loading sequence 0011
0002
0005
0009
0011
Loaded 2862 images!
[32m[03/25 18:39:02 d2.data.build]: [0mRemoved 0 images with no usable annotations. 2862 images left.
[32m[03/25 18:39:02 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    None    | 0            |    Car     | 0            | Pedestrian | 26892        |
|            |              |            |              |            |              |
|   total    | 26892        |            |              |            |              |[0m
[32m[03/25 18:39:02 d2.data.common]: [0mSerializing 2862 elements to byte tensors and concatenating them all ...
[32m[03/25 18:39:05 d2.data.common]: [0mSerialized dataset takes 57.16 MiB
[32m[03/25 18:39:05 d2.data.detection_utils]: [0mTransformGens used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[03/25 18:39:05 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[03/25 18:39:07 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[03/25 18:39:26 d2.utils.events]: [0m eta: 1:19:22  iter: 19  total_loss: 3.009  loss_cls: 1.331  loss_box_reg: 0.835  loss_mask: 0.691  loss_rpn_cls: 0.059  loss_rpn_loc: 0.066  time: 0.9252  data_time: 0.0278  lr: 0.000005  max_mem: 6806M
[32m[03/25 18:39:45 d2.utils.events]: [0m eta: 1:17:36  iter: 39  total_loss: 2.891  loss_cls: 1.299  loss_box_reg: 0.825  loss_mask: 0.689  loss_rpn_cls: 0.038  loss_rpn_loc: 0.056  time: 0.9255  data_time: 0.0112  lr: 0.000010  max_mem: 6926M
[32m[03/25 18:40:03 d2.utils.events]: [0m eta: 1:17:30  iter: 59  total_loss: 2.796  loss_cls: 1.187  loss_box_reg: 0.772  loss_mask: 0.683  loss_rpn_cls: 0.057  loss_rpn_loc: 0.052  time: 0.9303  data_time: 0.0109  lr: 0.000015  max_mem: 6930M
[32m[03/25 18:40:22 d2.utils.events]: [0m eta: 1:17:11  iter: 79  total_loss: 2.619  loss_cls: 1.043  loss_box_reg: 0.790  loss_mask: 0.674  loss_rpn_cls: 0.048  loss_rpn_loc: 0.051  time: 0.9287  data_time: 0.0111  lr: 0.000020  max_mem: 6930M
[32m[03/25 18:40:41 d2.utils.events]: [0m eta: 1:16:52  iter: 99  total_loss: 2.496  loss_cls: 0.882  loss_box_reg: 0.812  loss_mask: 0.663  loss_rpn_cls: 0.043  loss_rpn_loc: 0.057  time: 0.9303  data_time: 0.0103  lr: 0.000025  max_mem: 6930M
[32m[03/25 18:41:00 d2.utils.events]: [0m eta: 1:17:16  iter: 119  total_loss: 2.326  loss_cls: 0.764  loss_box_reg: 0.797  loss_mask: 0.650  loss_rpn_cls: 0.041  loss_rpn_loc: 0.059  time: 0.9337  data_time: 0.0108  lr: 0.000030  max_mem: 6930M
[32m[03/25 18:41:19 d2.utils.events]: [0m eta: 1:17:16  iter: 139  total_loss: 2.191  loss_cls: 0.656  loss_box_reg: 0.793  loss_mask: 0.633  loss_rpn_cls: 0.047  loss_rpn_loc: 0.054  time: 0.9359  data_time: 0.0118  lr: 0.000035  max_mem: 6930M
[32m[03/25 18:41:37 d2.utils.events]: [0m eta: 1:17:07  iter: 159  total_loss: 2.095  loss_cls: 0.569  loss_box_reg: 0.794  loss_mask: 0.617  loss_rpn_cls: 0.040  loss_rpn_loc: 0.054  time: 0.9353  data_time: 0.0123  lr: 0.000040  max_mem: 6930M
[32m[03/25 18:41:56 d2.utils.events]: [0m eta: 1:16:53  iter: 179  total_loss: 1.895  loss_cls: 0.480  loss_box_reg: 0.750  loss_mask: 0.590  loss_rpn_cls: 0.031  loss_rpn_loc: 0.046  time: 0.9367  data_time: 0.0098  lr: 0.000045  max_mem: 6930M
[32m[03/25 18:42:15 d2.utils.events]: [0m eta: 1:16:32  iter: 199  total_loss: 1.882  loss_cls: 0.458  loss_box_reg: 0.768  loss_mask: 0.573  loss_rpn_cls: 0.050  loss_rpn_loc: 0.050  time: 0.9357  data_time: 0.0104  lr: 0.000050  max_mem: 6930M
[32m[03/25 18:42:34 d2.utils.events]: [0m eta: 1:16:21  iter: 219  total_loss: 1.800  loss_cls: 0.419  loss_box_reg: 0.746  loss_mask: 0.536  loss_rpn_cls: 0.039  loss_rpn_loc: 0.054  time: 0.9384  data_time: 0.0128  lr: 0.000055  max_mem: 6930M
[32m[03/25 18:42:53 d2.utils.events]: [0m eta: 1:16:06  iter: 239  total_loss: 1.714  loss_cls: 0.382  loss_box_reg: 0.729  loss_mask: 0.515  loss_rpn_cls: 0.034  loss_rpn_loc: 0.060  time: 0.9393  data_time: 0.0105  lr: 0.000060  max_mem: 6930M
[32m[03/25 18:43:12 d2.utils.events]: [0m eta: 1:15:43  iter: 259  total_loss: 1.608  loss_cls: 0.336  loss_box_reg: 0.717  loss_mask: 0.473  loss_rpn_cls: 0.033  loss_rpn_loc: 0.050  time: 0.9383  data_time: 0.0099  lr: 0.000065  max_mem: 6930M
[32m[03/25 18:43:31 d2.utils.events]: [0m eta: 1:15:20  iter: 279  total_loss: 1.491  loss_cls: 0.282  loss_box_reg: 0.699  loss_mask: 0.429  loss_rpn_cls: 0.030  loss_rpn_loc: 0.043  time: 0.9384  data_time: 0.0115  lr: 0.000070  max_mem: 6930M
[32m[03/25 18:43:50 d2.utils.events]: [0m eta: 1:15:08  iter: 299  total_loss: 1.441  loss_cls: 0.262  loss_box_reg: 0.659  loss_mask: 0.391  loss_rpn_cls: 0.038  loss_rpn_loc: 0.058  time: 0.9398  data_time: 0.0112  lr: 0.000075  max_mem: 6930M
[32m[03/25 18:44:08 d2.utils.events]: [0m eta: 1:14:33  iter: 319  total_loss: 1.430  loss_cls: 0.253  loss_box_reg: 0.677  loss_mask: 0.381  loss_rpn_cls: 0.040  loss_rpn_loc: 0.066  time: 0.9378  data_time: 0.0115  lr: 0.000080  max_mem: 6930M
[32m[03/25 18:44:27 d2.utils.events]: [0m eta: 1:14:16  iter: 339  total_loss: 1.275  loss_cls: 0.213  loss_box_reg: 0.622  loss_mask: 0.351  loss_rpn_cls: 0.036  loss_rpn_loc: 0.043  time: 0.9385  data_time: 0.0110  lr: 0.000085  max_mem: 6930M
[32m[03/25 18:44:46 d2.utils.events]: [0m eta: 1:14:01  iter: 359  total_loss: 1.142  loss_cls: 0.198  loss_box_reg: 0.547  loss_mask: 0.323  loss_rpn_cls: 0.026  loss_rpn_loc: 0.036  time: 0.9397  data_time: 0.0107  lr: 0.000090  max_mem: 6930M
[32m[03/25 18:45:05 d2.utils.events]: [0m eta: 1:13:40  iter: 379  total_loss: 1.139  loss_cls: 0.195  loss_box_reg: 0.543  loss_mask: 0.318  loss_rpn_cls: 0.027  loss_rpn_loc: 0.044  time: 0.9393  data_time: 0.0104  lr: 0.000095  max_mem: 6930M
[32m[03/25 18:45:24 d2.utils.events]: [0m eta: 1:13:21  iter: 399  total_loss: 1.043  loss_cls: 0.173  loss_box_reg: 0.472  loss_mask: 0.295  loss_rpn_cls: 0.023  loss_rpn_loc: 0.050  time: 0.9396  data_time: 0.0109  lr: 0.000100  max_mem: 6930M
[32m[03/25 18:45:42 d2.utils.events]: [0m eta: 1:12:59  iter: 419  total_loss: 1.051  loss_cls: 0.188  loss_box_reg: 0.434  loss_mask: 0.305  loss_rpn_cls: 0.034  loss_rpn_loc: 0.051  time: 0.9391  data_time: 0.0101  lr: 0.000105  max_mem: 6930M
[32m[03/25 18:46:01 d2.utils.events]: [0m eta: 1:12:38  iter: 439  total_loss: 0.986  loss_cls: 0.162  loss_box_reg: 0.399  loss_mask: 0.287  loss_rpn_cls: 0.029  loss_rpn_loc: 0.060  time: 0.9390  data_time: 0.0099  lr: 0.000110  max_mem: 6930M
[32m[03/25 18:46:21 d2.utils.events]: [0m eta: 1:12:27  iter: 459  total_loss: 0.931  loss_cls: 0.178  loss_box_reg: 0.376  loss_mask: 0.279  loss_rpn_cls: 0.031  loss_rpn_loc: 0.053  time: 0.9411  data_time: 0.0113  lr: 0.000115  max_mem: 6930M
[32m[03/25 18:46:40 d2.utils.events]: [0m eta: 1:12:15  iter: 479  total_loss: 0.857  loss_cls: 0.188  loss_box_reg: 0.352  loss_mask: 0.245  loss_rpn_cls: 0.022  loss_rpn_loc: 0.044  time: 0.9413  data_time: 0.0111  lr: 0.000120  max_mem: 6930M
[32m[03/25 18:46:59 d2.utils.events]: [0m eta: 1:11:56  iter: 499  total_loss: 0.859  loss_cls: 0.174  loss_box_reg: 0.339  loss_mask: 0.257  loss_rpn_cls: 0.028  loss_rpn_loc: 0.052  time: 0.9416  data_time: 0.0103  lr: 0.000125  max_mem: 6930M
[32m[03/25 18:47:18 d2.utils.events]: [0m eta: 1:11:37  iter: 519  total_loss: 0.819  loss_cls: 0.166  loss_box_reg: 0.329  loss_mask: 0.250  loss_rpn_cls: 0.037  loss_rpn_loc: 0.050  time: 0.9423  data_time: 0.0113  lr: 0.000130  max_mem: 6930M
[32m[03/25 18:47:37 d2.utils.events]: [0m eta: 1:11:19  iter: 539  total_loss: 0.875  loss_cls: 0.156  loss_box_reg: 0.319  loss_mask: 0.263  loss_rpn_cls: 0.027  loss_rpn_loc: 0.049  time: 0.9427  data_time: 0.0106  lr: 0.000135  max_mem: 6930M
[32m[03/25 18:47:56 d2.utils.events]: [0m eta: 1:11:03  iter: 559  total_loss: 0.833  loss_cls: 0.162  loss_box_reg: 0.318  loss_mask: 0.243  loss_rpn_cls: 0.022  loss_rpn_loc: 0.052  time: 0.9432  data_time: 0.0110  lr: 0.000140  max_mem: 6930M
[32m[03/25 18:48:16 d2.utils.events]: [0m eta: 1:10:43  iter: 579  total_loss: 0.810  loss_cls: 0.157  loss_box_reg: 0.305  loss_mask: 0.232  loss_rpn_cls: 0.023  loss_rpn_loc: 0.054  time: 0.9436  data_time: 0.0114  lr: 0.000145  max_mem: 6930M
[32m[03/25 18:48:35 d2.utils.events]: [0m eta: 1:10:26  iter: 599  total_loss: 0.862  loss_cls: 0.182  loss_box_reg: 0.323  loss_mask: 0.262  loss_rpn_cls: 0.024  loss_rpn_loc: 0.059  time: 0.9443  data_time: 0.0109  lr: 0.000150  max_mem: 6930M
[32m[03/25 18:48:55 d2.utils.events]: [0m eta: 1:10:16  iter: 619  total_loss: 0.700  loss_cls: 0.126  loss_box_reg: 0.279  loss_mask: 0.230  loss_rpn_cls: 0.021  loss_rpn_loc: 0.042  time: 0.9456  data_time: 0.0115  lr: 0.000155  max_mem: 6930M
[32m[03/25 18:49:14 d2.utils.events]: [0m eta: 1:09:58  iter: 639  total_loss: 0.829  loss_cls: 0.168  loss_box_reg: 0.308  loss_mask: 0.242  loss_rpn_cls: 0.026  loss_rpn_loc: 0.054  time: 0.9462  data_time: 0.0117  lr: 0.000160  max_mem: 6930M
[32m[03/25 18:49:32 d2.utils.events]: [0m eta: 1:09:38  iter: 659  total_loss: 0.782  loss_cls: 0.154  loss_box_reg: 0.322  loss_mask: 0.235  loss_rpn_cls: 0.022  loss_rpn_loc: 0.049  time: 0.9452  data_time: 0.0109  lr: 0.000165  max_mem: 6930M
[32m[03/25 18:49:51 d2.utils.events]: [0m eta: 1:09:18  iter: 679  total_loss: 0.767  loss_cls: 0.147  loss_box_reg: 0.288  loss_mask: 0.224  loss_rpn_cls: 0.017  loss_rpn_loc: 0.048  time: 0.9454  data_time: 0.0102  lr: 0.000170  max_mem: 6930M
[32m[03/25 18:50:10 d2.utils.events]: [0m eta: 1:08:59  iter: 699  total_loss: 0.804  loss_cls: 0.172  loss_box_reg: 0.305  loss_mask: 0.233  loss_rpn_cls: 0.020  loss_rpn_loc: 0.053  time: 0.9455  data_time: 0.0105  lr: 0.000175  max_mem: 6930M
[32m[03/25 18:50:30 d2.utils.events]: [0m eta: 1:08:40  iter: 719  total_loss: 0.774  loss_cls: 0.137  loss_box_reg: 0.304  loss_mask: 0.228  loss_rpn_cls: 0.019  loss_rpn_loc: 0.050  time: 0.9462  data_time: 0.0114  lr: 0.000180  max_mem: 6932M
[32m[03/25 18:50:49 d2.utils.events]: [0m eta: 1:08:28  iter: 739  total_loss: 0.749  loss_cls: 0.142  loss_box_reg: 0.293  loss_mask: 0.216  loss_rpn_cls: 0.020  loss_rpn_loc: 0.048  time: 0.9473  data_time: 0.0114  lr: 0.000185  max_mem: 6932M
[32m[03/25 18:51:08 d2.utils.events]: [0m eta: 1:08:08  iter: 759  total_loss: 0.751  loss_cls: 0.156  loss_box_reg: 0.287  loss_mask: 0.216  loss_rpn_cls: 0.016  loss_rpn_loc: 0.042  time: 0.9473  data_time: 0.0116  lr: 0.000190  max_mem: 6932M
[32m[03/25 18:51:28 d2.utils.events]: [0m eta: 1:07:53  iter: 779  total_loss: 0.747  loss_cls: 0.149  loss_box_reg: 0.294  loss_mask: 0.226  loss_rpn_cls: 0.019  loss_rpn_loc: 0.048  time: 0.9476  data_time: 0.0112  lr: 0.000195  max_mem: 6932M
[32m[03/25 18:51:46 d2.utils.events]: [0m eta: 1:07:30  iter: 799  total_loss: 0.727  loss_cls: 0.133  loss_box_reg: 0.295  loss_mask: 0.220  loss_rpn_cls: 0.022  loss_rpn_loc: 0.044  time: 0.9471  data_time: 0.0099  lr: 0.000200  max_mem: 6932M
[32m[03/25 18:52:05 d2.utils.events]: [0m eta: 1:07:13  iter: 819  total_loss: 0.717  loss_cls: 0.143  loss_box_reg: 0.264  loss_mask: 0.219  loss_rpn_cls: 0.018  loss_rpn_loc: 0.054  time: 0.9472  data_time: 0.0105  lr: 0.000205  max_mem: 6932M
[32m[03/25 18:52:25 d2.utils.events]: [0m eta: 1:06:58  iter: 839  total_loss: 0.721  loss_cls: 0.144  loss_box_reg: 0.277  loss_mask: 0.229  loss_rpn_cls: 0.016  loss_rpn_loc: 0.050  time: 0.9484  data_time: 0.0101  lr: 0.000210  max_mem: 6932M
[32m[03/25 18:52:44 d2.utils.events]: [0m eta: 1:06:38  iter: 859  total_loss: 0.773  loss_cls: 0.144  loss_box_reg: 0.277  loss_mask: 0.235  loss_rpn_cls: 0.020  loss_rpn_loc: 0.056  time: 0.9480  data_time: 0.0090  lr: 0.000215  max_mem: 6932M
[32m[03/25 18:53:03 d2.utils.events]: [0m eta: 1:06:19  iter: 879  total_loss: 0.686  loss_cls: 0.137  loss_box_reg: 0.266  loss_mask: 0.212  loss_rpn_cls: 0.020  loss_rpn_loc: 0.051  time: 0.9480  data_time: 0.0101  lr: 0.000220  max_mem: 6932M
[32m[03/25 18:53:22 d2.utils.events]: [0m eta: 1:05:59  iter: 899  total_loss: 0.732  loss_cls: 0.148  loss_box_reg: 0.287  loss_mask: 0.222  loss_rpn_cls: 0.016  loss_rpn_loc: 0.050  time: 0.9483  data_time: 0.0105  lr: 0.000225  max_mem: 6932M
[32m[03/25 18:53:41 d2.utils.events]: [0m eta: 1:05:38  iter: 919  total_loss: 0.760  loss_cls: 0.146  loss_box_reg: 0.291  loss_mask: 0.217  loss_rpn_cls: 0.027  loss_rpn_loc: 0.043  time: 0.9477  data_time: 0.0092  lr: 0.000230  max_mem: 6932M
[32m[03/25 18:54:03 d2.utils.events]: [0m eta: 1:05:19  iter: 939  total_loss: 0.711  loss_cls: 0.122  loss_box_reg: 0.279  loss_mask: 0.221  loss_rpn_cls: 0.014  loss_rpn_loc: 0.049  time: 0.9505  data_time: 0.1590  lr: 0.000235  max_mem: 6932M
[32m[03/25 18:54:22 d2.utils.events]: [0m eta: 1:05:02  iter: 959  total_loss: 0.691  loss_cls: 0.123  loss_box_reg: 0.252  loss_mask: 0.209  loss_rpn_cls: 0.021  loss_rpn_loc: 0.039  time: 0.9509  data_time: 0.0104  lr: 0.000240  max_mem: 6932M
[32m[03/25 18:54:42 d2.utils.events]: [0m eta: 1:04:44  iter: 979  total_loss: 0.703  loss_cls: 0.122  loss_box_reg: 0.281  loss_mask: 0.208  loss_rpn_cls: 0.017  loss_rpn_loc: 0.045  time: 0.9517  data_time: 0.0572  lr: 0.000245  max_mem: 6932M
[32m[03/25 18:55:01 d2.utils.events]: [0m eta: 1:04:25  iter: 999  total_loss: 0.674  loss_cls: 0.131  loss_box_reg: 0.279  loss_mask: 0.213  loss_rpn_cls: 0.022  loss_rpn_loc: 0.043  time: 0.9514  data_time: 0.0098  lr: 0.000250  max_mem: 6932M
[32m[03/25 18:55:20 d2.utils.events]: [0m eta: 1:04:11  iter: 1019  total_loss: 0.693  loss_cls: 0.137  loss_box_reg: 0.263  loss_mask: 0.206  loss_rpn_cls: 0.020  loss_rpn_loc: 0.054  time: 0.9519  data_time: 0.0106  lr: 0.000250  max_mem: 6932M
[32m[03/25 18:55:39 d2.utils.events]: [0m eta: 1:03:55  iter: 1039  total_loss: 0.694  loss_cls: 0.125  loss_box_reg: 0.267  loss_mask: 0.239  loss_rpn_cls: 0.018  loss_rpn_loc: 0.043  time: 0.9517  data_time: 0.0102  lr: 0.000250  max_mem: 6932M
[32m[03/25 18:55:58 d2.utils.events]: [0m eta: 1:03:36  iter: 1059  total_loss: 0.653  loss_cls: 0.114  loss_box_reg: 0.258  loss_mask: 0.199  loss_rpn_cls: 0.018  loss_rpn_loc: 0.049  time: 0.9514  data_time: 0.0103  lr: 0.000250  max_mem: 6932M
[32m[03/25 18:56:18 d2.utils.events]: [0m eta: 1:03:19  iter: 1079  total_loss: 0.756  loss_cls: 0.142  loss_box_reg: 0.296  loss_mask: 0.218  loss_rpn_cls: 0.019  loss_rpn_loc: 0.046  time: 0.9521  data_time: 0.0109  lr: 0.000250  max_mem: 6932M
[32m[03/25 18:56:37 d2.utils.events]: [0m eta: 1:02:59  iter: 1099  total_loss: 0.702  loss_cls: 0.125  loss_box_reg: 0.264  loss_mask: 0.216  loss_rpn_cls: 0.019  loss_rpn_loc: 0.049  time: 0.9517  data_time: 0.0100  lr: 0.000250  max_mem: 6932M
[32m[03/25 18:56:56 d2.utils.events]: [0m eta: 1:02:39  iter: 1119  total_loss: 0.678  loss_cls: 0.136  loss_box_reg: 0.254  loss_mask: 0.204  loss_rpn_cls: 0.029  loss_rpn_loc: 0.054  time: 0.9517  data_time: 0.0094  lr: 0.000250  max_mem: 6932M
[32m[03/25 18:57:15 d2.utils.events]: [0m eta: 1:02:22  iter: 1139  total_loss: 0.625  loss_cls: 0.125  loss_box_reg: 0.256  loss_mask: 0.208  loss_rpn_cls: 0.019  loss_rpn_loc: 0.036  time: 0.9519  data_time: 0.0106  lr: 0.000250  max_mem: 6932M
[32m[03/25 18:57:35 d2.utils.events]: [0m eta: 1:02:03  iter: 1159  total_loss: 0.714  loss_cls: 0.136  loss_box_reg: 0.273  loss_mask: 0.227  loss_rpn_cls: 0.021  loss_rpn_loc: 0.048  time: 0.9525  data_time: 0.0107  lr: 0.000250  max_mem: 6932M
[32m[03/25 18:57:55 d2.utils.events]: [0m eta: 1:01:48  iter: 1179  total_loss: 0.637  loss_cls: 0.119  loss_box_reg: 0.253  loss_mask: 0.193  loss_rpn_cls: 0.022  loss_rpn_loc: 0.044  time: 0.9532  data_time: 0.0112  lr: 0.000250  max_mem: 6932M
[32m[03/25 18:58:13 d2.utils.events]: [0m eta: 1:01:32  iter: 1199  total_loss: 0.754  loss_cls: 0.137  loss_box_reg: 0.282  loss_mask: 0.210  loss_rpn_cls: 0.016  loss_rpn_loc: 0.043  time: 0.9530  data_time: 0.0101  lr: 0.000250  max_mem: 6932M
[32m[03/25 18:58:33 d2.utils.events]: [0m eta: 1:01:09  iter: 1219  total_loss: 0.700  loss_cls: 0.138  loss_box_reg: 0.267  loss_mask: 0.204  loss_rpn_cls: 0.015  loss_rpn_loc: 0.044  time: 0.9531  data_time: 0.0112  lr: 0.000250  max_mem: 6932M
[32m[03/25 18:58:51 d2.utils.events]: [0m eta: 1:00:49  iter: 1239  total_loss: 0.683  loss_cls: 0.119  loss_box_reg: 0.250  loss_mask: 0.208  loss_rpn_cls: 0.015  loss_rpn_loc: 0.047  time: 0.9528  data_time: 0.0111  lr: 0.000250  max_mem: 6932M
[32m[03/25 18:59:11 d2.utils.events]: [0m eta: 1:00:32  iter: 1259  total_loss: 0.692  loss_cls: 0.120  loss_box_reg: 0.258  loss_mask: 0.192  loss_rpn_cls: 0.020  loss_rpn_loc: 0.049  time: 0.9531  data_time: 0.0109  lr: 0.000250  max_mem: 6932M
[32m[03/25 18:59:30 d2.utils.events]: [0m eta: 1:00:17  iter: 1279  total_loss: 0.592  loss_cls: 0.105  loss_box_reg: 0.239  loss_mask: 0.189  loss_rpn_cls: 0.014  loss_rpn_loc: 0.041  time: 0.9534  data_time: 0.0111  lr: 0.000250  max_mem: 6932M
[32m[03/25 18:59:49 d2.utils.events]: [0m eta: 0:59:59  iter: 1299  total_loss: 0.658  loss_cls: 0.110  loss_box_reg: 0.282  loss_mask: 0.186  loss_rpn_cls: 0.012  loss_rpn_loc: 0.040  time: 0.9536  data_time: 0.0109  lr: 0.000250  max_mem: 6932M
[32m[03/25 19:00:08 d2.utils.events]: [0m eta: 0:59:41  iter: 1319  total_loss: 0.633  loss_cls: 0.123  loss_box_reg: 0.248  loss_mask: 0.194  loss_rpn_cls: 0.013  loss_rpn_loc: 0.041  time: 0.9532  data_time: 0.0112  lr: 0.000250  max_mem: 6932M
[32m[03/25 19:00:28 d2.utils.events]: [0m eta: 0:59:26  iter: 1339  total_loss: 0.555  loss_cls: 0.088  loss_box_reg: 0.218  loss_mask: 0.187  loss_rpn_cls: 0.011  loss_rpn_loc: 0.040  time: 0.9539  data_time: 0.0102  lr: 0.000250  max_mem: 6932M
[32m[03/25 19:00:47 d2.utils.events]: [0m eta: 0:59:06  iter: 1359  total_loss: 0.674  loss_cls: 0.119  loss_box_reg: 0.282  loss_mask: 0.215  loss_rpn_cls: 0.016  loss_rpn_loc: 0.053  time: 0.9539  data_time: 0.0104  lr: 0.000250  max_mem: 6932M
[32m[03/25 19:01:06 d2.utils.events]: [0m eta: 0:58:45  iter: 1379  total_loss: 0.688  loss_cls: 0.115  loss_box_reg: 0.275  loss_mask: 0.197  loss_rpn_cls: 0.019  loss_rpn_loc: 0.036  time: 0.9536  data_time: 0.0116  lr: 0.000250  max_mem: 6932M
[32m[03/25 19:01:25 d2.utils.events]: [0m eta: 0:58:28  iter: 1399  total_loss: 0.679  loss_cls: 0.115  loss_box_reg: 0.259  loss_mask: 0.217  loss_rpn_cls: 0.017  loss_rpn_loc: 0.041  time: 0.9538  data_time: 0.0119  lr: 0.000250  max_mem: 6932M
[32m[03/25 19:01:45 d2.utils.events]: [0m eta: 0:58:11  iter: 1419  total_loss: 0.570  loss_cls: 0.116  loss_box_reg: 0.235  loss_mask: 0.177  loss_rpn_cls: 0.009  loss_rpn_loc: 0.041  time: 0.9543  data_time: 0.0099  lr: 0.000250  max_mem: 6932M
[32m[03/25 19:02:04 d2.utils.events]: [0m eta: 0:57:52  iter: 1439  total_loss: 0.656  loss_cls: 0.123  loss_box_reg: 0.248  loss_mask: 0.181  loss_rpn_cls: 0.016  loss_rpn_loc: 0.046  time: 0.9541  data_time: 0.0101  lr: 0.000250  max_mem: 6932M
[32m[03/25 19:02:23 d2.utils.events]: [0m eta: 0:57:30  iter: 1459  total_loss: 0.737  loss_cls: 0.143  loss_box_reg: 0.268  loss_mask: 0.222  loss_rpn_cls: 0.013  loss_rpn_loc: 0.045  time: 0.9542  data_time: 0.0116  lr: 0.000250  max_mem: 6932M
[32m[03/25 19:02:42 d2.utils.events]: [0m eta: 0:57:10  iter: 1479  total_loss: 0.638  loss_cls: 0.129  loss_box_reg: 0.260  loss_mask: 0.206  loss_rpn_cls: 0.010  loss_rpn_loc: 0.043  time: 0.9542  data_time: 0.0101  lr: 0.000250  max_mem: 6932M
[32m[03/25 19:03:01 d2.utils.events]: [0m eta: 0:56:52  iter: 1499  total_loss: 0.587  loss_cls: 0.128  loss_box_reg: 0.236  loss_mask: 0.180  loss_rpn_cls: 0.011  loss_rpn_loc: 0.043  time: 0.9540  data_time: 0.0104  lr: 0.000250  max_mem: 6932M
[32m[03/25 19:03:21 d2.utils.events]: [0m eta: 0:56:34  iter: 1519  total_loss: 0.629  loss_cls: 0.116  loss_box_reg: 0.250  loss_mask: 0.190  loss_rpn_cls: 0.015  loss_rpn_loc: 0.046  time: 0.9545  data_time: 0.0105  lr: 0.000250  max_mem: 6932M
[32m[03/25 19:03:40 d2.utils.events]: [0m eta: 0:56:16  iter: 1539  total_loss: 0.610  loss_cls: 0.124  loss_box_reg: 0.251  loss_mask: 0.204  loss_rpn_cls: 0.011  loss_rpn_loc: 0.041  time: 0.9547  data_time: 0.0107  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:03:59 d2.utils.events]: [0m eta: 0:55:55  iter: 1559  total_loss: 0.671  loss_cls: 0.114  loss_box_reg: 0.261  loss_mask: 0.209  loss_rpn_cls: 0.015  loss_rpn_loc: 0.045  time: 0.9544  data_time: 0.0092  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:04:18 d2.utils.events]: [0m eta: 0:55:37  iter: 1579  total_loss: 0.595  loss_cls: 0.100  loss_box_reg: 0.229  loss_mask: 0.196  loss_rpn_cls: 0.011  loss_rpn_loc: 0.037  time: 0.9546  data_time: 0.0108  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:04:38 d2.utils.events]: [0m eta: 0:55:16  iter: 1599  total_loss: 0.704  loss_cls: 0.127  loss_box_reg: 0.259  loss_mask: 0.205  loss_rpn_cls: 0.019  loss_rpn_loc: 0.055  time: 0.9546  data_time: 0.0108  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:04:57 d2.utils.events]: [0m eta: 0:54:56  iter: 1619  total_loss: 0.636  loss_cls: 0.122  loss_box_reg: 0.264  loss_mask: 0.192  loss_rpn_cls: 0.013  loss_rpn_loc: 0.045  time: 0.9547  data_time: 0.0111  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:05:16 d2.utils.events]: [0m eta: 0:54:36  iter: 1639  total_loss: 0.645  loss_cls: 0.103  loss_box_reg: 0.242  loss_mask: 0.176  loss_rpn_cls: 0.015  loss_rpn_loc: 0.046  time: 0.9548  data_time: 0.0101  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:05:35 d2.utils.events]: [0m eta: 0:54:18  iter: 1659  total_loss: 0.594  loss_cls: 0.108  loss_box_reg: 0.230  loss_mask: 0.202  loss_rpn_cls: 0.008  loss_rpn_loc: 0.033  time: 0.9549  data_time: 0.0110  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:05:54 d2.utils.events]: [0m eta: 0:54:00  iter: 1679  total_loss: 0.594  loss_cls: 0.100  loss_box_reg: 0.234  loss_mask: 0.178  loss_rpn_cls: 0.012  loss_rpn_loc: 0.043  time: 0.9548  data_time: 0.0102  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:06:13 d2.utils.events]: [0m eta: 0:53:41  iter: 1699  total_loss: 0.644  loss_cls: 0.131  loss_box_reg: 0.265  loss_mask: 0.191  loss_rpn_cls: 0.010  loss_rpn_loc: 0.046  time: 0.9547  data_time: 0.0096  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:06:32 d2.utils.events]: [0m eta: 0:53:20  iter: 1719  total_loss: 0.645  loss_cls: 0.126  loss_box_reg: 0.259  loss_mask: 0.208  loss_rpn_cls: 0.011  loss_rpn_loc: 0.042  time: 0.9544  data_time: 0.0096  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:06:50 d2.utils.events]: [0m eta: 0:52:56  iter: 1739  total_loss: 0.598  loss_cls: 0.108  loss_box_reg: 0.246  loss_mask: 0.198  loss_rpn_cls: 0.012  loss_rpn_loc: 0.044  time: 0.9540  data_time: 0.0102  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:07:09 d2.utils.events]: [0m eta: 0:52:38  iter: 1759  total_loss: 0.627  loss_cls: 0.110  loss_box_reg: 0.258  loss_mask: 0.204  loss_rpn_cls: 0.013  loss_rpn_loc: 0.044  time: 0.9539  data_time: 0.0097  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:07:28 d2.utils.events]: [0m eta: 0:52:18  iter: 1779  total_loss: 0.645  loss_cls: 0.115  loss_box_reg: 0.272  loss_mask: 0.191  loss_rpn_cls: 0.013  loss_rpn_loc: 0.041  time: 0.9539  data_time: 0.0100  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:07:47 d2.utils.events]: [0m eta: 0:51:58  iter: 1799  total_loss: 0.637  loss_cls: 0.118  loss_box_reg: 0.252  loss_mask: 0.182  loss_rpn_cls: 0.011  loss_rpn_loc: 0.044  time: 0.9536  data_time: 0.0093  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:08:06 d2.utils.events]: [0m eta: 0:51:36  iter: 1819  total_loss: 0.683  loss_cls: 0.140  loss_box_reg: 0.245  loss_mask: 0.190  loss_rpn_cls: 0.017  loss_rpn_loc: 0.049  time: 0.9534  data_time: 0.0107  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:08:24 d2.utils.events]: [0m eta: 0:51:09  iter: 1839  total_loss: 0.605  loss_cls: 0.102  loss_box_reg: 0.242  loss_mask: 0.191  loss_rpn_cls: 0.008  loss_rpn_loc: 0.040  time: 0.9530  data_time: 0.0101  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:08:43 d2.utils.events]: [0m eta: 0:50:51  iter: 1859  total_loss: 0.635  loss_cls: 0.113  loss_box_reg: 0.250  loss_mask: 0.201  loss_rpn_cls: 0.012  loss_rpn_loc: 0.040  time: 0.9529  data_time: 0.0102  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:09:01 d2.utils.events]: [0m eta: 0:50:31  iter: 1879  total_loss: 0.683  loss_cls: 0.129  loss_box_reg: 0.254  loss_mask: 0.200  loss_rpn_cls: 0.009  loss_rpn_loc: 0.043  time: 0.9527  data_time: 0.0110  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:09:20 d2.utils.events]: [0m eta: 0:50:13  iter: 1899  total_loss: 0.577  loss_cls: 0.108  loss_box_reg: 0.232  loss_mask: 0.182  loss_rpn_cls: 0.014  loss_rpn_loc: 0.038  time: 0.9526  data_time: 0.0106  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:09:40 d2.utils.events]: [0m eta: 0:49:56  iter: 1919  total_loss: 0.553  loss_cls: 0.098  loss_box_reg: 0.217  loss_mask: 0.175  loss_rpn_cls: 0.010  loss_rpn_loc: 0.040  time: 0.9527  data_time: 0.0120  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:09:59 d2.utils.events]: [0m eta: 0:49:38  iter: 1939  total_loss: 0.602  loss_cls: 0.110  loss_box_reg: 0.255  loss_mask: 0.190  loss_rpn_cls: 0.010  loss_rpn_loc: 0.036  time: 0.9528  data_time: 0.0106  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:10:18 d2.utils.events]: [0m eta: 0:49:20  iter: 1959  total_loss: 0.659  loss_cls: 0.134  loss_box_reg: 0.260  loss_mask: 0.204  loss_rpn_cls: 0.009  loss_rpn_loc: 0.045  time: 0.9530  data_time: 0.0105  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:10:37 d2.utils.events]: [0m eta: 0:48:55  iter: 1979  total_loss: 0.546  loss_cls: 0.106  loss_box_reg: 0.203  loss_mask: 0.176  loss_rpn_cls: 0.014  loss_rpn_loc: 0.039  time: 0.9528  data_time: 0.0101  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:10:57 d2.utils.events]: [0m eta: 0:48:38  iter: 1999  total_loss: 0.624  loss_cls: 0.116  loss_box_reg: 0.256  loss_mask: 0.209  loss_rpn_cls: 0.013  loss_rpn_loc: 0.042  time: 0.9530  data_time: 0.0120  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:11:16 d2.utils.events]: [0m eta: 0:48:15  iter: 2019  total_loss: 0.628  loss_cls: 0.104  loss_box_reg: 0.250  loss_mask: 0.212  loss_rpn_cls: 0.012  loss_rpn_loc: 0.047  time: 0.9531  data_time: 0.0100  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:11:35 d2.utils.events]: [0m eta: 0:47:53  iter: 2039  total_loss: 0.610  loss_cls: 0.113  loss_box_reg: 0.239  loss_mask: 0.179  loss_rpn_cls: 0.011  loss_rpn_loc: 0.037  time: 0.9531  data_time: 0.0110  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:11:54 d2.utils.events]: [0m eta: 0:47:37  iter: 2059  total_loss: 0.606  loss_cls: 0.106  loss_box_reg: 0.238  loss_mask: 0.192  loss_rpn_cls: 0.014  loss_rpn_loc: 0.037  time: 0.9530  data_time: 0.0109  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:12:13 d2.utils.events]: [0m eta: 0:47:12  iter: 2079  total_loss: 0.643  loss_cls: 0.112  loss_box_reg: 0.259  loss_mask: 0.199  loss_rpn_cls: 0.009  loss_rpn_loc: 0.046  time: 0.9528  data_time: 0.0119  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:12:32 d2.utils.events]: [0m eta: 0:46:55  iter: 2099  total_loss: 0.626  loss_cls: 0.104  loss_box_reg: 0.248  loss_mask: 0.196  loss_rpn_cls: 0.007  loss_rpn_loc: 0.051  time: 0.9528  data_time: 0.0109  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:12:51 d2.utils.events]: [0m eta: 0:46:39  iter: 2119  total_loss: 0.611  loss_cls: 0.112  loss_box_reg: 0.224  loss_mask: 0.193  loss_rpn_cls: 0.014  loss_rpn_loc: 0.056  time: 0.9530  data_time: 0.0104  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:13:10 d2.utils.events]: [0m eta: 0:46:18  iter: 2139  total_loss: 0.584  loss_cls: 0.098  loss_box_reg: 0.234  loss_mask: 0.187  loss_rpn_cls: 0.013  loss_rpn_loc: 0.041  time: 0.9531  data_time: 0.0104  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:13:30 d2.utils.events]: [0m eta: 0:45:58  iter: 2159  total_loss: 0.606  loss_cls: 0.095  loss_box_reg: 0.223  loss_mask: 0.188  loss_rpn_cls: 0.011  loss_rpn_loc: 0.034  time: 0.9532  data_time: 0.0107  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:13:49 d2.utils.events]: [0m eta: 0:45:33  iter: 2179  total_loss: 0.560  loss_cls: 0.097  loss_box_reg: 0.218  loss_mask: 0.180  loss_rpn_cls: 0.011  loss_rpn_loc: 0.037  time: 0.9531  data_time: 0.0110  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:14:08 d2.utils.events]: [0m eta: 0:45:14  iter: 2199  total_loss: 0.556  loss_cls: 0.112  loss_box_reg: 0.219  loss_mask: 0.163  loss_rpn_cls: 0.009  loss_rpn_loc: 0.045  time: 0.9533  data_time: 0.0117  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:14:27 d2.utils.events]: [0m eta: 0:44:55  iter: 2219  total_loss: 0.602  loss_cls: 0.099  loss_box_reg: 0.247  loss_mask: 0.192  loss_rpn_cls: 0.012  loss_rpn_loc: 0.043  time: 0.9531  data_time: 0.0100  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:14:45 d2.utils.events]: [0m eta: 0:44:36  iter: 2239  total_loss: 0.576  loss_cls: 0.102  loss_box_reg: 0.235  loss_mask: 0.197  loss_rpn_cls: 0.007  loss_rpn_loc: 0.036  time: 0.9529  data_time: 0.0099  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:15:05 d2.utils.events]: [0m eta: 0:44:16  iter: 2259  total_loss: 0.592  loss_cls: 0.097  loss_box_reg: 0.226  loss_mask: 0.177  loss_rpn_cls: 0.010  loss_rpn_loc: 0.045  time: 0.9530  data_time: 0.0105  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:15:24 d2.utils.events]: [0m eta: 0:43:54  iter: 2279  total_loss: 0.553  loss_cls: 0.096  loss_box_reg: 0.224  loss_mask: 0.190  loss_rpn_cls: 0.009  loss_rpn_loc: 0.038  time: 0.9530  data_time: 0.0093  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:15:42 d2.utils.events]: [0m eta: 0:43:33  iter: 2299  total_loss: 0.632  loss_cls: 0.125  loss_box_reg: 0.255  loss_mask: 0.188  loss_rpn_cls: 0.015  loss_rpn_loc: 0.040  time: 0.9528  data_time: 0.0115  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:16:02 d2.utils.events]: [0m eta: 0:43:17  iter: 2319  total_loss: 0.570  loss_cls: 0.103  loss_box_reg: 0.233  loss_mask: 0.195  loss_rpn_cls: 0.008  loss_rpn_loc: 0.038  time: 0.9530  data_time: 0.0099  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:16:21 d2.utils.events]: [0m eta: 0:42:52  iter: 2339  total_loss: 0.518  loss_cls: 0.103  loss_box_reg: 0.206  loss_mask: 0.180  loss_rpn_cls: 0.009  loss_rpn_loc: 0.038  time: 0.9529  data_time: 0.0117  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:16:39 d2.utils.events]: [0m eta: 0:42:32  iter: 2359  total_loss: 0.589  loss_cls: 0.101  loss_box_reg: 0.233  loss_mask: 0.181  loss_rpn_cls: 0.011  loss_rpn_loc: 0.040  time: 0.9526  data_time: 0.0106  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:16:58 d2.utils.events]: [0m eta: 0:42:13  iter: 2379  total_loss: 0.611  loss_cls: 0.117  loss_box_reg: 0.238  loss_mask: 0.188  loss_rpn_cls: 0.012  loss_rpn_loc: 0.041  time: 0.9525  data_time: 0.0111  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:17:17 d2.utils.events]: [0m eta: 0:41:53  iter: 2399  total_loss: 0.658  loss_cls: 0.121  loss_box_reg: 0.256  loss_mask: 0.195  loss_rpn_cls: 0.023  loss_rpn_loc: 0.051  time: 0.9525  data_time: 0.0103  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:17:36 d2.utils.events]: [0m eta: 0:41:31  iter: 2419  total_loss: 0.642  loss_cls: 0.117  loss_box_reg: 0.262  loss_mask: 0.196  loss_rpn_cls: 0.011  loss_rpn_loc: 0.041  time: 0.9523  data_time: 0.0103  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:17:55 d2.utils.events]: [0m eta: 0:41:13  iter: 2439  total_loss: 0.577  loss_cls: 0.100  loss_box_reg: 0.218  loss_mask: 0.182  loss_rpn_cls: 0.016  loss_rpn_loc: 0.037  time: 0.9524  data_time: 0.0108  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:18:14 d2.utils.events]: [0m eta: 0:40:55  iter: 2459  total_loss: 0.564  loss_cls: 0.107  loss_box_reg: 0.223  loss_mask: 0.185  loss_rpn_cls: 0.013  loss_rpn_loc: 0.037  time: 0.9526  data_time: 0.0106  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:18:34 d2.utils.events]: [0m eta: 0:40:36  iter: 2479  total_loss: 0.557  loss_cls: 0.092  loss_box_reg: 0.225  loss_mask: 0.171  loss_rpn_cls: 0.011  loss_rpn_loc: 0.044  time: 0.9527  data_time: 0.0107  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:18:53 d2.utils.events]: [0m eta: 0:40:17  iter: 2499  total_loss: 0.664  loss_cls: 0.123  loss_box_reg: 0.257  loss_mask: 0.194  loss_rpn_cls: 0.011  loss_rpn_loc: 0.055  time: 0.9529  data_time: 0.0099  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:19:12 d2.utils.events]: [0m eta: 0:39:57  iter: 2519  total_loss: 0.557  loss_cls: 0.088  loss_box_reg: 0.224  loss_mask: 0.195  loss_rpn_cls: 0.009  loss_rpn_loc: 0.041  time: 0.9529  data_time: 0.0108  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:19:32 d2.utils.events]: [0m eta: 0:39:37  iter: 2539  total_loss: 0.560  loss_cls: 0.090  loss_box_reg: 0.221  loss_mask: 0.182  loss_rpn_cls: 0.011  loss_rpn_loc: 0.033  time: 0.9529  data_time: 0.0090  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:19:50 d2.utils.events]: [0m eta: 0:39:18  iter: 2559  total_loss: 0.572  loss_cls: 0.119  loss_box_reg: 0.211  loss_mask: 0.195  loss_rpn_cls: 0.016  loss_rpn_loc: 0.044  time: 0.9528  data_time: 0.0100  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:20:09 d2.utils.events]: [0m eta: 0:38:57  iter: 2579  total_loss: 0.617  loss_cls: 0.112  loss_box_reg: 0.252  loss_mask: 0.199  loss_rpn_cls: 0.011  loss_rpn_loc: 0.035  time: 0.9526  data_time: 0.0101  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:20:28 d2.utils.events]: [0m eta: 0:38:35  iter: 2599  total_loss: 0.598  loss_cls: 0.111  loss_box_reg: 0.232  loss_mask: 0.179  loss_rpn_cls: 0.008  loss_rpn_loc: 0.041  time: 0.9526  data_time: 0.0104  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:20:47 d2.utils.events]: [0m eta: 0:38:15  iter: 2619  total_loss: 0.587  loss_cls: 0.111  loss_box_reg: 0.226  loss_mask: 0.197  loss_rpn_cls: 0.011  loss_rpn_loc: 0.050  time: 0.9525  data_time: 0.0100  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:21:06 d2.utils.events]: [0m eta: 0:37:54  iter: 2639  total_loss: 0.582  loss_cls: 0.102  loss_box_reg: 0.237  loss_mask: 0.178  loss_rpn_cls: 0.010  loss_rpn_loc: 0.044  time: 0.9524  data_time: 0.0106  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:21:25 d2.utils.events]: [0m eta: 0:37:35  iter: 2659  total_loss: 0.596  loss_cls: 0.107  loss_box_reg: 0.219  loss_mask: 0.196  loss_rpn_cls: 0.015  loss_rpn_loc: 0.041  time: 0.9524  data_time: 0.0103  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:21:44 d2.utils.events]: [0m eta: 0:37:17  iter: 2679  total_loss: 0.557  loss_cls: 0.107  loss_box_reg: 0.212  loss_mask: 0.175  loss_rpn_cls: 0.015  loss_rpn_loc: 0.041  time: 0.9525  data_time: 0.0105  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:22:03 d2.utils.events]: [0m eta: 0:36:57  iter: 2699  total_loss: 0.559  loss_cls: 0.083  loss_box_reg: 0.225  loss_mask: 0.183  loss_rpn_cls: 0.012  loss_rpn_loc: 0.042  time: 0.9524  data_time: 0.0098  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:22:22 d2.utils.events]: [0m eta: 0:36:39  iter: 2719  total_loss: 0.559  loss_cls: 0.087  loss_box_reg: 0.223  loss_mask: 0.181  loss_rpn_cls: 0.009  loss_rpn_loc: 0.049  time: 0.9523  data_time: 0.0098  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:22:41 d2.utils.events]: [0m eta: 0:36:24  iter: 2739  total_loss: 0.563  loss_cls: 0.105  loss_box_reg: 0.231  loss_mask: 0.195  loss_rpn_cls: 0.009  loss_rpn_loc: 0.041  time: 0.9525  data_time: 0.0096  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:23:01 d2.utils.events]: [0m eta: 0:36:06  iter: 2759  total_loss: 0.638  loss_cls: 0.115  loss_box_reg: 0.256  loss_mask: 0.198  loss_rpn_cls: 0.011  loss_rpn_loc: 0.038  time: 0.9527  data_time: 0.0099  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:23:20 d2.utils.events]: [0m eta: 0:35:46  iter: 2779  total_loss: 0.629  loss_cls: 0.113  loss_box_reg: 0.245  loss_mask: 0.194  loss_rpn_cls: 0.015  loss_rpn_loc: 0.047  time: 0.9526  data_time: 0.0110  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:23:38 d2.utils.events]: [0m eta: 0:35:28  iter: 2799  total_loss: 0.634  loss_cls: 0.105  loss_box_reg: 0.257  loss_mask: 0.203  loss_rpn_cls: 0.015  loss_rpn_loc: 0.052  time: 0.9525  data_time: 0.0098  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:23:57 d2.utils.events]: [0m eta: 0:35:09  iter: 2819  total_loss: 0.583  loss_cls: 0.103  loss_box_reg: 0.222  loss_mask: 0.177  loss_rpn_cls: 0.013  loss_rpn_loc: 0.047  time: 0.9524  data_time: 0.0104  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:24:16 d2.utils.events]: [0m eta: 0:34:51  iter: 2839  total_loss: 0.588  loss_cls: 0.110  loss_box_reg: 0.247  loss_mask: 0.188  loss_rpn_cls: 0.009  loss_rpn_loc: 0.035  time: 0.9523  data_time: 0.0100  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:24:34 d2.utils.events]: [0m eta: 0:34:30  iter: 2859  total_loss: 0.615  loss_cls: 0.106  loss_box_reg: 0.237  loss_mask: 0.202  loss_rpn_cls: 0.009  loss_rpn_loc: 0.042  time: 0.9520  data_time: 0.0100  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:24:54 d2.utils.events]: [0m eta: 0:34:12  iter: 2879  total_loss: 0.589  loss_cls: 0.101  loss_box_reg: 0.235  loss_mask: 0.187  loss_rpn_cls: 0.015  loss_rpn_loc: 0.045  time: 0.9521  data_time: 0.0095  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:25:12 d2.utils.events]: [0m eta: 0:33:51  iter: 2899  total_loss: 0.585  loss_cls: 0.102  loss_box_reg: 0.231  loss_mask: 0.184  loss_rpn_cls: 0.011  loss_rpn_loc: 0.035  time: 0.9520  data_time: 0.0091  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:25:32 d2.utils.events]: [0m eta: 0:33:32  iter: 2919  total_loss: 0.514  loss_cls: 0.090  loss_box_reg: 0.217  loss_mask: 0.172  loss_rpn_cls: 0.007  loss_rpn_loc: 0.031  time: 0.9521  data_time: 0.0098  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:25:51 d2.utils.events]: [0m eta: 0:33:12  iter: 2939  total_loss: 0.618  loss_cls: 0.106  loss_box_reg: 0.234  loss_mask: 0.205  loss_rpn_cls: 0.008  loss_rpn_loc: 0.041  time: 0.9521  data_time: 0.0083  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:26:10 d2.utils.events]: [0m eta: 0:32:52  iter: 2959  total_loss: 0.563  loss_cls: 0.102  loss_box_reg: 0.222  loss_mask: 0.174  loss_rpn_cls: 0.009  loss_rpn_loc: 0.044  time: 0.9521  data_time: 0.0110  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:26:29 d2.utils.events]: [0m eta: 0:32:34  iter: 2979  total_loss: 0.560  loss_cls: 0.092  loss_box_reg: 0.232  loss_mask: 0.180  loss_rpn_cls: 0.009  loss_rpn_loc: 0.042  time: 0.9522  data_time: 0.0098  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:26:49 d2.utils.events]: [0m eta: 0:32:14  iter: 2999  total_loss: 0.579  loss_cls: 0.103  loss_box_reg: 0.231  loss_mask: 0.198  loss_rpn_cls: 0.009  loss_rpn_loc: 0.040  time: 0.9523  data_time: 0.0106  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:27:08 d2.utils.events]: [0m eta: 0:31:55  iter: 3019  total_loss: 0.626  loss_cls: 0.112  loss_box_reg: 0.244  loss_mask: 0.197  loss_rpn_cls: 0.007  loss_rpn_loc: 0.038  time: 0.9523  data_time: 0.0096  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:27:27 d2.utils.events]: [0m eta: 0:31:37  iter: 3039  total_loss: 0.622  loss_cls: 0.103  loss_box_reg: 0.240  loss_mask: 0.182  loss_rpn_cls: 0.010  loss_rpn_loc: 0.044  time: 0.9525  data_time: 0.0106  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:27:47 d2.utils.events]: [0m eta: 0:31:18  iter: 3059  total_loss: 0.593  loss_cls: 0.096  loss_box_reg: 0.240  loss_mask: 0.204  loss_rpn_cls: 0.009  loss_rpn_loc: 0.054  time: 0.9525  data_time: 0.0102  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:28:05 d2.utils.events]: [0m eta: 0:30:59  iter: 3079  total_loss: 0.618  loss_cls: 0.105  loss_box_reg: 0.237  loss_mask: 0.187  loss_rpn_cls: 0.014  loss_rpn_loc: 0.053  time: 0.9525  data_time: 0.0109  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:28:25 d2.utils.events]: [0m eta: 0:30:40  iter: 3099  total_loss: 0.571  loss_cls: 0.091  loss_box_reg: 0.225  loss_mask: 0.182  loss_rpn_cls: 0.010  loss_rpn_loc: 0.042  time: 0.9525  data_time: 0.0112  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:28:44 d2.utils.events]: [0m eta: 0:30:20  iter: 3119  total_loss: 0.518  loss_cls: 0.088  loss_box_reg: 0.200  loss_mask: 0.164  loss_rpn_cls: 0.006  loss_rpn_loc: 0.042  time: 0.9525  data_time: 0.0099  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:29:03 d2.utils.events]: [0m eta: 0:29:59  iter: 3139  total_loss: 0.607  loss_cls: 0.097  loss_box_reg: 0.229  loss_mask: 0.182  loss_rpn_cls: 0.009  loss_rpn_loc: 0.040  time: 0.9525  data_time: 0.0101  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:29:21 d2.utils.events]: [0m eta: 0:29:38  iter: 3159  total_loss: 0.613  loss_cls: 0.096  loss_box_reg: 0.218  loss_mask: 0.198  loss_rpn_cls: 0.011  loss_rpn_loc: 0.040  time: 0.9522  data_time: 0.0108  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:29:40 d2.utils.events]: [0m eta: 0:29:19  iter: 3179  total_loss: 0.550  loss_cls: 0.087  loss_box_reg: 0.214  loss_mask: 0.179  loss_rpn_cls: 0.009  loss_rpn_loc: 0.040  time: 0.9521  data_time: 0.0101  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:29:59 d2.utils.events]: [0m eta: 0:28:58  iter: 3199  total_loss: 0.533  loss_cls: 0.102  loss_box_reg: 0.201  loss_mask: 0.164  loss_rpn_cls: 0.010  loss_rpn_loc: 0.030  time: 0.9522  data_time: 0.0090  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:30:18 d2.utils.events]: [0m eta: 0:28:38  iter: 3219  total_loss: 0.600  loss_cls: 0.111  loss_box_reg: 0.236  loss_mask: 0.188  loss_rpn_cls: 0.010  loss_rpn_loc: 0.047  time: 0.9522  data_time: 0.0106  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:30:37 d2.utils.events]: [0m eta: 0:28:21  iter: 3239  total_loss: 0.539  loss_cls: 0.088  loss_box_reg: 0.219  loss_mask: 0.174  loss_rpn_cls: 0.011  loss_rpn_loc: 0.036  time: 0.9522  data_time: 0.0097  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:30:56 d2.utils.events]: [0m eta: 0:28:01  iter: 3259  total_loss: 0.534  loss_cls: 0.097  loss_box_reg: 0.215  loss_mask: 0.172  loss_rpn_cls: 0.008  loss_rpn_loc: 0.033  time: 0.9523  data_time: 0.0100  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:31:16 d2.utils.events]: [0m eta: 0:27:42  iter: 3279  total_loss: 0.558  loss_cls: 0.095  loss_box_reg: 0.222  loss_mask: 0.173  loss_rpn_cls: 0.008  loss_rpn_loc: 0.040  time: 0.9523  data_time: 0.0100  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:31:35 d2.utils.events]: [0m eta: 0:27:25  iter: 3299  total_loss: 0.584  loss_cls: 0.116  loss_box_reg: 0.222  loss_mask: 0.179  loss_rpn_cls: 0.010  loss_rpn_loc: 0.045  time: 0.9525  data_time: 0.0105  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:31:54 d2.utils.events]: [0m eta: 0:27:05  iter: 3319  total_loss: 0.541  loss_cls: 0.097  loss_box_reg: 0.212  loss_mask: 0.177  loss_rpn_cls: 0.009  loss_rpn_loc: 0.042  time: 0.9524  data_time: 0.0091  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:32:14 d2.utils.events]: [0m eta: 0:26:48  iter: 3339  total_loss: 0.566  loss_cls: 0.120  loss_box_reg: 0.215  loss_mask: 0.172  loss_rpn_cls: 0.009  loss_rpn_loc: 0.040  time: 0.9526  data_time: 0.0103  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:32:33 d2.utils.events]: [0m eta: 0:26:30  iter: 3359  total_loss: 0.569  loss_cls: 0.096  loss_box_reg: 0.240  loss_mask: 0.172  loss_rpn_cls: 0.011  loss_rpn_loc: 0.034  time: 0.9527  data_time: 0.0102  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:32:53 d2.utils.events]: [0m eta: 0:26:12  iter: 3379  total_loss: 0.566  loss_cls: 0.105  loss_box_reg: 0.223  loss_mask: 0.177  loss_rpn_cls: 0.007  loss_rpn_loc: 0.040  time: 0.9529  data_time: 0.0093  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:33:12 d2.utils.events]: [0m eta: 0:25:52  iter: 3399  total_loss: 0.554  loss_cls: 0.103  loss_box_reg: 0.233  loss_mask: 0.166  loss_rpn_cls: 0.007  loss_rpn_loc: 0.037  time: 0.9529  data_time: 0.0111  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:33:31 d2.utils.events]: [0m eta: 0:25:34  iter: 3419  total_loss: 0.621  loss_cls: 0.107  loss_box_reg: 0.231  loss_mask: 0.193  loss_rpn_cls: 0.007  loss_rpn_loc: 0.048  time: 0.9530  data_time: 0.0111  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:33:51 d2.utils.events]: [0m eta: 0:25:14  iter: 3439  total_loss: 0.527  loss_cls: 0.086  loss_box_reg: 0.213  loss_mask: 0.174  loss_rpn_cls: 0.007  loss_rpn_loc: 0.034  time: 0.9530  data_time: 0.0109  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:34:10 d2.utils.events]: [0m eta: 0:24:54  iter: 3459  total_loss: 0.578  loss_cls: 0.112  loss_box_reg: 0.220  loss_mask: 0.178  loss_rpn_cls: 0.010  loss_rpn_loc: 0.038  time: 0.9530  data_time: 0.0106  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:34:29 d2.utils.events]: [0m eta: 0:24:34  iter: 3479  total_loss: 0.583  loss_cls: 0.114  loss_box_reg: 0.226  loss_mask: 0.170  loss_rpn_cls: 0.012  loss_rpn_loc: 0.033  time: 0.9530  data_time: 0.0095  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:34:48 d2.utils.events]: [0m eta: 0:24:14  iter: 3499  total_loss: 0.608  loss_cls: 0.102  loss_box_reg: 0.243  loss_mask: 0.194  loss_rpn_cls: 0.009  loss_rpn_loc: 0.043  time: 0.9530  data_time: 0.0098  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:35:07 d2.utils.events]: [0m eta: 0:23:55  iter: 3519  total_loss: 0.516  loss_cls: 0.094  loss_box_reg: 0.214  loss_mask: 0.165  loss_rpn_cls: 0.011  loss_rpn_loc: 0.037  time: 0.9530  data_time: 0.0106  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:35:26 d2.utils.events]: [0m eta: 0:23:35  iter: 3539  total_loss: 0.580  loss_cls: 0.103  loss_box_reg: 0.228  loss_mask: 0.176  loss_rpn_cls: 0.008  loss_rpn_loc: 0.041  time: 0.9530  data_time: 0.0103  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:35:45 d2.utils.events]: [0m eta: 0:23:16  iter: 3559  total_loss: 0.540  loss_cls: 0.095  loss_box_reg: 0.209  loss_mask: 0.166  loss_rpn_cls: 0.014  loss_rpn_loc: 0.035  time: 0.9530  data_time: 0.0103  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:36:04 d2.utils.events]: [0m eta: 0:22:57  iter: 3579  total_loss: 0.488  loss_cls: 0.090  loss_box_reg: 0.210  loss_mask: 0.150  loss_rpn_cls: 0.008  loss_rpn_loc: 0.034  time: 0.9531  data_time: 0.0105  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:36:23 d2.utils.events]: [0m eta: 0:22:38  iter: 3599  total_loss: 0.555  loss_cls: 0.105  loss_box_reg: 0.221  loss_mask: 0.176  loss_rpn_cls: 0.008  loss_rpn_loc: 0.040  time: 0.9531  data_time: 0.0107  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:36:43 d2.utils.events]: [0m eta: 0:22:19  iter: 3619  total_loss: 0.590  loss_cls: 0.111  loss_box_reg: 0.223  loss_mask: 0.181  loss_rpn_cls: 0.007  loss_rpn_loc: 0.043  time: 0.9531  data_time: 0.0100  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:37:01 d2.utils.events]: [0m eta: 0:21:59  iter: 3639  total_loss: 0.495  loss_cls: 0.091  loss_box_reg: 0.208  loss_mask: 0.162  loss_rpn_cls: 0.008  loss_rpn_loc: 0.040  time: 0.9530  data_time: 0.0107  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:37:21 d2.utils.events]: [0m eta: 0:21:40  iter: 3659  total_loss: 0.595  loss_cls: 0.121  loss_box_reg: 0.223  loss_mask: 0.178  loss_rpn_cls: 0.010  loss_rpn_loc: 0.033  time: 0.9531  data_time: 0.0105  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:37:40 d2.utils.events]: [0m eta: 0:21:21  iter: 3679  total_loss: 0.564  loss_cls: 0.111  loss_box_reg: 0.221  loss_mask: 0.168  loss_rpn_cls: 0.009  loss_rpn_loc: 0.035  time: 0.9531  data_time: 0.0105  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:37:59 d2.utils.events]: [0m eta: 0:21:02  iter: 3699  total_loss: 0.565  loss_cls: 0.116  loss_box_reg: 0.231  loss_mask: 0.187  loss_rpn_cls: 0.010  loss_rpn_loc: 0.047  time: 0.9532  data_time: 0.0105  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:38:18 d2.utils.events]: [0m eta: 0:20:43  iter: 3719  total_loss: 0.549  loss_cls: 0.100  loss_box_reg: 0.222  loss_mask: 0.182  loss_rpn_cls: 0.006  loss_rpn_loc: 0.043  time: 0.9532  data_time: 0.0102  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:38:38 d2.utils.events]: [0m eta: 0:20:23  iter: 3739  total_loss: 0.554  loss_cls: 0.088  loss_box_reg: 0.216  loss_mask: 0.190  loss_rpn_cls: 0.009  loss_rpn_loc: 0.039  time: 0.9532  data_time: 0.0101  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:38:56 d2.utils.events]: [0m eta: 0:20:03  iter: 3759  total_loss: 0.542  loss_cls: 0.087  loss_box_reg: 0.232  loss_mask: 0.177  loss_rpn_cls: 0.006  loss_rpn_loc: 0.037  time: 0.9531  data_time: 0.0108  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:39:15 d2.utils.events]: [0m eta: 0:19:44  iter: 3779  total_loss: 0.548  loss_cls: 0.102  loss_box_reg: 0.211  loss_mask: 0.174  loss_rpn_cls: 0.008  loss_rpn_loc: 0.040  time: 0.9531  data_time: 0.0094  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:39:35 d2.utils.events]: [0m eta: 0:19:24  iter: 3799  total_loss: 0.618  loss_cls: 0.101  loss_box_reg: 0.242  loss_mask: 0.192  loss_rpn_cls: 0.007  loss_rpn_loc: 0.044  time: 0.9532  data_time: 0.0116  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:39:54 d2.utils.events]: [0m eta: 0:19:06  iter: 3819  total_loss: 0.573  loss_cls: 0.112  loss_box_reg: 0.239  loss_mask: 0.185  loss_rpn_cls: 0.012  loss_rpn_loc: 0.043  time: 0.9532  data_time: 0.0101  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:40:13 d2.utils.events]: [0m eta: 0:18:47  iter: 3839  total_loss: 0.531  loss_cls: 0.095  loss_box_reg: 0.227  loss_mask: 0.168  loss_rpn_cls: 0.006  loss_rpn_loc: 0.041  time: 0.9533  data_time: 0.0103  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:40:32 d2.utils.events]: [0m eta: 0:18:28  iter: 3859  total_loss: 0.541  loss_cls: 0.098  loss_box_reg: 0.204  loss_mask: 0.178  loss_rpn_cls: 0.006  loss_rpn_loc: 0.045  time: 0.9533  data_time: 0.0098  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:40:51 d2.utils.events]: [0m eta: 0:18:08  iter: 3879  total_loss: 0.560  loss_cls: 0.099  loss_box_reg: 0.228  loss_mask: 0.185  loss_rpn_cls: 0.009  loss_rpn_loc: 0.046  time: 0.9532  data_time: 0.0092  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:41:10 d2.utils.events]: [0m eta: 0:17:49  iter: 3899  total_loss: 0.621  loss_cls: 0.128  loss_box_reg: 0.233  loss_mask: 0.189  loss_rpn_cls: 0.008  loss_rpn_loc: 0.053  time: 0.9533  data_time: 0.0097  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:41:30 d2.utils.events]: [0m eta: 0:17:30  iter: 3919  total_loss: 0.546  loss_cls: 0.092  loss_box_reg: 0.214  loss_mask: 0.179  loss_rpn_cls: 0.009  loss_rpn_loc: 0.035  time: 0.9533  data_time: 0.0113  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:41:49 d2.utils.events]: [0m eta: 0:17:12  iter: 3939  total_loss: 0.494  loss_cls: 0.075  loss_box_reg: 0.196  loss_mask: 0.163  loss_rpn_cls: 0.008  loss_rpn_loc: 0.041  time: 0.9534  data_time: 0.0103  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:42:08 d2.utils.events]: [0m eta: 0:16:53  iter: 3959  total_loss: 0.519  loss_cls: 0.087  loss_box_reg: 0.204  loss_mask: 0.170  loss_rpn_cls: 0.008  loss_rpn_loc: 0.042  time: 0.9535  data_time: 0.0100  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:42:28 d2.utils.events]: [0m eta: 0:16:33  iter: 3979  total_loss: 0.566  loss_cls: 0.101  loss_box_reg: 0.225  loss_mask: 0.177  loss_rpn_cls: 0.009  loss_rpn_loc: 0.046  time: 0.9535  data_time: 0.0099  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:42:47 d2.utils.events]: [0m eta: 0:16:14  iter: 3999  total_loss: 0.519  loss_cls: 0.098  loss_box_reg: 0.201  loss_mask: 0.168  loss_rpn_cls: 0.007  loss_rpn_loc: 0.033  time: 0.9535  data_time: 0.0098  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:43:06 d2.utils.events]: [0m eta: 0:15:54  iter: 4019  total_loss: 0.554  loss_cls: 0.107  loss_box_reg: 0.223  loss_mask: 0.184  loss_rpn_cls: 0.007  loss_rpn_loc: 0.036  time: 0.9535  data_time: 0.0092  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:43:25 d2.utils.events]: [0m eta: 0:15:34  iter: 4039  total_loss: 0.556  loss_cls: 0.107  loss_box_reg: 0.214  loss_mask: 0.183  loss_rpn_cls: 0.006  loss_rpn_loc: 0.043  time: 0.9535  data_time: 0.0102  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:43:44 d2.utils.events]: [0m eta: 0:15:15  iter: 4059  total_loss: 0.563  loss_cls: 0.101  loss_box_reg: 0.230  loss_mask: 0.175  loss_rpn_cls: 0.007  loss_rpn_loc: 0.035  time: 0.9535  data_time: 0.0108  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:44:03 d2.utils.events]: [0m eta: 0:14:56  iter: 4079  total_loss: 0.511  loss_cls: 0.108  loss_box_reg: 0.203  loss_mask: 0.163  loss_rpn_cls: 0.007  loss_rpn_loc: 0.027  time: 0.9535  data_time: 0.0095  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:44:22 d2.utils.events]: [0m eta: 0:14:36  iter: 4099  total_loss: 0.611  loss_cls: 0.114  loss_box_reg: 0.253  loss_mask: 0.192  loss_rpn_cls: 0.005  loss_rpn_loc: 0.040  time: 0.9535  data_time: 0.0089  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:44:42 d2.utils.events]: [0m eta: 0:14:16  iter: 4119  total_loss: 0.518  loss_cls: 0.097  loss_box_reg: 0.210  loss_mask: 0.172  loss_rpn_cls: 0.006  loss_rpn_loc: 0.034  time: 0.9536  data_time: 0.0086  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:45:01 d2.utils.events]: [0m eta: 0:13:57  iter: 4139  total_loss: 0.516  loss_cls: 0.088  loss_box_reg: 0.208  loss_mask: 0.159  loss_rpn_cls: 0.007  loss_rpn_loc: 0.044  time: 0.9536  data_time: 0.0095  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:45:20 d2.utils.events]: [0m eta: 0:13:38  iter: 4159  total_loss: 0.550  loss_cls: 0.089  loss_box_reg: 0.222  loss_mask: 0.180  loss_rpn_cls: 0.009  loss_rpn_loc: 0.041  time: 0.9536  data_time: 0.0096  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:45:39 d2.utils.events]: [0m eta: 0:13:18  iter: 4179  total_loss: 0.523  loss_cls: 0.109  loss_box_reg: 0.219  loss_mask: 0.167  loss_rpn_cls: 0.004  loss_rpn_loc: 0.040  time: 0.9535  data_time: 0.0103  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:45:58 d2.utils.events]: [0m eta: 0:12:59  iter: 4199  total_loss: 0.517  loss_cls: 0.092  loss_box_reg: 0.198  loss_mask: 0.164  loss_rpn_cls: 0.009  loss_rpn_loc: 0.033  time: 0.9536  data_time: 0.0103  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:46:16 d2.utils.events]: [0m eta: 0:12:39  iter: 4219  total_loss: 0.561  loss_cls: 0.103  loss_box_reg: 0.213  loss_mask: 0.184  loss_rpn_cls: 0.007  loss_rpn_loc: 0.038  time: 0.9534  data_time: 0.0098  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:46:35 d2.utils.events]: [0m eta: 0:12:19  iter: 4239  total_loss: 0.579  loss_cls: 0.093  loss_box_reg: 0.236  loss_mask: 0.184  loss_rpn_cls: 0.009  loss_rpn_loc: 0.032  time: 0.9533  data_time: 0.0093  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:46:54 d2.utils.events]: [0m eta: 0:12:00  iter: 4259  total_loss: 0.568  loss_cls: 0.097  loss_box_reg: 0.230  loss_mask: 0.180  loss_rpn_cls: 0.009  loss_rpn_loc: 0.045  time: 0.9533  data_time: 0.0100  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:47:13 d2.utils.events]: [0m eta: 0:11:41  iter: 4279  total_loss: 0.519  loss_cls: 0.104  loss_box_reg: 0.223  loss_mask: 0.186  loss_rpn_cls: 0.005  loss_rpn_loc: 0.029  time: 0.9532  data_time: 0.0096  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:47:32 d2.utils.events]: [0m eta: 0:11:21  iter: 4299  total_loss: 0.497  loss_cls: 0.075  loss_box_reg: 0.207  loss_mask: 0.168  loss_rpn_cls: 0.008  loss_rpn_loc: 0.033  time: 0.9531  data_time: 0.0103  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:47:51 d2.utils.events]: [0m eta: 0:11:01  iter: 4319  total_loss: 0.553  loss_cls: 0.091  loss_box_reg: 0.213  loss_mask: 0.175  loss_rpn_cls: 0.007  loss_rpn_loc: 0.038  time: 0.9531  data_time: 0.0090  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:48:10 d2.utils.events]: [0m eta: 0:10:41  iter: 4339  total_loss: 0.524  loss_cls: 0.094  loss_box_reg: 0.226  loss_mask: 0.172  loss_rpn_cls: 0.007  loss_rpn_loc: 0.034  time: 0.9531  data_time: 0.0099  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:48:28 d2.utils.events]: [0m eta: 0:10:21  iter: 4359  total_loss: 0.591  loss_cls: 0.111  loss_box_reg: 0.222  loss_mask: 0.188  loss_rpn_cls: 0.009  loss_rpn_loc: 0.045  time: 0.9531  data_time: 0.0095  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:48:47 d2.utils.events]: [0m eta: 0:10:01  iter: 4379  total_loss: 0.503  loss_cls: 0.079  loss_box_reg: 0.205  loss_mask: 0.159  loss_rpn_cls: 0.006  loss_rpn_loc: 0.036  time: 0.9530  data_time: 0.0103  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:49:07 d2.utils.events]: [0m eta: 0:09:42  iter: 4399  total_loss: 0.563  loss_cls: 0.106  loss_box_reg: 0.216  loss_mask: 0.174  loss_rpn_cls: 0.011  loss_rpn_loc: 0.045  time: 0.9530  data_time: 0.0104  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:49:25 d2.utils.events]: [0m eta: 0:09:22  iter: 4419  total_loss: 0.553  loss_cls: 0.100  loss_box_reg: 0.204  loss_mask: 0.166  loss_rpn_cls: 0.007  loss_rpn_loc: 0.041  time: 0.9530  data_time: 0.0101  lr: 0.000250  max_mem: 6933M
[32m[03/25 19:49:45 d2.utils.events]: [0m eta: 0:09:03  iter: 4439  total_loss: 0.536  loss_cls: 0.088  loss_box_reg: 0.207  loss_mask: 0.170  loss_rpn_cls: 0.007  loss_rpn_loc: 0.033  time: 0.9530  data_time: 0.0103  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:50:04 d2.utils.events]: [0m eta: 0:08:44  iter: 4459  total_loss: 0.523  loss_cls: 0.108  loss_box_reg: 0.216  loss_mask: 0.158  loss_rpn_cls: 0.005  loss_rpn_loc: 0.038  time: 0.9531  data_time: 0.0102  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:50:23 d2.utils.events]: [0m eta: 0:08:24  iter: 4479  total_loss: 0.513  loss_cls: 0.097  loss_box_reg: 0.205  loss_mask: 0.158  loss_rpn_cls: 0.007  loss_rpn_loc: 0.042  time: 0.9530  data_time: 0.0103  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:50:41 d2.utils.events]: [0m eta: 0:08:04  iter: 4499  total_loss: 0.494  loss_cls: 0.092  loss_box_reg: 0.206  loss_mask: 0.169  loss_rpn_cls: 0.006  loss_rpn_loc: 0.031  time: 0.9529  data_time: 0.0097  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:51:00 d2.utils.events]: [0m eta: 0:07:44  iter: 4519  total_loss: 0.601  loss_cls: 0.103  loss_box_reg: 0.245  loss_mask: 0.184  loss_rpn_cls: 0.004  loss_rpn_loc: 0.042  time: 0.9528  data_time: 0.0102  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:51:19 d2.utils.events]: [0m eta: 0:07:25  iter: 4539  total_loss: 0.539  loss_cls: 0.090  loss_box_reg: 0.225  loss_mask: 0.174  loss_rpn_cls: 0.006  loss_rpn_loc: 0.035  time: 0.9529  data_time: 0.0112  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:51:38 d2.utils.events]: [0m eta: 0:07:06  iter: 4559  total_loss: 0.592  loss_cls: 0.117  loss_box_reg: 0.233  loss_mask: 0.186  loss_rpn_cls: 0.008  loss_rpn_loc: 0.041  time: 0.9528  data_time: 0.0109  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:51:57 d2.utils.events]: [0m eta: 0:06:46  iter: 4579  total_loss: 0.546  loss_cls: 0.094  loss_box_reg: 0.244  loss_mask: 0.157  loss_rpn_cls: 0.005  loss_rpn_loc: 0.040  time: 0.9529  data_time: 0.0105  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:52:16 d2.utils.events]: [0m eta: 0:06:27  iter: 4599  total_loss: 0.511  loss_cls: 0.084  loss_box_reg: 0.192  loss_mask: 0.164  loss_rpn_cls: 0.010  loss_rpn_loc: 0.044  time: 0.9529  data_time: 0.0094  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:52:35 d2.utils.events]: [0m eta: 0:06:08  iter: 4619  total_loss: 0.513  loss_cls: 0.087  loss_box_reg: 0.203  loss_mask: 0.167  loss_rpn_cls: 0.008  loss_rpn_loc: 0.033  time: 0.9528  data_time: 0.0110  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:52:55 d2.utils.events]: [0m eta: 0:05:48  iter: 4639  total_loss: 0.566  loss_cls: 0.094  loss_box_reg: 0.233  loss_mask: 0.172  loss_rpn_cls: 0.010  loss_rpn_loc: 0.041  time: 0.9529  data_time: 0.0125  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:53:14 d2.utils.events]: [0m eta: 0:05:29  iter: 4659  total_loss: 0.497  loss_cls: 0.082  loss_box_reg: 0.200  loss_mask: 0.164  loss_rpn_cls: 0.002  loss_rpn_loc: 0.038  time: 0.9529  data_time: 0.0097  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:53:32 d2.utils.events]: [0m eta: 0:05:09  iter: 4679  total_loss: 0.586  loss_cls: 0.103  loss_box_reg: 0.235  loss_mask: 0.169  loss_rpn_cls: 0.009  loss_rpn_loc: 0.041  time: 0.9527  data_time: 0.0119  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:53:51 d2.utils.events]: [0m eta: 0:04:50  iter: 4699  total_loss: 0.546  loss_cls: 0.090  loss_box_reg: 0.234  loss_mask: 0.175  loss_rpn_cls: 0.008  loss_rpn_loc: 0.029  time: 0.9527  data_time: 0.0095  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:54:10 d2.utils.events]: [0m eta: 0:04:31  iter: 4719  total_loss: 0.500  loss_cls: 0.088  loss_box_reg: 0.188  loss_mask: 0.174  loss_rpn_cls: 0.007  loss_rpn_loc: 0.042  time: 0.9525  data_time: 0.0105  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:54:29 d2.utils.events]: [0m eta: 0:04:11  iter: 4739  total_loss: 0.487  loss_cls: 0.090  loss_box_reg: 0.196  loss_mask: 0.173  loss_rpn_cls: 0.005  loss_rpn_loc: 0.035  time: 0.9525  data_time: 0.0096  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:54:47 d2.utils.events]: [0m eta: 0:03:52  iter: 4759  total_loss: 0.508  loss_cls: 0.085  loss_box_reg: 0.199  loss_mask: 0.177  loss_rpn_cls: 0.008  loss_rpn_loc: 0.038  time: 0.9525  data_time: 0.0106  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:55:06 d2.utils.events]: [0m eta: 0:03:33  iter: 4779  total_loss: 0.509  loss_cls: 0.091  loss_box_reg: 0.207  loss_mask: 0.170  loss_rpn_cls: 0.007  loss_rpn_loc: 0.045  time: 0.9525  data_time: 0.0109  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:55:25 d2.utils.events]: [0m eta: 0:03:13  iter: 4799  total_loss: 0.462  loss_cls: 0.078  loss_box_reg: 0.190  loss_mask: 0.157  loss_rpn_cls: 0.006  loss_rpn_loc: 0.033  time: 0.9524  data_time: 0.0098  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:55:44 d2.utils.events]: [0m eta: 0:02:54  iter: 4819  total_loss: 0.469  loss_cls: 0.080  loss_box_reg: 0.183  loss_mask: 0.145  loss_rpn_cls: 0.009  loss_rpn_loc: 0.033  time: 0.9523  data_time: 0.0104  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:56:03 d2.utils.events]: [0m eta: 0:02:35  iter: 4839  total_loss: 0.525  loss_cls: 0.097  loss_box_reg: 0.207  loss_mask: 0.164  loss_rpn_cls: 0.005  loss_rpn_loc: 0.037  time: 0.9523  data_time: 0.0101  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:56:22 d2.utils.events]: [0m eta: 0:02:15  iter: 4859  total_loss: 0.551  loss_cls: 0.097  loss_box_reg: 0.232  loss_mask: 0.181  loss_rpn_cls: 0.006  loss_rpn_loc: 0.033  time: 0.9523  data_time: 0.0106  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:56:40 d2.utils.events]: [0m eta: 0:01:56  iter: 4879  total_loss: 0.572  loss_cls: 0.099  loss_box_reg: 0.228  loss_mask: 0.169  loss_rpn_cls: 0.007  loss_rpn_loc: 0.038  time: 0.9522  data_time: 0.0098  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:57:00 d2.utils.events]: [0m eta: 0:01:37  iter: 4899  total_loss: 0.533  loss_cls: 0.087  loss_box_reg: 0.213  loss_mask: 0.167  loss_rpn_cls: 0.007  loss_rpn_loc: 0.037  time: 0.9522  data_time: 0.0104  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:57:18 d2.utils.events]: [0m eta: 0:01:17  iter: 4919  total_loss: 0.552  loss_cls: 0.099  loss_box_reg: 0.222  loss_mask: 0.170  loss_rpn_cls: 0.008  loss_rpn_loc: 0.041  time: 0.9521  data_time: 0.0102  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:57:36 d2.utils.events]: [0m eta: 0:00:58  iter: 4939  total_loss: 0.546  loss_cls: 0.086  loss_box_reg: 0.203  loss_mask: 0.174  loss_rpn_cls: 0.007  loss_rpn_loc: 0.034  time: 0.9520  data_time: 0.0120  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:57:56 d2.utils.events]: [0m eta: 0:00:39  iter: 4959  total_loss: 0.588  loss_cls: 0.113  loss_box_reg: 0.232  loss_mask: 0.193  loss_rpn_cls: 0.005  loss_rpn_loc: 0.044  time: 0.9520  data_time: 0.0115  lr: 0.000250  max_mem: 6934M
[32m[03/25 19:58:14 d2.utils.events]: [0m eta: 0:00:20  iter: 4979  total_loss: 0.537  loss_cls: 0.101  loss_box_reg: 0.200  loss_mask: 0.167  loss_rpn_cls: 0.010  loss_rpn_loc: 0.041  time: 0.9519  data_time: 0.0102  lr: 0.000250  max_mem: 6934M
/home/grupo08/datasets/KITTI_MOTS/instances_txt/
.png
Loading sequence 0002
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0010
Loading sequence 0013
Loading sequence 0014
Loading sequence 0016
Loading sequence 0018
0002
0006
0007
0008
0010
0013
0014
0016
0018
Loaded 2920 images!
[32m[03/25 20:00:13 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    None    | 0            |    Car     | 8029         | Pedestrian | 3347         |
|            |              |            |              |            |              |
|   total    | 11376        |            |              |            |              |[0m
[32m[03/25 20:00:13 d2.data.common]: [0mSerializing 2920 elements to byte tensors and concatenating them all ...
[32m[03/25 20:00:13 d2.data.common]: [0mSerialized dataset takes 7.44 MiB
[5m[31mWARNING[0m [32m[03/25 20:00:13 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[03/25 20:00:13 d2.utils.events]: [0m eta: 0:00:00  iter: 4999  total_loss: 0.569  loss_cls: 0.098  loss_box_reg: 0.222  loss_mask: 0.173  loss_rpn_cls: 0.009  loss_rpn_loc: 0.038  time: 0.9520  data_time: 0.0100  lr: 0.000250  max_mem: 6934M
[32m[03/25 20:00:13 d2.engine.hooks]: [0mOverall training speed: 4997 iterations in 1:19:18 (0.9522 s / it)
[32m[03/25 20:00:13 d2.engine.hooks]: [0mTotal training time: 1:21:03 (0:01:45 on hooks)
/home/grupo08/datasets/KITTI_MOTS/instances_txt/
.png
Loading sequence 0002
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0010
Loading sequence 0013
Loading sequence 0014
Loading sequence 0016
Loading sequence 0018
0002
0006
0007
0008
0010
0013
0014
0016
0018
Loaded 2920 images!
[5m[31mWARNING[0m [32m[03/25 20:01:37 d2.evaluation.coco_evaluation]: [0mjson_file was not found in MetaDataCatalog for 'KITTI_MOTS_val'. Trying to convert it to COCO format ...
[32m[03/25 20:01:37 d2.data.datasets.coco]: [0mConverting annotations of dataset 'KITTI_MOTS_val' to COCO format ...)
/home/grupo08/datasets/KITTI_MOTS/instances_txt/
.png
Loading sequence 0002
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0010
Loading sequence 0013
Loading sequence 0014
Loading sequence 0016
Loading sequence 0018
0002
0006
0007
0008
0010
0013
0014
0016
0018
Loaded 2920 images!
[32m[03/25 20:02:34 d2.data.datasets.coco]: [0mConverting dataset dicts into COCO format
[32m[03/25 20:02:38 d2.data.datasets.coco]: [0mConversion finished, num images: 2920, num annotations: 11376
[32m[03/25 20:02:38 d2.data.datasets.coco]: [0mCaching COCO format annotations at '../mask_rcnn_X_101_32x8d_FPN_3x/output/KITTI_MOTS_val_coco_format.json' ...
/home/grupo08/datasets/KITTI_MOTS/instances_txt/
.png
Loading sequence 0002
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0010
Loading sequence 0013
Loading sequence 0014
Loading sequence 0016
Loading sequence 0018
0002
0006
0007
0008
0010
0013
0014
0016
0018
Loaded 2920 images!
[32m[03/25 20:03:43 d2.data.common]: [0mSerializing 2920 elements to byte tensors and concatenating them all ...
[32m[03/25 20:03:43 d2.data.common]: [0mSerialized dataset takes 7.44 MiB
[32m[03/25 20:03:43 d2.evaluation.evaluator]: [0mStart inference on 2920 images
[32m[03/25 20:03:45 d2.evaluation.evaluator]: [0mInference done 11/2920. 0.1101 s / img. ETA=0:05:27
[32m[03/25 20:03:50 d2.evaluation.evaluator]: [0mInference done 56/2920. 0.1091 s / img. ETA=0:05:19
[32m[03/25 20:03:55 d2.evaluation.evaluator]: [0mInference done 101/2920. 0.1096 s / img. ETA=0:05:16
[32m[03/25 20:04:00 d2.evaluation.evaluator]: [0mInference done 146/2920. 0.1097 s / img. ETA=0:05:11
[32m[03/25 20:04:05 d2.evaluation.evaluator]: [0mInference done 191/2920. 0.1096 s / img. ETA=0:05:05
[32m[03/25 20:04:10 d2.evaluation.evaluator]: [0mInference done 236/2920. 0.1096 s / img. ETA=0:05:00
[32m[03/25 20:04:15 d2.evaluation.evaluator]: [0mInference done 282/2920. 0.1095 s / img. ETA=0:04:54
[32m[03/25 20:04:20 d2.evaluation.evaluator]: [0mInference done 327/2920. 0.1095 s / img. ETA=0:04:49
[32m[03/25 20:04:25 d2.evaluation.evaluator]: [0mInference done 372/2920. 0.1096 s / img. ETA=0:04:45
[32m[03/25 20:04:30 d2.evaluation.evaluator]: [0mInference done 417/2920. 0.1096 s / img. ETA=0:04:39
[32m[03/25 20:04:35 d2.evaluation.evaluator]: [0mInference done 462/2920. 0.1097 s / img. ETA=0:04:34
[32m[03/25 20:04:40 d2.evaluation.evaluator]: [0mInference done 507/2920. 0.1097 s / img. ETA=0:04:29
[32m[03/25 20:04:45 d2.evaluation.evaluator]: [0mInference done 552/2920. 0.1097 s / img. ETA=0:04:24
[32m[03/25 20:04:50 d2.evaluation.evaluator]: [0mInference done 597/2920. 0.1097 s / img. ETA=0:04:19
[32m[03/25 20:04:55 d2.evaluation.evaluator]: [0mInference done 642/2920. 0.1097 s / img. ETA=0:04:14
[32m[03/25 20:05:00 d2.evaluation.evaluator]: [0mInference done 687/2920. 0.1098 s / img. ETA=0:04:10
[32m[03/25 20:05:06 d2.evaluation.evaluator]: [0mInference done 732/2920. 0.1098 s / img. ETA=0:04:05
[32m[03/25 20:05:11 d2.evaluation.evaluator]: [0mInference done 777/2920. 0.1099 s / img. ETA=0:04:00
[32m[03/25 20:05:16 d2.evaluation.evaluator]: [0mInference done 822/2920. 0.1099 s / img. ETA=0:03:55
[32m[03/25 20:05:21 d2.evaluation.evaluator]: [0mInference done 867/2920. 0.1099 s / img. ETA=0:03:50
[32m[03/25 20:05:26 d2.evaluation.evaluator]: [0mInference done 912/2920. 0.1099 s / img. ETA=0:03:45
[32m[03/25 20:05:31 d2.evaluation.evaluator]: [0mInference done 957/2920. 0.1099 s / img. ETA=0:03:39
[32m[03/25 20:05:36 d2.evaluation.evaluator]: [0mInference done 1002/2920. 0.1099 s / img. ETA=0:03:34
[32m[03/25 20:05:41 d2.evaluation.evaluator]: [0mInference done 1047/2920. 0.1100 s / img. ETA=0:03:29
[32m[03/25 20:05:46 d2.evaluation.evaluator]: [0mInference done 1092/2920. 0.1100 s / img. ETA=0:03:24
[32m[03/25 20:05:51 d2.evaluation.evaluator]: [0mInference done 1137/2920. 0.1100 s / img. ETA=0:03:19
[32m[03/25 20:05:56 d2.evaluation.evaluator]: [0mInference done 1182/2920. 0.1100 s / img. ETA=0:03:14
[32m[03/25 20:06:01 d2.evaluation.evaluator]: [0mInference done 1227/2920. 0.1100 s / img. ETA=0:03:09
[32m[03/25 20:06:06 d2.evaluation.evaluator]: [0mInference done 1271/2920. 0.1101 s / img. ETA=0:03:04
[32m[03/25 20:06:11 d2.evaluation.evaluator]: [0mInference done 1315/2920. 0.1101 s / img. ETA=0:03:00
[32m[03/25 20:06:16 d2.evaluation.evaluator]: [0mInference done 1359/2920. 0.1102 s / img. ETA=0:02:55
[32m[03/25 20:06:21 d2.evaluation.evaluator]: [0mInference done 1403/2920. 0.1102 s / img. ETA=0:02:50
[32m[03/25 20:06:26 d2.evaluation.evaluator]: [0mInference done 1447/2920. 0.1103 s / img. ETA=0:02:45
[32m[03/25 20:06:31 d2.evaluation.evaluator]: [0mInference done 1491/2920. 0.1104 s / img. ETA=0:02:40
[32m[03/25 20:06:37 d2.evaluation.evaluator]: [0mInference done 1535/2920. 0.1104 s / img. ETA=0:02:36
[32m[03/25 20:06:42 d2.evaluation.evaluator]: [0mInference done 1579/2920. 0.1104 s / img. ETA=0:02:31
[32m[03/25 20:06:47 d2.evaluation.evaluator]: [0mInference done 1623/2920. 0.1104 s / img. ETA=0:02:26
[32m[03/25 20:06:52 d2.evaluation.evaluator]: [0mInference done 1668/2920. 0.1105 s / img. ETA=0:02:21
[32m[03/25 20:06:57 d2.evaluation.evaluator]: [0mInference done 1713/2920. 0.1105 s / img. ETA=0:02:16
[32m[03/25 20:07:02 d2.evaluation.evaluator]: [0mInference done 1758/2920. 0.1104 s / img. ETA=0:02:11
[32m[03/25 20:07:07 d2.evaluation.evaluator]: [0mInference done 1803/2920. 0.1104 s / img. ETA=0:02:05
[32m[03/25 20:07:12 d2.evaluation.evaluator]: [0mInference done 1848/2920. 0.1105 s / img. ETA=0:02:00
[32m[03/25 20:07:17 d2.evaluation.evaluator]: [0mInference done 1893/2920. 0.1105 s / img. ETA=0:01:55
[32m[03/25 20:07:22 d2.evaluation.evaluator]: [0mInference done 1937/2920. 0.1105 s / img. ETA=0:01:50
[32m[03/25 20:07:27 d2.evaluation.evaluator]: [0mInference done 1980/2920. 0.1105 s / img. ETA=0:01:46
[32m[03/25 20:07:32 d2.evaluation.evaluator]: [0mInference done 2023/2920. 0.1106 s / img. ETA=0:01:41
[32m[03/25 20:07:37 d2.evaluation.evaluator]: [0mInference done 2066/2920. 0.1106 s / img. ETA=0:01:36
[32m[03/25 20:07:42 d2.evaluation.evaluator]: [0mInference done 2109/2920. 0.1107 s / img. ETA=0:01:31
[32m[03/25 20:07:47 d2.evaluation.evaluator]: [0mInference done 2152/2920. 0.1107 s / img. ETA=0:01:27
[32m[03/25 20:07:52 d2.evaluation.evaluator]: [0mInference done 2195/2920. 0.1108 s / img. ETA=0:01:22
[32m[03/25 20:07:58 d2.evaluation.evaluator]: [0mInference done 2238/2920. 0.1108 s / img. ETA=0:01:17
[32m[03/25 20:08:03 d2.evaluation.evaluator]: [0mInference done 2281/2920. 0.1108 s / img. ETA=0:01:12
[32m[03/25 20:08:08 d2.evaluation.evaluator]: [0mInference done 2325/2920. 0.1109 s / img. ETA=0:01:07
[32m[03/25 20:08:13 d2.evaluation.evaluator]: [0mInference done 2369/2920. 0.1109 s / img. ETA=0:01:02
[32m[03/25 20:08:18 d2.evaluation.evaluator]: [0mInference done 2411/2920. 0.1109 s / img. ETA=0:00:57
[32m[03/25 20:08:23 d2.evaluation.evaluator]: [0mInference done 2453/2920. 0.1110 s / img. ETA=0:00:53
[32m[03/25 20:08:28 d2.evaluation.evaluator]: [0mInference done 2495/2920. 0.1110 s / img. ETA=0:00:48
[32m[03/25 20:08:33 d2.evaluation.evaluator]: [0mInference done 2537/2920. 0.1111 s / img. ETA=0:00:43
[32m[03/25 20:08:38 d2.evaluation.evaluator]: [0mInference done 2579/2920. 0.1112 s / img. ETA=0:00:38
[32m[03/25 20:08:43 d2.evaluation.evaluator]: [0mInference done 2623/2920. 0.1112 s / img. ETA=0:00:33
[32m[03/25 20:08:48 d2.evaluation.evaluator]: [0mInference done 2667/2920. 0.1112 s / img. ETA=0:00:28
[32m[03/25 20:08:53 d2.evaluation.evaluator]: [0mInference done 2711/2920. 0.1112 s / img. ETA=0:00:23
[32m[03/25 20:08:58 d2.evaluation.evaluator]: [0mInference done 2755/2920. 0.1112 s / img. ETA=0:00:18
[32m[03/25 20:09:03 d2.evaluation.evaluator]: [0mInference done 2799/2920. 0.1112 s / img. ETA=0:00:13
[32m[03/25 20:09:08 d2.evaluation.evaluator]: [0mInference done 2843/2920. 0.1112 s / img. ETA=0:00:08
[32m[03/25 20:09:14 d2.evaluation.evaluator]: [0mInference done 2887/2920. 0.1112 s / img. ETA=0:00:03
[32m[03/25 20:09:17 d2.evaluation.evaluator]: [0mTotal inference time: 0:05:33.252476 (0.114323 s / img per device, on 1 devices)
[32m[03/25 20:09:17 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:05:24 (0.111241 s / img per device, on 1 devices)
[32m[03/25 20:09:17 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[03/25 20:09:17 d2.evaluation.coco_evaluation]: [0mSaving results to ../mask_rcnn_X_101_32x8d_FPN_3x/output/coco_instances_results.json
[32m[03/25 20:09:18 d2.evaluation.coco_evaluation]: [0mEvaluating predictions ...
Loading and preparing results...
DONE (t=0.01s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=17.95s).
Accumulating evaluation results...
DONE (t=2.31s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.280
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.401
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.328
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.202
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.346
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.336
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.084
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.308
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.316
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.240
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.379
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.449
[32m[03/25 20:09:38 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 28.017 | 40.062 | 32.838 | 20.202 | 34.603 | 33.564 |
[32m[03/25 20:09:38 d2.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category   | AP   | category   | AP    | category   | AP     |
|:-----------|:-----|:-----------|:------|:-----------|:-------|
| None       | nan  | Car        | 0.000 | Pedestrian | 56.034 |
Loading and preparing results...
DONE (t=0.09s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *segm*
DONE (t=8.02s).
Accumulating evaluation results...
DONE (t=0.47s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.218
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.379
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.232
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.116
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.286
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.350
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.064
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.250
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.257
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.181
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.317
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.385
[32m[03/25 20:09:47 d2.evaluation.coco_evaluation]: [0mEvaluation results for segm: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 21.802 | 37.913 | 23.196 | 11.550 | 28.569 | 34.999 |
[32m[03/25 20:09:47 d2.evaluation.coco_evaluation]: [0mPer-category segm AP: 
| category   | AP   | category   | AP    | category   | AP     |
|:-----------|:-----|:-----------|:------|:-----------|:-------|
| None       | nan  | Car        | 0.000 | Pedestrian | 43.604 |
