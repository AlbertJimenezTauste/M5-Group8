Metadata(name='KITTI_MOTS_train', thing_classes=['None', 'Car', 'Pedestrian'])
Loading sequence 0000
Loading sequence 0001
Loading sequence 0003
Loading sequence 0004
Loading sequence 0005
Loading sequence 0009
Loading sequence 0011
Loading sequence 0012
Loading sequence 0015
Loading sequence 0017
Loading sequence 0019
Loading sequence 0020
0000
0001
0003
0004
0005
0009
0011
0012
0015
0017
0019
0020
Loaded 5007 images!
[32m[03/21 12:16:29 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=4, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=12, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask_fcn2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask_fcn3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask_fcn4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (predictor): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
Loading sequence 0000
Loading sequence 0001
Loading sequence 0003
Loading sequence 0004
Loading sequence 0005
Loading sequence 0009
Loading sequence 0011
Loading sequence 0012
Loading sequence 0015
Loading sequence 0017
Loading sequence 0019
Loading sequence 0020
0000
0001
0003
0004
0005
0009
0011
0012
0015
0017
0019
0020
Loaded 5007 images!
[32m[03/21 12:18:45 d2.data.build]: [0mRemoved 487 images with no usable annotations. 4520 images left.
[32m[03/21 12:18:45 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    None    | 0            |    Car     | 18830        | Pedestrian | 8067         |
|            |              |            |              |            |              |
|   total    | 26897        |            |              |            |              |[0m
[32m[03/21 12:18:45 d2.data.common]: [0mSerializing 4520 elements to byte tensors and concatenating them all ...
[32m[03/21 12:18:46 d2.data.common]: [0mSerialized dataset takes 17.95 MiB
[32m[03/21 12:18:46 d2.data.detection_utils]: [0mTransformGens used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[03/21 12:18:46 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[03/21 12:18:54 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[03/21 12:19:07 d2.utils.events]: [0m eta: 0:51:46  iter: 19  total_loss: 3.104  loss_cls: 1.487  loss_box_reg: 0.812  loss_mask: 0.698  loss_rpn_cls: 0.070  loss_rpn_loc: 0.036  time: 0.6242  data_time: 0.0214  lr: 0.000005  max_mem: 4495M
[32m[03/21 12:19:20 d2.utils.events]: [0m eta: 0:51:30  iter: 39  total_loss: 2.865  loss_cls: 1.398  loss_box_reg: 0.691  loss_mask: 0.691  loss_rpn_cls: 0.072  loss_rpn_loc: 0.029  time: 0.6231  data_time: 0.0070  lr: 0.000010  max_mem: 4497M
[32m[03/21 12:19:32 d2.utils.events]: [0m eta: 0:51:18  iter: 59  total_loss: 2.800  loss_cls: 1.265  loss_box_reg: 0.732  loss_mask: 0.677  loss_rpn_cls: 0.043  loss_rpn_loc: 0.028  time: 0.6236  data_time: 0.0072  lr: 0.000015  max_mem: 4498M
[32m[03/21 12:19:45 d2.utils.events]: [0m eta: 0:51:19  iter: 79  total_loss: 2.609  loss_cls: 1.065  loss_box_reg: 0.780  loss_mask: 0.646  loss_rpn_cls: 0.049  loss_rpn_loc: 0.021  time: 0.6249  data_time: 0.0082  lr: 0.000020  max_mem: 4498M
[32m[03/21 12:19:57 d2.utils.events]: [0m eta: 0:51:06  iter: 99  total_loss: 2.264  loss_cls: 0.851  loss_box_reg: 0.671  loss_mask: 0.594  loss_rpn_cls: 0.034  loss_rpn_loc: 0.018  time: 0.6254  data_time: 0.0095  lr: 0.000025  max_mem: 4498M
[32m[03/21 12:20:10 d2.utils.events]: [0m eta: 0:50:54  iter: 119  total_loss: 2.073  loss_cls: 0.740  loss_box_reg: 0.685  loss_mask: 0.570  loss_rpn_cls: 0.046  loss_rpn_loc: 0.025  time: 0.6269  data_time: 0.0083  lr: 0.000030  max_mem: 4498M
[32m[03/21 12:20:23 d2.utils.events]: [0m eta: 0:50:45  iter: 139  total_loss: 1.927  loss_cls: 0.595  loss_box_reg: 0.735  loss_mask: 0.520  loss_rpn_cls: 0.025  loss_rpn_loc: 0.019  time: 0.6283  data_time: 0.0092  lr: 0.000035  max_mem: 4498M
[32m[03/21 12:20:35 d2.utils.events]: [0m eta: 0:50:39  iter: 159  total_loss: 1.888  loss_cls: 0.576  loss_box_reg: 0.742  loss_mask: 0.498  loss_rpn_cls: 0.049  loss_rpn_loc: 0.022  time: 0.6290  data_time: 0.0096  lr: 0.000040  max_mem: 4498M
[32m[03/21 12:20:48 d2.utils.events]: [0m eta: 0:50:31  iter: 179  total_loss: 1.735  loss_cls: 0.500  loss_box_reg: 0.717  loss_mask: 0.471  loss_rpn_cls: 0.045  loss_rpn_loc: 0.027  time: 0.6303  data_time: 0.0074  lr: 0.000045  max_mem: 4498M
[32m[03/21 12:21:01 d2.utils.events]: [0m eta: 0:50:23  iter: 199  total_loss: 1.731  loss_cls: 0.462  loss_box_reg: 0.668  loss_mask: 0.458  loss_rpn_cls: 0.061  loss_rpn_loc: 0.026  time: 0.6328  data_time: 0.0102  lr: 0.000050  max_mem: 4498M
[32m[03/21 12:21:14 d2.utils.events]: [0m eta: 0:50:20  iter: 219  total_loss: 1.697  loss_cls: 0.430  loss_box_reg: 0.776  loss_mask: 0.393  loss_rpn_cls: 0.037  loss_rpn_loc: 0.027  time: 0.6342  data_time: 0.0063  lr: 0.000055  max_mem: 4498M
[32m[03/21 12:21:28 d2.utils.events]: [0m eta: 0:50:12  iter: 239  total_loss: 1.621  loss_cls: 0.387  loss_box_reg: 0.756  loss_mask: 0.390  loss_rpn_cls: 0.031  loss_rpn_loc: 0.025  time: 0.6370  data_time: 0.0084  lr: 0.000060  max_mem: 4498M
[32m[03/21 12:21:41 d2.utils.events]: [0m eta: 0:50:07  iter: 259  total_loss: 1.500  loss_cls: 0.380  loss_box_reg: 0.715  loss_mask: 0.437  loss_rpn_cls: 0.039  loss_rpn_loc: 0.031  time: 0.6382  data_time: 0.0067  lr: 0.000065  max_mem: 4499M
[32m[03/21 12:21:54 d2.utils.events]: [0m eta: 0:49:57  iter: 279  total_loss: 1.346  loss_cls: 0.299  loss_box_reg: 0.637  loss_mask: 0.378  loss_rpn_cls: 0.038  loss_rpn_loc: 0.019  time: 0.6388  data_time: 0.0082  lr: 0.000070  max_mem: 4499M
[32m[03/21 12:22:07 d2.utils.events]: [0m eta: 0:49:48  iter: 299  total_loss: 1.332  loss_cls: 0.283  loss_box_reg: 0.592  loss_mask: 0.381  loss_rpn_cls: 0.034  loss_rpn_loc: 0.019  time: 0.6397  data_time: 0.0079  lr: 0.000075  max_mem: 4499M
[32m[03/21 12:22:20 d2.utils.events]: [0m eta: 0:49:39  iter: 319  total_loss: 1.334  loss_cls: 0.289  loss_box_reg: 0.639  loss_mask: 0.324  loss_rpn_cls: 0.022  loss_rpn_loc: 0.032  time: 0.6411  data_time: 0.0092  lr: 0.000080  max_mem: 4499M
[32m[03/21 12:22:33 d2.utils.events]: [0m eta: 0:49:28  iter: 339  total_loss: 1.229  loss_cls: 0.267  loss_box_reg: 0.518  loss_mask: 0.343  loss_rpn_cls: 0.045  loss_rpn_loc: 0.015  time: 0.6419  data_time: 0.0074  lr: 0.000085  max_mem: 4499M
[32m[03/21 12:22:46 d2.utils.events]: [0m eta: 0:49:15  iter: 359  total_loss: 1.089  loss_cls: 0.220  loss_box_reg: 0.535  loss_mask: 0.291  loss_rpn_cls: 0.025  loss_rpn_loc: 0.027  time: 0.6420  data_time: 0.0070  lr: 0.000090  max_mem: 4499M
[32m[03/21 12:22:59 d2.utils.events]: [0m eta: 0:49:04  iter: 379  total_loss: 1.084  loss_cls: 0.240  loss_box_reg: 0.524  loss_mask: 0.257  loss_rpn_cls: 0.022  loss_rpn_loc: 0.036  time: 0.6428  data_time: 0.0098  lr: 0.000095  max_mem: 4499M
[32m[03/21 12:23:12 d2.utils.events]: [0m eta: 0:48:56  iter: 399  total_loss: 1.052  loss_cls: 0.265  loss_box_reg: 0.440  loss_mask: 0.323  loss_rpn_cls: 0.027  loss_rpn_loc: 0.024  time: 0.6434  data_time: 0.0069  lr: 0.000100  max_mem: 4499M
[32m[03/21 12:23:26 d2.utils.events]: [0m eta: 0:48:45  iter: 419  total_loss: 0.983  loss_cls: 0.228  loss_box_reg: 0.436  loss_mask: 0.239  loss_rpn_cls: 0.021  loss_rpn_loc: 0.017  time: 0.6445  data_time: 0.0093  lr: 0.000105  max_mem: 4499M
[32m[03/21 12:23:39 d2.utils.events]: [0m eta: 0:48:33  iter: 439  total_loss: 0.915  loss_cls: 0.190  loss_box_reg: 0.363  loss_mask: 0.274  loss_rpn_cls: 0.018  loss_rpn_loc: 0.019  time: 0.6448  data_time: 0.0078  lr: 0.000110  max_mem: 4499M
[32m[03/21 12:23:52 d2.utils.events]: [0m eta: 0:48:23  iter: 459  total_loss: 0.814  loss_cls: 0.216  loss_box_reg: 0.351  loss_mask: 0.213  loss_rpn_cls: 0.022  loss_rpn_loc: 0.027  time: 0.6454  data_time: 0.0094  lr: 0.000115  max_mem: 4499M
[32m[03/21 12:24:05 d2.utils.events]: [0m eta: 0:48:12  iter: 479  total_loss: 0.706  loss_cls: 0.190  loss_box_reg: 0.297  loss_mask: 0.183  loss_rpn_cls: 0.016  loss_rpn_loc: 0.022  time: 0.6461  data_time: 0.0092  lr: 0.000120  max_mem: 4499M
[32m[03/21 12:24:18 d2.utils.events]: [0m eta: 0:48:02  iter: 499  total_loss: 0.828  loss_cls: 0.177  loss_box_reg: 0.305  loss_mask: 0.229  loss_rpn_cls: 0.030  loss_rpn_loc: 0.021  time: 0.6467  data_time: 0.0079  lr: 0.000125  max_mem: 4499M
[32m[03/21 12:24:31 d2.utils.events]: [0m eta: 0:47:50  iter: 519  total_loss: 0.861  loss_cls: 0.189  loss_box_reg: 0.322  loss_mask: 0.237  loss_rpn_cls: 0.030  loss_rpn_loc: 0.030  time: 0.6470  data_time: 0.0094  lr: 0.000130  max_mem: 4499M
[32m[03/21 12:24:45 d2.utils.events]: [0m eta: 0:47:40  iter: 539  total_loss: 0.706  loss_cls: 0.158  loss_box_reg: 0.298  loss_mask: 0.194  loss_rpn_cls: 0.017  loss_rpn_loc: 0.022  time: 0.6476  data_time: 0.0090  lr: 0.000135  max_mem: 4499M
[32m[03/21 12:24:58 d2.utils.events]: [0m eta: 0:47:28  iter: 559  total_loss: 0.738  loss_cls: 0.160  loss_box_reg: 0.282  loss_mask: 0.199  loss_rpn_cls: 0.026  loss_rpn_loc: 0.028  time: 0.6477  data_time: 0.0089  lr: 0.000140  max_mem: 4499M
[32m[03/21 12:25:11 d2.utils.events]: [0m eta: 0:47:17  iter: 579  total_loss: 0.738  loss_cls: 0.166  loss_box_reg: 0.300  loss_mask: 0.223  loss_rpn_cls: 0.027  loss_rpn_loc: 0.025  time: 0.6481  data_time: 0.0090  lr: 0.000145  max_mem: 4499M
[32m[03/21 12:25:24 d2.utils.events]: [0m eta: 0:47:09  iter: 599  total_loss: 0.745  loss_cls: 0.167  loss_box_reg: 0.306  loss_mask: 0.239  loss_rpn_cls: 0.019  loss_rpn_loc: 0.024  time: 0.6488  data_time: 0.0071  lr: 0.000150  max_mem: 4499M
[32m[03/21 12:25:38 d2.utils.events]: [0m eta: 0:46:58  iter: 619  total_loss: 0.680  loss_cls: 0.148  loss_box_reg: 0.293  loss_mask: 0.222  loss_rpn_cls: 0.016  loss_rpn_loc: 0.031  time: 0.6492  data_time: 0.0095  lr: 0.000155  max_mem: 4499M
[32m[03/21 12:25:51 d2.utils.events]: [0m eta: 0:46:49  iter: 639  total_loss: 0.794  loss_cls: 0.153  loss_box_reg: 0.297  loss_mask: 0.193  loss_rpn_cls: 0.027  loss_rpn_loc: 0.027  time: 0.6496  data_time: 0.0088  lr: 0.000160  max_mem: 4499M
[32m[03/21 12:26:04 d2.utils.events]: [0m eta: 0:46:37  iter: 659  total_loss: 0.751  loss_cls: 0.147  loss_box_reg: 0.282  loss_mask: 0.215  loss_rpn_cls: 0.024  loss_rpn_loc: 0.029  time: 0.6499  data_time: 0.0096  lr: 0.000165  max_mem: 4499M
[32m[03/21 12:26:17 d2.utils.events]: [0m eta: 0:46:26  iter: 679  total_loss: 0.698  loss_cls: 0.137  loss_box_reg: 0.302  loss_mask: 0.213  loss_rpn_cls: 0.019  loss_rpn_loc: 0.020  time: 0.6502  data_time: 0.0099  lr: 0.000170  max_mem: 4499M
[32m[03/21 12:26:30 d2.utils.events]: [0m eta: 0:46:14  iter: 699  total_loss: 0.693  loss_cls: 0.142  loss_box_reg: 0.298  loss_mask: 0.196  loss_rpn_cls: 0.017  loss_rpn_loc: 0.018  time: 0.6503  data_time: 0.0077  lr: 0.000175  max_mem: 4499M
[32m[03/21 12:26:44 d2.utils.events]: [0m eta: 0:46:01  iter: 719  total_loss: 0.663  loss_cls: 0.161  loss_box_reg: 0.276  loss_mask: 0.203  loss_rpn_cls: 0.014  loss_rpn_loc: 0.027  time: 0.6505  data_time: 0.0099  lr: 0.000180  max_mem: 4499M
[32m[03/21 12:26:57 d2.utils.events]: [0m eta: 0:45:50  iter: 739  total_loss: 0.598  loss_cls: 0.124  loss_box_reg: 0.233  loss_mask: 0.199  loss_rpn_cls: 0.016  loss_rpn_loc: 0.023  time: 0.6512  data_time: 0.0086  lr: 0.000185  max_mem: 4499M
[32m[03/21 12:27:10 d2.utils.events]: [0m eta: 0:45:38  iter: 759  total_loss: 0.669  loss_cls: 0.126  loss_box_reg: 0.278  loss_mask: 0.196  loss_rpn_cls: 0.020  loss_rpn_loc: 0.016  time: 0.6515  data_time: 0.0085  lr: 0.000190  max_mem: 4499M
[32m[03/21 12:27:23 d2.utils.events]: [0m eta: 0:45:25  iter: 779  total_loss: 0.602  loss_cls: 0.116  loss_box_reg: 0.244  loss_mask: 0.179  loss_rpn_cls: 0.012  loss_rpn_loc: 0.026  time: 0.6513  data_time: 0.0088  lr: 0.000195  max_mem: 4499M
[32m[03/21 12:27:37 d2.utils.events]: [0m eta: 0:45:14  iter: 799  total_loss: 0.638  loss_cls: 0.134  loss_box_reg: 0.255  loss_mask: 0.230  loss_rpn_cls: 0.016  loss_rpn_loc: 0.020  time: 0.6517  data_time: 0.0075  lr: 0.000200  max_mem: 4499M
[32m[03/21 12:27:50 d2.utils.events]: [0m eta: 0:45:01  iter: 819  total_loss: 0.603  loss_cls: 0.132  loss_box_reg: 0.231  loss_mask: 0.203  loss_rpn_cls: 0.017  loss_rpn_loc: 0.019  time: 0.6516  data_time: 0.0077  lr: 0.000205  max_mem: 4499M
[32m[03/21 12:28:03 d2.utils.events]: [0m eta: 0:44:50  iter: 839  total_loss: 0.589  loss_cls: 0.114  loss_box_reg: 0.240  loss_mask: 0.178  loss_rpn_cls: 0.008  loss_rpn_loc: 0.020  time: 0.6518  data_time: 0.0089  lr: 0.000210  max_mem: 4499M
[32m[03/21 12:28:16 d2.utils.events]: [0m eta: 0:44:37  iter: 859  total_loss: 0.630  loss_cls: 0.132  loss_box_reg: 0.247  loss_mask: 0.202  loss_rpn_cls: 0.018  loss_rpn_loc: 0.018  time: 0.6518  data_time: 0.0086  lr: 0.000215  max_mem: 4499M
[32m[03/21 12:28:29 d2.utils.events]: [0m eta: 0:44:25  iter: 879  total_loss: 0.509  loss_cls: 0.105  loss_box_reg: 0.209  loss_mask: 0.183  loss_rpn_cls: 0.016  loss_rpn_loc: 0.012  time: 0.6518  data_time: 0.0090  lr: 0.000220  max_mem: 4499M
[32m[03/21 12:28:42 d2.utils.events]: [0m eta: 0:44:14  iter: 899  total_loss: 0.521  loss_cls: 0.111  loss_box_reg: 0.213  loss_mask: 0.183  loss_rpn_cls: 0.011  loss_rpn_loc: 0.016  time: 0.6520  data_time: 0.0099  lr: 0.000225  max_mem: 4499M
[32m[03/21 12:28:55 d2.utils.events]: [0m eta: 0:44:01  iter: 919  total_loss: 0.562  loss_cls: 0.113  loss_box_reg: 0.246  loss_mask: 0.168  loss_rpn_cls: 0.012  loss_rpn_loc: 0.020  time: 0.6521  data_time: 0.0086  lr: 0.000230  max_mem: 4499M
[32m[03/21 12:29:09 d2.utils.events]: [0m eta: 0:43:50  iter: 939  total_loss: 0.609  loss_cls: 0.137  loss_box_reg: 0.247  loss_mask: 0.189  loss_rpn_cls: 0.015  loss_rpn_loc: 0.023  time: 0.6524  data_time: 0.0089  lr: 0.000235  max_mem: 4499M
[32m[03/21 12:29:22 d2.utils.events]: [0m eta: 0:43:38  iter: 959  total_loss: 0.556  loss_cls: 0.109  loss_box_reg: 0.213  loss_mask: 0.182  loss_rpn_cls: 0.009  loss_rpn_loc: 0.018  time: 0.6526  data_time: 0.0083  lr: 0.000240  max_mem: 4499M
[32m[03/21 12:29:35 d2.utils.events]: [0m eta: 0:43:26  iter: 979  total_loss: 0.598  loss_cls: 0.128  loss_box_reg: 0.218  loss_mask: 0.186  loss_rpn_cls: 0.020  loss_rpn_loc: 0.017  time: 0.6529  data_time: 0.0087  lr: 0.000245  max_mem: 4499M
[32m[03/21 12:29:48 d2.utils.events]: [0m eta: 0:43:13  iter: 999  total_loss: 0.578  loss_cls: 0.129  loss_box_reg: 0.250  loss_mask: 0.178  loss_rpn_cls: 0.017  loss_rpn_loc: 0.017  time: 0.6529  data_time: 0.0074  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:30:02 d2.utils.events]: [0m eta: 0:43:02  iter: 1019  total_loss: 0.584  loss_cls: 0.110  loss_box_reg: 0.246  loss_mask: 0.174  loss_rpn_cls: 0.014  loss_rpn_loc: 0.020  time: 0.6532  data_time: 0.0086  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:30:15 d2.utils.events]: [0m eta: 0:42:50  iter: 1039  total_loss: 0.626  loss_cls: 0.122  loss_box_reg: 0.230  loss_mask: 0.181  loss_rpn_cls: 0.014  loss_rpn_loc: 0.022  time: 0.6535  data_time: 0.0079  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:30:28 d2.utils.events]: [0m eta: 0:42:39  iter: 1059  total_loss: 0.671  loss_cls: 0.135  loss_box_reg: 0.250  loss_mask: 0.214  loss_rpn_cls: 0.031  loss_rpn_loc: 0.025  time: 0.6535  data_time: 0.0101  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:30:42 d2.utils.events]: [0m eta: 0:42:29  iter: 1079  total_loss: 0.542  loss_cls: 0.112  loss_box_reg: 0.185  loss_mask: 0.186  loss_rpn_cls: 0.021  loss_rpn_loc: 0.015  time: 0.6538  data_time: 0.0092  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:30:55 d2.utils.events]: [0m eta: 0:42:18  iter: 1099  total_loss: 0.606  loss_cls: 0.125  loss_box_reg: 0.232  loss_mask: 0.201  loss_rpn_cls: 0.016  loss_rpn_loc: 0.024  time: 0.6539  data_time: 0.0094  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:31:08 d2.utils.events]: [0m eta: 0:42:07  iter: 1119  total_loss: 0.569  loss_cls: 0.096  loss_box_reg: 0.219  loss_mask: 0.187  loss_rpn_cls: 0.011  loss_rpn_loc: 0.014  time: 0.6542  data_time: 0.0084  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:31:22 d2.utils.events]: [0m eta: 0:41:56  iter: 1139  total_loss: 0.585  loss_cls: 0.117  loss_box_reg: 0.227  loss_mask: 0.190  loss_rpn_cls: 0.010  loss_rpn_loc: 0.017  time: 0.6544  data_time: 0.0090  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:31:35 d2.utils.events]: [0m eta: 0:41:46  iter: 1159  total_loss: 0.558  loss_cls: 0.126  loss_box_reg: 0.205  loss_mask: 0.182  loss_rpn_cls: 0.011  loss_rpn_loc: 0.017  time: 0.6546  data_time: 0.0091  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:31:48 d2.utils.events]: [0m eta: 0:41:33  iter: 1179  total_loss: 0.564  loss_cls: 0.121  loss_box_reg: 0.227  loss_mask: 0.204  loss_rpn_cls: 0.015  loss_rpn_loc: 0.021  time: 0.6546  data_time: 0.0072  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:32:01 d2.utils.events]: [0m eta: 0:41:20  iter: 1199  total_loss: 0.547  loss_cls: 0.103  loss_box_reg: 0.196  loss_mask: 0.183  loss_rpn_cls: 0.010  loss_rpn_loc: 0.015  time: 0.6546  data_time: 0.0080  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:32:15 d2.utils.events]: [0m eta: 0:41:09  iter: 1219  total_loss: 0.621  loss_cls: 0.120  loss_box_reg: 0.235  loss_mask: 0.201  loss_rpn_cls: 0.017  loss_rpn_loc: 0.019  time: 0.6548  data_time: 0.0093  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:32:28 d2.utils.events]: [0m eta: 0:40:57  iter: 1239  total_loss: 0.564  loss_cls: 0.114  loss_box_reg: 0.205  loss_mask: 0.171  loss_rpn_cls: 0.009  loss_rpn_loc: 0.015  time: 0.6550  data_time: 0.0080  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:32:41 d2.utils.events]: [0m eta: 0:40:44  iter: 1259  total_loss: 0.527  loss_cls: 0.097  loss_box_reg: 0.198  loss_mask: 0.157  loss_rpn_cls: 0.017  loss_rpn_loc: 0.016  time: 0.6550  data_time: 0.0085  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:32:54 d2.utils.events]: [0m eta: 0:40:32  iter: 1279  total_loss: 0.600  loss_cls: 0.122  loss_box_reg: 0.243  loss_mask: 0.168  loss_rpn_cls: 0.021  loss_rpn_loc: 0.026  time: 0.6552  data_time: 0.0089  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:33:08 d2.utils.events]: [0m eta: 0:40:20  iter: 1299  total_loss: 0.641  loss_cls: 0.131  loss_box_reg: 0.231  loss_mask: 0.217  loss_rpn_cls: 0.022  loss_rpn_loc: 0.025  time: 0.6554  data_time: 0.0089  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:33:21 d2.utils.events]: [0m eta: 0:40:07  iter: 1319  total_loss: 0.505  loss_cls: 0.099  loss_box_reg: 0.212  loss_mask: 0.177  loss_rpn_cls: 0.014  loss_rpn_loc: 0.027  time: 0.6556  data_time: 0.0087  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:33:35 d2.utils.events]: [0m eta: 0:39:55  iter: 1339  total_loss: 0.565  loss_cls: 0.105  loss_box_reg: 0.211  loss_mask: 0.186  loss_rpn_cls: 0.011  loss_rpn_loc: 0.020  time: 0.6557  data_time: 0.0087  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:33:48 d2.utils.events]: [0m eta: 0:39:43  iter: 1359  total_loss: 0.548  loss_cls: 0.111  loss_box_reg: 0.212  loss_mask: 0.166  loss_rpn_cls: 0.015  loss_rpn_loc: 0.018  time: 0.6559  data_time: 0.0091  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:34:01 d2.utils.events]: [0m eta: 0:39:31  iter: 1379  total_loss: 0.528  loss_cls: 0.097  loss_box_reg: 0.203  loss_mask: 0.170  loss_rpn_cls: 0.010  loss_rpn_loc: 0.014  time: 0.6560  data_time: 0.0084  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:34:14 d2.utils.events]: [0m eta: 0:39:17  iter: 1399  total_loss: 0.659  loss_cls: 0.126  loss_box_reg: 0.280  loss_mask: 0.197  loss_rpn_cls: 0.015  loss_rpn_loc: 0.021  time: 0.6561  data_time: 0.0081  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:34:28 d2.utils.events]: [0m eta: 0:39:05  iter: 1419  total_loss: 0.623  loss_cls: 0.130  loss_box_reg: 0.233  loss_mask: 0.191  loss_rpn_cls: 0.019  loss_rpn_loc: 0.022  time: 0.6563  data_time: 0.0074  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:34:41 d2.utils.events]: [0m eta: 0:38:53  iter: 1439  total_loss: 0.595  loss_cls: 0.143  loss_box_reg: 0.225  loss_mask: 0.174  loss_rpn_cls: 0.017  loss_rpn_loc: 0.015  time: 0.6564  data_time: 0.0078  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:34:54 d2.utils.events]: [0m eta: 0:38:39  iter: 1459  total_loss: 0.616  loss_cls: 0.134  loss_box_reg: 0.241  loss_mask: 0.182  loss_rpn_cls: 0.014  loss_rpn_loc: 0.023  time: 0.6564  data_time: 0.0085  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:35:08 d2.utils.events]: [0m eta: 0:38:26  iter: 1479  total_loss: 0.534  loss_cls: 0.107  loss_box_reg: 0.225  loss_mask: 0.167  loss_rpn_cls: 0.009  loss_rpn_loc: 0.026  time: 0.6565  data_time: 0.0084  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:35:21 d2.utils.events]: [0m eta: 0:38:13  iter: 1499  total_loss: 0.563  loss_cls: 0.125  loss_box_reg: 0.204  loss_mask: 0.184  loss_rpn_cls: 0.014  loss_rpn_loc: 0.016  time: 0.6566  data_time: 0.0076  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:35:34 d2.utils.events]: [0m eta: 0:38:02  iter: 1519  total_loss: 0.605  loss_cls: 0.108  loss_box_reg: 0.258  loss_mask: 0.203  loss_rpn_cls: 0.018  loss_rpn_loc: 0.028  time: 0.6567  data_time: 0.0091  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:35:47 d2.utils.events]: [0m eta: 0:37:48  iter: 1539  total_loss: 0.522  loss_cls: 0.131  loss_box_reg: 0.207  loss_mask: 0.167  loss_rpn_cls: 0.010  loss_rpn_loc: 0.020  time: 0.6567  data_time: 0.0091  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:36:01 d2.utils.events]: [0m eta: 0:37:37  iter: 1559  total_loss: 0.564  loss_cls: 0.112  loss_box_reg: 0.224  loss_mask: 0.179  loss_rpn_cls: 0.012  loss_rpn_loc: 0.018  time: 0.6569  data_time: 0.0079  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:36:14 d2.utils.events]: [0m eta: 0:37:24  iter: 1579  total_loss: 0.479  loss_cls: 0.109  loss_box_reg: 0.198  loss_mask: 0.163  loss_rpn_cls: 0.010  loss_rpn_loc: 0.013  time: 0.6570  data_time: 0.0081  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:36:27 d2.utils.events]: [0m eta: 0:37:10  iter: 1599  total_loss: 0.625  loss_cls: 0.126  loss_box_reg: 0.252  loss_mask: 0.198  loss_rpn_cls: 0.012  loss_rpn_loc: 0.028  time: 0.6570  data_time: 0.0080  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:36:41 d2.utils.events]: [0m eta: 0:36:57  iter: 1619  total_loss: 0.530  loss_cls: 0.099  loss_box_reg: 0.216  loss_mask: 0.168  loss_rpn_cls: 0.012  loss_rpn_loc: 0.027  time: 0.6571  data_time: 0.0099  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:36:54 d2.utils.events]: [0m eta: 0:36:44  iter: 1639  total_loss: 0.581  loss_cls: 0.092  loss_box_reg: 0.220  loss_mask: 0.173  loss_rpn_cls: 0.010  loss_rpn_loc: 0.017  time: 0.6573  data_time: 0.0091  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:37:07 d2.utils.events]: [0m eta: 0:36:32  iter: 1659  total_loss: 0.630  loss_cls: 0.127  loss_box_reg: 0.254  loss_mask: 0.172  loss_rpn_cls: 0.018  loss_rpn_loc: 0.032  time: 0.6574  data_time: 0.0080  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:37:21 d2.utils.events]: [0m eta: 0:36:20  iter: 1679  total_loss: 0.498  loss_cls: 0.095  loss_box_reg: 0.203  loss_mask: 0.167  loss_rpn_cls: 0.013  loss_rpn_loc: 0.018  time: 0.6575  data_time: 0.0090  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:37:34 d2.utils.events]: [0m eta: 0:36:09  iter: 1699  total_loss: 0.564  loss_cls: 0.119  loss_box_reg: 0.222  loss_mask: 0.148  loss_rpn_cls: 0.009  loss_rpn_loc: 0.021  time: 0.6576  data_time: 0.0090  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:37:47 d2.utils.events]: [0m eta: 0:35:56  iter: 1719  total_loss: 0.495  loss_cls: 0.087  loss_box_reg: 0.166  loss_mask: 0.169  loss_rpn_cls: 0.006  loss_rpn_loc: 0.011  time: 0.6576  data_time: 0.0079  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:38:01 d2.utils.events]: [0m eta: 0:35:41  iter: 1739  total_loss: 0.516  loss_cls: 0.102  loss_box_reg: 0.225  loss_mask: 0.159  loss_rpn_cls: 0.012  loss_rpn_loc: 0.028  time: 0.6576  data_time: 0.0082  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:38:14 d2.utils.events]: [0m eta: 0:35:29  iter: 1759  total_loss: 0.583  loss_cls: 0.127  loss_box_reg: 0.223  loss_mask: 0.181  loss_rpn_cls: 0.015  loss_rpn_loc: 0.025  time: 0.6577  data_time: 0.0099  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:38:27 d2.utils.events]: [0m eta: 0:35:17  iter: 1779  total_loss: 0.499  loss_cls: 0.121  loss_box_reg: 0.211  loss_mask: 0.176  loss_rpn_cls: 0.010  loss_rpn_loc: 0.015  time: 0.6578  data_time: 0.0082  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:38:41 d2.utils.events]: [0m eta: 0:35:04  iter: 1799  total_loss: 0.536  loss_cls: 0.105  loss_box_reg: 0.212  loss_mask: 0.156  loss_rpn_cls: 0.012  loss_rpn_loc: 0.018  time: 0.6579  data_time: 0.0090  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:38:54 d2.utils.events]: [0m eta: 0:34:52  iter: 1819  total_loss: 0.708  loss_cls: 0.143  loss_box_reg: 0.248  loss_mask: 0.199  loss_rpn_cls: 0.012  loss_rpn_loc: 0.026  time: 0.6580  data_time: 0.0103  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:39:07 d2.utils.events]: [0m eta: 0:34:38  iter: 1839  total_loss: 0.609  loss_cls: 0.111  loss_box_reg: 0.229  loss_mask: 0.199  loss_rpn_cls: 0.008  loss_rpn_loc: 0.019  time: 0.6580  data_time: 0.0086  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:39:21 d2.utils.events]: [0m eta: 0:34:26  iter: 1859  total_loss: 0.619  loss_cls: 0.137  loss_box_reg: 0.235  loss_mask: 0.203  loss_rpn_cls: 0.018  loss_rpn_loc: 0.021  time: 0.6581  data_time: 0.0082  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:39:34 d2.utils.events]: [0m eta: 0:34:13  iter: 1879  total_loss: 0.486  loss_cls: 0.085  loss_box_reg: 0.223  loss_mask: 0.150  loss_rpn_cls: 0.006  loss_rpn_loc: 0.021  time: 0.6581  data_time: 0.0082  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:39:47 d2.utils.events]: [0m eta: 0:33:59  iter: 1899  total_loss: 0.673  loss_cls: 0.137  loss_box_reg: 0.296  loss_mask: 0.211  loss_rpn_cls: 0.009  loss_rpn_loc: 0.023  time: 0.6581  data_time: 0.0076  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:40:00 d2.utils.events]: [0m eta: 0:33:45  iter: 1919  total_loss: 0.516  loss_cls: 0.120  loss_box_reg: 0.189  loss_mask: 0.177  loss_rpn_cls: 0.010  loss_rpn_loc: 0.022  time: 0.6580  data_time: 0.0075  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:40:13 d2.utils.events]: [0m eta: 0:33:30  iter: 1939  total_loss: 0.517  loss_cls: 0.104  loss_box_reg: 0.200  loss_mask: 0.173  loss_rpn_cls: 0.011  loss_rpn_loc: 0.019  time: 0.6578  data_time: 0.0089  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:40:26 d2.utils.events]: [0m eta: 0:33:18  iter: 1959  total_loss: 0.558  loss_cls: 0.117  loss_box_reg: 0.212  loss_mask: 0.184  loss_rpn_cls: 0.008  loss_rpn_loc: 0.023  time: 0.6580  data_time: 0.0088  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:40:39 d2.utils.events]: [0m eta: 0:33:03  iter: 1979  total_loss: 0.518  loss_cls: 0.117  loss_box_reg: 0.203  loss_mask: 0.160  loss_rpn_cls: 0.010  loss_rpn_loc: 0.022  time: 0.6579  data_time: 0.0078  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:40:53 d2.utils.events]: [0m eta: 0:32:52  iter: 1999  total_loss: 0.555  loss_cls: 0.109  loss_box_reg: 0.203  loss_mask: 0.177  loss_rpn_cls: 0.015  loss_rpn_loc: 0.020  time: 0.6580  data_time: 0.0085  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:41:06 d2.utils.events]: [0m eta: 0:32:39  iter: 2019  total_loss: 0.529  loss_cls: 0.104  loss_box_reg: 0.199  loss_mask: 0.169  loss_rpn_cls: 0.014  loss_rpn_loc: 0.027  time: 0.6580  data_time: 0.0079  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:41:19 d2.utils.events]: [0m eta: 0:32:25  iter: 2039  total_loss: 0.489  loss_cls: 0.091  loss_box_reg: 0.168  loss_mask: 0.176  loss_rpn_cls: 0.008  loss_rpn_loc: 0.017  time: 0.6580  data_time: 0.0079  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:41:32 d2.utils.events]: [0m eta: 0:32:12  iter: 2059  total_loss: 0.524  loss_cls: 0.093  loss_box_reg: 0.195  loss_mask: 0.142  loss_rpn_cls: 0.011  loss_rpn_loc: 0.016  time: 0.6581  data_time: 0.0066  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:41:45 d2.utils.events]: [0m eta: 0:31:58  iter: 2079  total_loss: 0.636  loss_cls: 0.129  loss_box_reg: 0.249  loss_mask: 0.202  loss_rpn_cls: 0.011  loss_rpn_loc: 0.022  time: 0.6581  data_time: 0.0069  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:41:59 d2.utils.events]: [0m eta: 0:31:45  iter: 2099  total_loss: 0.533  loss_cls: 0.097  loss_box_reg: 0.212  loss_mask: 0.180  loss_rpn_cls: 0.009  loss_rpn_loc: 0.016  time: 0.6581  data_time: 0.0071  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:42:12 d2.utils.events]: [0m eta: 0:31:32  iter: 2119  total_loss: 0.588  loss_cls: 0.118  loss_box_reg: 0.219  loss_mask: 0.158  loss_rpn_cls: 0.016  loss_rpn_loc: 0.029  time: 0.6581  data_time: 0.0066  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:42:25 d2.utils.events]: [0m eta: 0:31:18  iter: 2139  total_loss: 0.521  loss_cls: 0.116  loss_box_reg: 0.219  loss_mask: 0.173  loss_rpn_cls: 0.011  loss_rpn_loc: 0.019  time: 0.6580  data_time: 0.0088  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:42:38 d2.utils.events]: [0m eta: 0:31:04  iter: 2159  total_loss: 0.537  loss_cls: 0.120  loss_box_reg: 0.203  loss_mask: 0.161  loss_rpn_cls: 0.011  loss_rpn_loc: 0.019  time: 0.6579  data_time: 0.0065  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:42:51 d2.utils.events]: [0m eta: 0:30:50  iter: 2179  total_loss: 0.438  loss_cls: 0.076  loss_box_reg: 0.188  loss_mask: 0.147  loss_rpn_cls: 0.004  loss_rpn_loc: 0.013  time: 0.6579  data_time: 0.0070  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:43:04 d2.utils.events]: [0m eta: 0:30:37  iter: 2199  total_loss: 0.441  loss_cls: 0.082  loss_box_reg: 0.167  loss_mask: 0.154  loss_rpn_cls: 0.007  loss_rpn_loc: 0.012  time: 0.6578  data_time: 0.0070  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:43:17 d2.utils.events]: [0m eta: 0:30:25  iter: 2219  total_loss: 0.475  loss_cls: 0.097  loss_box_reg: 0.189  loss_mask: 0.154  loss_rpn_cls: 0.006  loss_rpn_loc: 0.014  time: 0.6580  data_time: 0.0077  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:43:30 d2.utils.events]: [0m eta: 0:30:09  iter: 2239  total_loss: 0.461  loss_cls: 0.097  loss_box_reg: 0.167  loss_mask: 0.142  loss_rpn_cls: 0.007  loss_rpn_loc: 0.016  time: 0.6579  data_time: 0.0094  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:43:44 d2.utils.events]: [0m eta: 0:29:56  iter: 2259  total_loss: 0.631  loss_cls: 0.130  loss_box_reg: 0.208  loss_mask: 0.188  loss_rpn_cls: 0.010  loss_rpn_loc: 0.025  time: 0.6578  data_time: 0.0064  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:43:56 d2.utils.events]: [0m eta: 0:29:41  iter: 2279  total_loss: 0.567  loss_cls: 0.119  loss_box_reg: 0.230  loss_mask: 0.155  loss_rpn_cls: 0.014  loss_rpn_loc: 0.023  time: 0.6577  data_time: 0.0065  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:44:10 d2.utils.events]: [0m eta: 0:29:29  iter: 2299  total_loss: 0.535  loss_cls: 0.106  loss_box_reg: 0.213  loss_mask: 0.167  loss_rpn_cls: 0.011  loss_rpn_loc: 0.020  time: 0.6579  data_time: 0.0073  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:44:23 d2.utils.events]: [0m eta: 0:29:14  iter: 2319  total_loss: 0.497  loss_cls: 0.107  loss_box_reg: 0.178  loss_mask: 0.167  loss_rpn_cls: 0.009  loss_rpn_loc: 0.021  time: 0.6578  data_time: 0.0067  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:44:36 d2.utils.events]: [0m eta: 0:29:00  iter: 2339  total_loss: 0.596  loss_cls: 0.118  loss_box_reg: 0.223  loss_mask: 0.185  loss_rpn_cls: 0.015  loss_rpn_loc: 0.024  time: 0.6578  data_time: 0.0070  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:44:49 d2.utils.events]: [0m eta: 0:28:46  iter: 2359  total_loss: 0.466  loss_cls: 0.093  loss_box_reg: 0.188  loss_mask: 0.157  loss_rpn_cls: 0.009  loss_rpn_loc: 0.023  time: 0.6578  data_time: 0.0067  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:45:02 d2.utils.events]: [0m eta: 0:28:32  iter: 2379  total_loss: 0.505  loss_cls: 0.102  loss_box_reg: 0.198  loss_mask: 0.165  loss_rpn_cls: 0.006  loss_rpn_loc: 0.013  time: 0.6577  data_time: 0.0084  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:45:16 d2.utils.events]: [0m eta: 0:28:20  iter: 2399  total_loss: 0.613  loss_cls: 0.117  loss_box_reg: 0.228  loss_mask: 0.186  loss_rpn_cls: 0.008  loss_rpn_loc: 0.022  time: 0.6578  data_time: 0.0080  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:45:29 d2.utils.events]: [0m eta: 0:28:05  iter: 2419  total_loss: 0.600  loss_cls: 0.123  loss_box_reg: 0.228  loss_mask: 0.182  loss_rpn_cls: 0.009  loss_rpn_loc: 0.024  time: 0.6578  data_time: 0.0079  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:45:42 d2.utils.events]: [0m eta: 0:27:51  iter: 2439  total_loss: 0.419  loss_cls: 0.075  loss_box_reg: 0.177  loss_mask: 0.158  loss_rpn_cls: 0.003  loss_rpn_loc: 0.013  time: 0.6577  data_time: 0.0088  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:45:55 d2.utils.events]: [0m eta: 0:27:39  iter: 2459  total_loss: 0.575  loss_cls: 0.123  loss_box_reg: 0.224  loss_mask: 0.165  loss_rpn_cls: 0.015  loss_rpn_loc: 0.026  time: 0.6578  data_time: 0.0072  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:46:08 d2.utils.events]: [0m eta: 0:27:25  iter: 2479  total_loss: 0.566  loss_cls: 0.104  loss_box_reg: 0.231  loss_mask: 0.164  loss_rpn_cls: 0.013  loss_rpn_loc: 0.026  time: 0.6578  data_time: 0.0080  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:46:21 d2.utils.events]: [0m eta: 0:27:12  iter: 2499  total_loss: 0.431  loss_cls: 0.089  loss_box_reg: 0.185  loss_mask: 0.146  loss_rpn_cls: 0.005  loss_rpn_loc: 0.012  time: 0.6578  data_time: 0.0085  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:46:35 d2.utils.events]: [0m eta: 0:26:58  iter: 2519  total_loss: 0.537  loss_cls: 0.104  loss_box_reg: 0.210  loss_mask: 0.175  loss_rpn_cls: 0.012  loss_rpn_loc: 0.022  time: 0.6578  data_time: 0.0088  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:46:48 d2.utils.events]: [0m eta: 0:26:45  iter: 2539  total_loss: 0.461  loss_cls: 0.075  loss_box_reg: 0.168  loss_mask: 0.160  loss_rpn_cls: 0.006  loss_rpn_loc: 0.026  time: 0.6578  data_time: 0.0066  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:47:01 d2.utils.events]: [0m eta: 0:26:31  iter: 2559  total_loss: 0.512  loss_cls: 0.097  loss_box_reg: 0.210  loss_mask: 0.163  loss_rpn_cls: 0.011  loss_rpn_loc: 0.022  time: 0.6577  data_time: 0.0082  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:47:14 d2.utils.events]: [0m eta: 0:26:17  iter: 2579  total_loss: 0.500  loss_cls: 0.093  loss_box_reg: 0.218  loss_mask: 0.172  loss_rpn_cls: 0.011  loss_rpn_loc: 0.017  time: 0.6576  data_time: 0.0065  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:47:27 d2.utils.events]: [0m eta: 0:26:04  iter: 2599  total_loss: 0.613  loss_cls: 0.123  loss_box_reg: 0.255  loss_mask: 0.158  loss_rpn_cls: 0.007  loss_rpn_loc: 0.026  time: 0.6577  data_time: 0.0095  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:47:41 d2.utils.events]: [0m eta: 0:25:52  iter: 2619  total_loss: 0.570  loss_cls: 0.114  loss_box_reg: 0.203  loss_mask: 0.155  loss_rpn_cls: 0.010  loss_rpn_loc: 0.027  time: 0.6578  data_time: 0.0075  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:47:54 d2.utils.events]: [0m eta: 0:25:39  iter: 2639  total_loss: 0.504  loss_cls: 0.093  loss_box_reg: 0.177  loss_mask: 0.150  loss_rpn_cls: 0.007  loss_rpn_loc: 0.020  time: 0.6579  data_time: 0.0078  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:48:07 d2.utils.events]: [0m eta: 0:25:26  iter: 2659  total_loss: 0.436  loss_cls: 0.097  loss_box_reg: 0.172  loss_mask: 0.144  loss_rpn_cls: 0.009  loss_rpn_loc: 0.013  time: 0.6579  data_time: 0.0084  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:48:20 d2.utils.events]: [0m eta: 0:25:12  iter: 2679  total_loss: 0.467  loss_cls: 0.102  loss_box_reg: 0.183  loss_mask: 0.147  loss_rpn_cls: 0.008  loss_rpn_loc: 0.017  time: 0.6579  data_time: 0.0079  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:48:33 d2.utils.events]: [0m eta: 0:24:59  iter: 2699  total_loss: 0.480  loss_cls: 0.091  loss_box_reg: 0.185  loss_mask: 0.159  loss_rpn_cls: 0.009  loss_rpn_loc: 0.019  time: 0.6579  data_time: 0.0068  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:48:46 d2.utils.events]: [0m eta: 0:24:46  iter: 2719  total_loss: 0.533  loss_cls: 0.101  loss_box_reg: 0.214  loss_mask: 0.174  loss_rpn_cls: 0.008  loss_rpn_loc: 0.024  time: 0.6578  data_time: 0.0091  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:49:00 d2.utils.events]: [0m eta: 0:24:33  iter: 2739  total_loss: 0.466  loss_cls: 0.095  loss_box_reg: 0.174  loss_mask: 0.160  loss_rpn_cls: 0.004  loss_rpn_loc: 0.013  time: 0.6578  data_time: 0.0061  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:49:13 d2.utils.events]: [0m eta: 0:24:20  iter: 2759  total_loss: 0.570  loss_cls: 0.133  loss_box_reg: 0.224  loss_mask: 0.175  loss_rpn_cls: 0.010  loss_rpn_loc: 0.025  time: 0.6579  data_time: 0.0087  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:49:26 d2.utils.events]: [0m eta: 0:24:07  iter: 2779  total_loss: 0.467  loss_cls: 0.093  loss_box_reg: 0.177  loss_mask: 0.165  loss_rpn_cls: 0.006  loss_rpn_loc: 0.012  time: 0.6579  data_time: 0.0061  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:49:39 d2.utils.events]: [0m eta: 0:23:54  iter: 2799  total_loss: 0.540  loss_cls: 0.114  loss_box_reg: 0.208  loss_mask: 0.151  loss_rpn_cls: 0.011  loss_rpn_loc: 0.024  time: 0.6579  data_time: 0.0064  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:49:53 d2.utils.events]: [0m eta: 0:23:41  iter: 2819  total_loss: 0.436  loss_cls: 0.097  loss_box_reg: 0.155  loss_mask: 0.144  loss_rpn_cls: 0.013  loss_rpn_loc: 0.017  time: 0.6581  data_time: 0.0067  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:50:06 d2.utils.events]: [0m eta: 0:23:28  iter: 2839  total_loss: 0.568  loss_cls: 0.110  loss_box_reg: 0.242  loss_mask: 0.177  loss_rpn_cls: 0.012  loss_rpn_loc: 0.024  time: 0.6581  data_time: 0.0081  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:50:19 d2.utils.events]: [0m eta: 0:23:15  iter: 2859  total_loss: 0.425  loss_cls: 0.073  loss_box_reg: 0.169  loss_mask: 0.132  loss_rpn_cls: 0.010  loss_rpn_loc: 0.017  time: 0.6581  data_time: 0.0069  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:50:33 d2.utils.events]: [0m eta: 0:23:03  iter: 2879  total_loss: 0.577  loss_cls: 0.117  loss_box_reg: 0.241  loss_mask: 0.188  loss_rpn_cls: 0.010  loss_rpn_loc: 0.025  time: 0.6582  data_time: 0.0089  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:50:46 d2.utils.events]: [0m eta: 0:22:50  iter: 2899  total_loss: 0.489  loss_cls: 0.095  loss_box_reg: 0.202  loss_mask: 0.157  loss_rpn_cls: 0.006  loss_rpn_loc: 0.019  time: 0.6583  data_time: 0.0078  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:51:00 d2.utils.events]: [0m eta: 0:22:38  iter: 2919  total_loss: 0.547  loss_cls: 0.099  loss_box_reg: 0.207  loss_mask: 0.186  loss_rpn_cls: 0.008  loss_rpn_loc: 0.015  time: 0.6583  data_time: 0.0073  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:51:13 d2.utils.events]: [0m eta: 0:22:26  iter: 2939  total_loss: 0.521  loss_cls: 0.100  loss_box_reg: 0.201  loss_mask: 0.166  loss_rpn_cls: 0.005  loss_rpn_loc: 0.016  time: 0.6584  data_time: 0.0091  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:51:26 d2.utils.events]: [0m eta: 0:22:12  iter: 2959  total_loss: 0.460  loss_cls: 0.091  loss_box_reg: 0.226  loss_mask: 0.173  loss_rpn_cls: 0.006  loss_rpn_loc: 0.017  time: 0.6584  data_time: 0.0073  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:51:40 d2.utils.events]: [0m eta: 0:22:00  iter: 2979  total_loss: 0.609  loss_cls: 0.112  loss_box_reg: 0.216  loss_mask: 0.183  loss_rpn_cls: 0.008  loss_rpn_loc: 0.018  time: 0.6585  data_time: 0.0070  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:51:53 d2.utils.events]: [0m eta: 0:21:46  iter: 2999  total_loss: 0.524  loss_cls: 0.124  loss_box_reg: 0.210  loss_mask: 0.148  loss_rpn_cls: 0.008  loss_rpn_loc: 0.019  time: 0.6586  data_time: 0.0090  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:52:06 d2.utils.events]: [0m eta: 0:21:33  iter: 3019  total_loss: 0.540  loss_cls: 0.105  loss_box_reg: 0.196  loss_mask: 0.185  loss_rpn_cls: 0.010  loss_rpn_loc: 0.017  time: 0.6586  data_time: 0.0088  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:52:20 d2.utils.events]: [0m eta: 0:21:20  iter: 3039  total_loss: 0.566  loss_cls: 0.121  loss_box_reg: 0.228  loss_mask: 0.173  loss_rpn_cls: 0.008  loss_rpn_loc: 0.026  time: 0.6587  data_time: 0.0089  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:52:33 d2.utils.events]: [0m eta: 0:21:07  iter: 3059  total_loss: 0.577  loss_cls: 0.107  loss_box_reg: 0.189  loss_mask: 0.180  loss_rpn_cls: 0.007  loss_rpn_loc: 0.021  time: 0.6587  data_time: 0.0070  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:52:47 d2.utils.events]: [0m eta: 0:20:55  iter: 3079  total_loss: 0.520  loss_cls: 0.087  loss_box_reg: 0.204  loss_mask: 0.178  loss_rpn_cls: 0.004  loss_rpn_loc: 0.017  time: 0.6588  data_time: 0.0086  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:53:00 d2.utils.events]: [0m eta: 0:20:42  iter: 3099  total_loss: 0.459  loss_cls: 0.085  loss_box_reg: 0.181  loss_mask: 0.153  loss_rpn_cls: 0.008  loss_rpn_loc: 0.013  time: 0.6589  data_time: 0.0069  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:53:13 d2.utils.events]: [0m eta: 0:20:29  iter: 3119  total_loss: 0.468  loss_cls: 0.100  loss_box_reg: 0.188  loss_mask: 0.146  loss_rpn_cls: 0.009  loss_rpn_loc: 0.018  time: 0.6589  data_time: 0.0071  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:53:27 d2.utils.events]: [0m eta: 0:20:17  iter: 3139  total_loss: 0.453  loss_cls: 0.091  loss_box_reg: 0.190  loss_mask: 0.145  loss_rpn_cls: 0.006  loss_rpn_loc: 0.015  time: 0.6590  data_time: 0.0073  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:53:40 d2.utils.events]: [0m eta: 0:20:05  iter: 3159  total_loss: 0.543  loss_cls: 0.097  loss_box_reg: 0.222  loss_mask: 0.172  loss_rpn_cls: 0.009  loss_rpn_loc: 0.022  time: 0.6591  data_time: 0.0074  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:53:54 d2.utils.events]: [0m eta: 0:19:53  iter: 3179  total_loss: 0.582  loss_cls: 0.120  loss_box_reg: 0.226  loss_mask: 0.173  loss_rpn_cls: 0.009  loss_rpn_loc: 0.036  time: 0.6592  data_time: 0.0084  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:54:07 d2.utils.events]: [0m eta: 0:19:41  iter: 3199  total_loss: 0.455  loss_cls: 0.084  loss_box_reg: 0.187  loss_mask: 0.148  loss_rpn_cls: 0.006  loss_rpn_loc: 0.014  time: 0.6592  data_time: 0.0077  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:54:20 d2.utils.events]: [0m eta: 0:19:28  iter: 3219  total_loss: 0.514  loss_cls: 0.090  loss_box_reg: 0.195  loss_mask: 0.186  loss_rpn_cls: 0.010  loss_rpn_loc: 0.017  time: 0.6593  data_time: 0.0062  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:54:34 d2.utils.events]: [0m eta: 0:19:16  iter: 3239  total_loss: 0.519  loss_cls: 0.091  loss_box_reg: 0.204  loss_mask: 0.176  loss_rpn_cls: 0.008  loss_rpn_loc: 0.024  time: 0.6594  data_time: 0.0085  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:54:47 d2.utils.events]: [0m eta: 0:19:03  iter: 3259  total_loss: 0.488  loss_cls: 0.090  loss_box_reg: 0.187  loss_mask: 0.166  loss_rpn_cls: 0.009  loss_rpn_loc: 0.013  time: 0.6594  data_time: 0.0078  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:55:01 d2.utils.events]: [0m eta: 0:18:51  iter: 3279  total_loss: 0.562  loss_cls: 0.121  loss_box_reg: 0.220  loss_mask: 0.159  loss_rpn_cls: 0.013  loss_rpn_loc: 0.026  time: 0.6594  data_time: 0.0095  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:55:14 d2.utils.events]: [0m eta: 0:18:38  iter: 3299  total_loss: 0.471  loss_cls: 0.093  loss_box_reg: 0.185  loss_mask: 0.142  loss_rpn_cls: 0.007  loss_rpn_loc: 0.019  time: 0.6595  data_time: 0.0087  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:55:27 d2.utils.events]: [0m eta: 0:18:25  iter: 3319  total_loss: 0.553  loss_cls: 0.104  loss_box_reg: 0.210  loss_mask: 0.172  loss_rpn_cls: 0.010  loss_rpn_loc: 0.031  time: 0.6595  data_time: 0.0076  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:55:41 d2.utils.events]: [0m eta: 0:18:12  iter: 3339  total_loss: 0.475  loss_cls: 0.090  loss_box_reg: 0.203  loss_mask: 0.163  loss_rpn_cls: 0.012  loss_rpn_loc: 0.029  time: 0.6596  data_time: 0.0072  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:55:54 d2.utils.events]: [0m eta: 0:17:59  iter: 3359  total_loss: 0.551  loss_cls: 0.117  loss_box_reg: 0.226  loss_mask: 0.175  loss_rpn_cls: 0.009  loss_rpn_loc: 0.023  time: 0.6596  data_time: 0.0065  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:56:07 d2.utils.events]: [0m eta: 0:17:47  iter: 3379  total_loss: 0.502  loss_cls: 0.084  loss_box_reg: 0.210  loss_mask: 0.159  loss_rpn_cls: 0.008  loss_rpn_loc: 0.018  time: 0.6597  data_time: 0.0075  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:56:21 d2.utils.events]: [0m eta: 0:17:35  iter: 3399  total_loss: 0.567  loss_cls: 0.103  loss_box_reg: 0.232  loss_mask: 0.191  loss_rpn_cls: 0.005  loss_rpn_loc: 0.018  time: 0.6598  data_time: 0.0063  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:56:34 d2.utils.events]: [0m eta: 0:17:22  iter: 3419  total_loss: 0.470  loss_cls: 0.089  loss_box_reg: 0.167  loss_mask: 0.149  loss_rpn_cls: 0.010  loss_rpn_loc: 0.016  time: 0.6598  data_time: 0.0073  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:56:47 d2.utils.events]: [0m eta: 0:17:10  iter: 3439  total_loss: 0.441  loss_cls: 0.079  loss_box_reg: 0.182  loss_mask: 0.146  loss_rpn_cls: 0.004  loss_rpn_loc: 0.014  time: 0.6598  data_time: 0.0061  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:57:01 d2.utils.events]: [0m eta: 0:16:57  iter: 3459  total_loss: 0.506  loss_cls: 0.092  loss_box_reg: 0.184  loss_mask: 0.171  loss_rpn_cls: 0.005  loss_rpn_loc: 0.018  time: 0.6599  data_time: 0.0073  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:57:14 d2.utils.events]: [0m eta: 0:16:45  iter: 3479  total_loss: 0.450  loss_cls: 0.088  loss_box_reg: 0.195  loss_mask: 0.163  loss_rpn_cls: 0.005  loss_rpn_loc: 0.016  time: 0.6600  data_time: 0.0074  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:57:28 d2.utils.events]: [0m eta: 0:16:32  iter: 3499  total_loss: 0.513  loss_cls: 0.094  loss_box_reg: 0.203  loss_mask: 0.164  loss_rpn_cls: 0.006  loss_rpn_loc: 0.017  time: 0.6600  data_time: 0.0085  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:57:41 d2.utils.events]: [0m eta: 0:16:19  iter: 3519  total_loss: 0.467  loss_cls: 0.096  loss_box_reg: 0.195  loss_mask: 0.142  loss_rpn_cls: 0.006  loss_rpn_loc: 0.029  time: 0.6600  data_time: 0.0083  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:57:55 d2.utils.events]: [0m eta: 0:16:07  iter: 3539  total_loss: 0.488  loss_cls: 0.093  loss_box_reg: 0.191  loss_mask: 0.169  loss_rpn_cls: 0.008  loss_rpn_loc: 0.016  time: 0.6601  data_time: 0.0079  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:58:08 d2.utils.events]: [0m eta: 0:15:54  iter: 3559  total_loss: 0.548  loss_cls: 0.098  loss_box_reg: 0.217  loss_mask: 0.170  loss_rpn_cls: 0.011  loss_rpn_loc: 0.026  time: 0.6602  data_time: 0.0076  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:58:21 d2.utils.events]: [0m eta: 0:15:42  iter: 3579  total_loss: 0.377  loss_cls: 0.075  loss_box_reg: 0.170  loss_mask: 0.136  loss_rpn_cls: 0.003  loss_rpn_loc: 0.012  time: 0.6602  data_time: 0.0084  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:58:35 d2.utils.events]: [0m eta: 0:15:28  iter: 3599  total_loss: 0.470  loss_cls: 0.090  loss_box_reg: 0.180  loss_mask: 0.150  loss_rpn_cls: 0.005  loss_rpn_loc: 0.013  time: 0.6602  data_time: 0.0077  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:58:48 d2.utils.events]: [0m eta: 0:15:15  iter: 3619  total_loss: 0.470  loss_cls: 0.084  loss_box_reg: 0.193  loss_mask: 0.150  loss_rpn_cls: 0.005  loss_rpn_loc: 0.020  time: 0.6603  data_time: 0.0076  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:59:02 d2.utils.events]: [0m eta: 0:15:02  iter: 3639  total_loss: 0.507  loss_cls: 0.108  loss_box_reg: 0.203  loss_mask: 0.171  loss_rpn_cls: 0.006  loss_rpn_loc: 0.021  time: 0.6604  data_time: 0.0085  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:59:15 d2.utils.events]: [0m eta: 0:14:49  iter: 3659  total_loss: 0.456  loss_cls: 0.088  loss_box_reg: 0.182  loss_mask: 0.155  loss_rpn_cls: 0.009  loss_rpn_loc: 0.014  time: 0.6604  data_time: 0.0076  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:59:29 d2.utils.events]: [0m eta: 0:14:36  iter: 3679  total_loss: 0.510  loss_cls: 0.094  loss_box_reg: 0.195  loss_mask: 0.141  loss_rpn_cls: 0.010  loss_rpn_loc: 0.022  time: 0.6605  data_time: 0.0077  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:59:42 d2.utils.events]: [0m eta: 0:14:22  iter: 3699  total_loss: 0.410  loss_cls: 0.070  loss_box_reg: 0.147  loss_mask: 0.158  loss_rpn_cls: 0.005  loss_rpn_loc: 0.012  time: 0.6605  data_time: 0.0073  lr: 0.000250  max_mem: 4499M
[32m[03/21 12:59:55 d2.utils.events]: [0m eta: 0:14:10  iter: 3719  total_loss: 0.488  loss_cls: 0.086  loss_box_reg: 0.200  loss_mask: 0.153  loss_rpn_cls: 0.007  loss_rpn_loc: 0.016  time: 0.6606  data_time: 0.0079  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:00:09 d2.utils.events]: [0m eta: 0:13:56  iter: 3739  total_loss: 0.584  loss_cls: 0.112  loss_box_reg: 0.229  loss_mask: 0.163  loss_rpn_cls: 0.011  loss_rpn_loc: 0.027  time: 0.6606  data_time: 0.0072  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:00:22 d2.utils.events]: [0m eta: 0:13:43  iter: 3759  total_loss: 0.474  loss_cls: 0.090  loss_box_reg: 0.201  loss_mask: 0.149  loss_rpn_cls: 0.008  loss_rpn_loc: 0.021  time: 0.6606  data_time: 0.0090  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:00:35 d2.utils.events]: [0m eta: 0:13:30  iter: 3779  total_loss: 0.515  loss_cls: 0.105  loss_box_reg: 0.202  loss_mask: 0.163  loss_rpn_cls: 0.006  loss_rpn_loc: 0.021  time: 0.6606  data_time: 0.0081  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:00:49 d2.utils.events]: [0m eta: 0:13:17  iter: 3799  total_loss: 0.493  loss_cls: 0.099  loss_box_reg: 0.201  loss_mask: 0.164  loss_rpn_cls: 0.006  loss_rpn_loc: 0.019  time: 0.6607  data_time: 0.0084  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:01:02 d2.utils.events]: [0m eta: 0:13:03  iter: 3819  total_loss: 0.421  loss_cls: 0.076  loss_box_reg: 0.169  loss_mask: 0.140  loss_rpn_cls: 0.004  loss_rpn_loc: 0.013  time: 0.6607  data_time: 0.0086  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:01:15 d2.utils.events]: [0m eta: 0:12:50  iter: 3839  total_loss: 0.514  loss_cls: 0.084  loss_box_reg: 0.192  loss_mask: 0.180  loss_rpn_cls: 0.005  loss_rpn_loc: 0.019  time: 0.6607  data_time: 0.0073  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:01:29 d2.utils.events]: [0m eta: 0:12:37  iter: 3859  total_loss: 0.480  loss_cls: 0.096  loss_box_reg: 0.191  loss_mask: 0.155  loss_rpn_cls: 0.006  loss_rpn_loc: 0.013  time: 0.6607  data_time: 0.0074  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:01:42 d2.utils.events]: [0m eta: 0:12:24  iter: 3879  total_loss: 0.425  loss_cls: 0.088  loss_box_reg: 0.177  loss_mask: 0.140  loss_rpn_cls: 0.004  loss_rpn_loc: 0.017  time: 0.6607  data_time: 0.0078  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:01:55 d2.utils.events]: [0m eta: 0:12:11  iter: 3899  total_loss: 0.483  loss_cls: 0.089  loss_box_reg: 0.216  loss_mask: 0.175  loss_rpn_cls: 0.006  loss_rpn_loc: 0.016  time: 0.6608  data_time: 0.0098  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:02:09 d2.utils.events]: [0m eta: 0:11:57  iter: 3919  total_loss: 0.443  loss_cls: 0.078  loss_box_reg: 0.196  loss_mask: 0.160  loss_rpn_cls: 0.007  loss_rpn_loc: 0.015  time: 0.6609  data_time: 0.0089  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:02:22 d2.utils.events]: [0m eta: 0:11:44  iter: 3939  total_loss: 0.521  loss_cls: 0.106  loss_box_reg: 0.219  loss_mask: 0.151  loss_rpn_cls: 0.009  loss_rpn_loc: 0.029  time: 0.6610  data_time: 0.0076  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:02:36 d2.utils.events]: [0m eta: 0:11:31  iter: 3959  total_loss: 0.412  loss_cls: 0.082  loss_box_reg: 0.179  loss_mask: 0.148  loss_rpn_cls: 0.008  loss_rpn_loc: 0.013  time: 0.6610  data_time: 0.0073  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:02:49 d2.utils.events]: [0m eta: 0:11:18  iter: 3979  total_loss: 0.436  loss_cls: 0.090  loss_box_reg: 0.189  loss_mask: 0.152  loss_rpn_cls: 0.009  loss_rpn_loc: 0.019  time: 0.6611  data_time: 0.0082  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:03:02 d2.utils.events]: [0m eta: 0:11:05  iter: 3999  total_loss: 0.552  loss_cls: 0.105  loss_box_reg: 0.226  loss_mask: 0.166  loss_rpn_cls: 0.008  loss_rpn_loc: 0.020  time: 0.6611  data_time: 0.0082  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:03:16 d2.utils.events]: [0m eta: 0:10:52  iter: 4019  total_loss: 0.463  loss_cls: 0.074  loss_box_reg: 0.195  loss_mask: 0.173  loss_rpn_cls: 0.006  loss_rpn_loc: 0.014  time: 0.6612  data_time: 0.0065  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:03:29 d2.utils.events]: [0m eta: 0:10:38  iter: 4039  total_loss: 0.453  loss_cls: 0.089  loss_box_reg: 0.186  loss_mask: 0.153  loss_rpn_cls: 0.005  loss_rpn_loc: 0.017  time: 0.6612  data_time: 0.0081  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:03:43 d2.utils.events]: [0m eta: 0:10:25  iter: 4059  total_loss: 0.421  loss_cls: 0.084  loss_box_reg: 0.176  loss_mask: 0.131  loss_rpn_cls: 0.004  loss_rpn_loc: 0.015  time: 0.6612  data_time: 0.0074  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:03:56 d2.utils.events]: [0m eta: 0:10:11  iter: 4079  total_loss: 0.467  loss_cls: 0.076  loss_box_reg: 0.188  loss_mask: 0.141  loss_rpn_cls: 0.007  loss_rpn_loc: 0.010  time: 0.6612  data_time: 0.0089  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:04:09 d2.utils.events]: [0m eta: 0:09:58  iter: 4099  total_loss: 0.471  loss_cls: 0.084  loss_box_reg: 0.202  loss_mask: 0.151  loss_rpn_cls: 0.005  loss_rpn_loc: 0.017  time: 0.6612  data_time: 0.0083  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:04:22 d2.utils.events]: [0m eta: 0:09:45  iter: 4119  total_loss: 0.475  loss_cls: 0.096  loss_box_reg: 0.199  loss_mask: 0.168  loss_rpn_cls: 0.007  loss_rpn_loc: 0.016  time: 0.6612  data_time: 0.0079  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:04:36 d2.utils.events]: [0m eta: 0:09:31  iter: 4139  total_loss: 0.567  loss_cls: 0.092  loss_box_reg: 0.212  loss_mask: 0.174  loss_rpn_cls: 0.004  loss_rpn_loc: 0.016  time: 0.6612  data_time: 0.0083  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:04:49 d2.utils.events]: [0m eta: 0:09:18  iter: 4159  total_loss: 0.473  loss_cls: 0.093  loss_box_reg: 0.199  loss_mask: 0.148  loss_rpn_cls: 0.006  loss_rpn_loc: 0.019  time: 0.6612  data_time: 0.0080  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:05:02 d2.utils.events]: [0m eta: 0:09:04  iter: 4179  total_loss: 0.398  loss_cls: 0.066  loss_box_reg: 0.164  loss_mask: 0.136  loss_rpn_cls: 0.003  loss_rpn_loc: 0.016  time: 0.6611  data_time: 0.0079  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:05:15 d2.utils.events]: [0m eta: 0:08:51  iter: 4199  total_loss: 0.454  loss_cls: 0.106  loss_box_reg: 0.165  loss_mask: 0.176  loss_rpn_cls: 0.007  loss_rpn_loc: 0.014  time: 0.6611  data_time: 0.0077  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:05:28 d2.utils.events]: [0m eta: 0:08:37  iter: 4219  total_loss: 0.461  loss_cls: 0.086  loss_box_reg: 0.165  loss_mask: 0.158  loss_rpn_cls: 0.009  loss_rpn_loc: 0.012  time: 0.6611  data_time: 0.0085  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:05:42 d2.utils.events]: [0m eta: 0:08:24  iter: 4239  total_loss: 0.444  loss_cls: 0.080  loss_box_reg: 0.185  loss_mask: 0.160  loss_rpn_cls: 0.005  loss_rpn_loc: 0.014  time: 0.6611  data_time: 0.0077  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:05:54 d2.utils.events]: [0m eta: 0:08:10  iter: 4259  total_loss: 0.488  loss_cls: 0.106  loss_box_reg: 0.206  loss_mask: 0.140  loss_rpn_cls: 0.005  loss_rpn_loc: 0.019  time: 0.6611  data_time: 0.0070  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:06:08 d2.utils.events]: [0m eta: 0:07:57  iter: 4279  total_loss: 0.476  loss_cls: 0.090  loss_box_reg: 0.192  loss_mask: 0.167  loss_rpn_cls: 0.005  loss_rpn_loc: 0.019  time: 0.6611  data_time: 0.0070  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:06:21 d2.utils.events]: [0m eta: 0:07:44  iter: 4299  total_loss: 0.565  loss_cls: 0.100  loss_box_reg: 0.228  loss_mask: 0.181  loss_rpn_cls: 0.009  loss_rpn_loc: 0.023  time: 0.6610  data_time: 0.0069  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:06:34 d2.utils.events]: [0m eta: 0:07:30  iter: 4319  total_loss: 0.464  loss_cls: 0.085  loss_box_reg: 0.189  loss_mask: 0.145  loss_rpn_cls: 0.006  loss_rpn_loc: 0.018  time: 0.6610  data_time: 0.0073  lr: 0.000250  max_mem: 4499M
[32m[03/21 13:06:47 d2.utils.events]: [0m eta: 0:07:17  iter: 4339  total_loss: 0.441  loss_cls: 0.086  loss_box_reg: 0.168  loss_mask: 0.131  loss_rpn_cls: 0.009  loss_rpn_loc: 0.016  time: 0.6610  data_time: 0.0071  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:07:00 d2.utils.events]: [0m eta: 0:07:03  iter: 4359  total_loss: 0.521  loss_cls: 0.105  loss_box_reg: 0.230  loss_mask: 0.151  loss_rpn_cls: 0.007  loss_rpn_loc: 0.018  time: 0.6610  data_time: 0.0086  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:07:14 d2.utils.events]: [0m eta: 0:06:50  iter: 4379  total_loss: 0.549  loss_cls: 0.114  loss_box_reg: 0.242  loss_mask: 0.174  loss_rpn_cls: 0.010  loss_rpn_loc: 0.025  time: 0.6610  data_time: 0.0073  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:07:27 d2.utils.events]: [0m eta: 0:06:37  iter: 4399  total_loss: 0.531  loss_cls: 0.111  loss_box_reg: 0.220  loss_mask: 0.165  loss_rpn_cls: 0.009  loss_rpn_loc: 0.025  time: 0.6610  data_time: 0.0085  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:07:40 d2.utils.events]: [0m eta: 0:06:23  iter: 4419  total_loss: 0.368  loss_cls: 0.069  loss_box_reg: 0.140  loss_mask: 0.143  loss_rpn_cls: 0.004  loss_rpn_loc: 0.013  time: 0.6610  data_time: 0.0085  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:07:53 d2.utils.events]: [0m eta: 0:06:10  iter: 4439  total_loss: 0.521  loss_cls: 0.093  loss_box_reg: 0.212  loss_mask: 0.145  loss_rpn_cls: 0.007  loss_rpn_loc: 0.019  time: 0.6610  data_time: 0.0098  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:08:07 d2.utils.events]: [0m eta: 0:05:57  iter: 4459  total_loss: 0.535  loss_cls: 0.100  loss_box_reg: 0.210  loss_mask: 0.175  loss_rpn_cls: 0.009  loss_rpn_loc: 0.019  time: 0.6611  data_time: 0.0073  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:08:20 d2.utils.events]: [0m eta: 0:05:43  iter: 4479  total_loss: 0.540  loss_cls: 0.097  loss_box_reg: 0.221  loss_mask: 0.175  loss_rpn_cls: 0.010  loss_rpn_loc: 0.020  time: 0.6610  data_time: 0.0079  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:08:33 d2.utils.events]: [0m eta: 0:05:30  iter: 4499  total_loss: 0.527  loss_cls: 0.111  loss_box_reg: 0.206  loss_mask: 0.172  loss_rpn_cls: 0.015  loss_rpn_loc: 0.025  time: 0.6611  data_time: 0.0077  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:08:47 d2.utils.events]: [0m eta: 0:05:17  iter: 4519  total_loss: 0.462  loss_cls: 0.092  loss_box_reg: 0.205  loss_mask: 0.145  loss_rpn_cls: 0.006  loss_rpn_loc: 0.015  time: 0.6611  data_time: 0.0085  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:09:00 d2.utils.events]: [0m eta: 0:05:03  iter: 4539  total_loss: 0.419  loss_cls: 0.074  loss_box_reg: 0.173  loss_mask: 0.135  loss_rpn_cls: 0.004  loss_rpn_loc: 0.017  time: 0.6611  data_time: 0.0090  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:09:13 d2.utils.events]: [0m eta: 0:04:50  iter: 4559  total_loss: 0.461  loss_cls: 0.088  loss_box_reg: 0.171  loss_mask: 0.163  loss_rpn_cls: 0.009  loss_rpn_loc: 0.014  time: 0.6610  data_time: 0.0078  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:09:26 d2.utils.events]: [0m eta: 0:04:37  iter: 4579  total_loss: 0.429  loss_cls: 0.098  loss_box_reg: 0.166  loss_mask: 0.151  loss_rpn_cls: 0.005  loss_rpn_loc: 0.017  time: 0.6611  data_time: 0.0073  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:09:40 d2.utils.events]: [0m eta: 0:04:24  iter: 4599  total_loss: 0.446  loss_cls: 0.082  loss_box_reg: 0.167  loss_mask: 0.140  loss_rpn_cls: 0.008  loss_rpn_loc: 0.024  time: 0.6611  data_time: 0.0067  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:09:53 d2.utils.events]: [0m eta: 0:04:11  iter: 4619  total_loss: 0.461  loss_cls: 0.083  loss_box_reg: 0.166  loss_mask: 0.145  loss_rpn_cls: 0.008  loss_rpn_loc: 0.016  time: 0.6611  data_time: 0.0080  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:10:06 d2.utils.events]: [0m eta: 0:03:57  iter: 4639  total_loss: 0.433  loss_cls: 0.083  loss_box_reg: 0.173  loss_mask: 0.149  loss_rpn_cls: 0.005  loss_rpn_loc: 0.017  time: 0.6611  data_time: 0.0085  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:10:19 d2.utils.events]: [0m eta: 0:03:44  iter: 4659  total_loss: 0.533  loss_cls: 0.101  loss_box_reg: 0.229  loss_mask: 0.153  loss_rpn_cls: 0.009  loss_rpn_loc: 0.021  time: 0.6611  data_time: 0.0099  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:10:33 d2.utils.events]: [0m eta: 0:03:31  iter: 4679  total_loss: 0.507  loss_cls: 0.091  loss_box_reg: 0.197  loss_mask: 0.172  loss_rpn_cls: 0.005  loss_rpn_loc: 0.018  time: 0.6611  data_time: 0.0077  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:10:46 d2.utils.events]: [0m eta: 0:03:17  iter: 4699  total_loss: 0.462  loss_cls: 0.076  loss_box_reg: 0.189  loss_mask: 0.174  loss_rpn_cls: 0.003  loss_rpn_loc: 0.016  time: 0.6611  data_time: 0.0079  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:10:59 d2.utils.events]: [0m eta: 0:03:04  iter: 4719  total_loss: 0.415  loss_cls: 0.079  loss_box_reg: 0.148  loss_mask: 0.132  loss_rpn_cls: 0.006  loss_rpn_loc: 0.017  time: 0.6612  data_time: 0.0083  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:11:13 d2.utils.events]: [0m eta: 0:02:51  iter: 4739  total_loss: 0.472  loss_cls: 0.101  loss_box_reg: 0.179  loss_mask: 0.167  loss_rpn_cls: 0.003  loss_rpn_loc: 0.020  time: 0.6612  data_time: 0.0095  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:11:26 d2.utils.events]: [0m eta: 0:02:38  iter: 4759  total_loss: 0.453  loss_cls: 0.083  loss_box_reg: 0.189  loss_mask: 0.137  loss_rpn_cls: 0.005  loss_rpn_loc: 0.014  time: 0.6612  data_time: 0.0096  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:11:39 d2.utils.events]: [0m eta: 0:02:25  iter: 4779  total_loss: 0.478  loss_cls: 0.100  loss_box_reg: 0.200  loss_mask: 0.163  loss_rpn_cls: 0.003  loss_rpn_loc: 0.013  time: 0.6612  data_time: 0.0090  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:11:53 d2.utils.events]: [0m eta: 0:02:12  iter: 4799  total_loss: 0.472  loss_cls: 0.081  loss_box_reg: 0.198  loss_mask: 0.154  loss_rpn_cls: 0.004  loss_rpn_loc: 0.019  time: 0.6613  data_time: 0.0074  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:12:06 d2.utils.events]: [0m eta: 0:01:59  iter: 4819  total_loss: 0.402  loss_cls: 0.065  loss_box_reg: 0.177  loss_mask: 0.137  loss_rpn_cls: 0.004  loss_rpn_loc: 0.014  time: 0.6613  data_time: 0.0084  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:12:19 d2.utils.events]: [0m eta: 0:01:45  iter: 4839  total_loss: 0.426  loss_cls: 0.083  loss_box_reg: 0.177  loss_mask: 0.137  loss_rpn_cls: 0.005  loss_rpn_loc: 0.017  time: 0.6612  data_time: 0.0100  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:12:33 d2.utils.events]: [0m eta: 0:01:32  iter: 4859  total_loss: 0.424  loss_cls: 0.073  loss_box_reg: 0.165  loss_mask: 0.142  loss_rpn_cls: 0.002  loss_rpn_loc: 0.010  time: 0.6612  data_time: 0.0082  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:12:46 d2.utils.events]: [0m eta: 0:01:19  iter: 4879  total_loss: 0.420  loss_cls: 0.055  loss_box_reg: 0.158  loss_mask: 0.142  loss_rpn_cls: 0.003  loss_rpn_loc: 0.013  time: 0.6613  data_time: 0.0074  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:12:59 d2.utils.events]: [0m eta: 0:01:06  iter: 4899  total_loss: 0.436  loss_cls: 0.073  loss_box_reg: 0.177  loss_mask: 0.146  loss_rpn_cls: 0.002  loss_rpn_loc: 0.012  time: 0.6613  data_time: 0.0081  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:13:13 d2.utils.events]: [0m eta: 0:00:53  iter: 4919  total_loss: 0.479  loss_cls: 0.099  loss_box_reg: 0.191  loss_mask: 0.137  loss_rpn_cls: 0.008  loss_rpn_loc: 0.025  time: 0.6613  data_time: 0.0070  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:13:26 d2.utils.events]: [0m eta: 0:00:40  iter: 4939  total_loss: 0.429  loss_cls: 0.086  loss_box_reg: 0.170  loss_mask: 0.137  loss_rpn_cls: 0.004  loss_rpn_loc: 0.018  time: 0.6614  data_time: 0.0069  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:13:40 d2.utils.events]: [0m eta: 0:00:26  iter: 4959  total_loss: 0.435  loss_cls: 0.075  loss_box_reg: 0.191  loss_mask: 0.154  loss_rpn_cls: 0.004  loss_rpn_loc: 0.016  time: 0.6614  data_time: 0.0080  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:13:53 d2.utils.events]: [0m eta: 0:00:13  iter: 4979  total_loss: 0.464  loss_cls: 0.095  loss_box_reg: 0.172  loss_mask: 0.154  loss_rpn_cls: 0.009  loss_rpn_loc: 0.031  time: 0.6614  data_time: 0.0085  lr: 0.000250  max_mem: 4500M
Loading sequence 0002
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0010
Loading sequence 0013
Loading sequence 0014
Loading sequence 0016
Loading sequence 0018
0002
0006
0007
0008
0010
0013
0014
0016
0018
Loaded 2920 images!
[32m[03/21 13:15:10 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|    None    | 0            |    Car     | 8029         | Pedestrian | 3347         |
|            |              |            |              |            |              |
|   total    | 11376        |            |              |            |              |[0m
[32m[03/21 13:15:10 d2.data.common]: [0mSerializing 2920 elements to byte tensors and concatenating them all ...
[32m[03/21 13:15:11 d2.data.common]: [0mSerialized dataset takes 7.44 MiB
[5m[31mWARNING[0m [32m[03/21 13:15:11 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[03/21 13:15:11 d2.utils.events]: [0m eta: 0:00:00  iter: 4999  total_loss: 0.459  loss_cls: 0.072  loss_box_reg: 0.191  loss_mask: 0.170  loss_rpn_cls: 0.004  loss_rpn_loc: 0.015  time: 0.6615  data_time: 0.0082  lr: 0.000250  max_mem: 4500M
[32m[03/21 13:15:11 d2.engine.hooks]: [0mOverall training speed: 4997 iterations in 0:55:06 (0.6616 s / it)
[32m[03/21 13:15:11 d2.engine.hooks]: [0mTotal training time: 0:56:14 (0:01:08 on hooks)
Loading sequence 0002
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0010
Loading sequence 0013
Loading sequence 0014
Loading sequence 0016
Loading sequence 0018
0002
0006
0007
0008
0010
0013
0014
0016
0018
Loaded 2920 images!
[5m[31mWARNING[0m [32m[03/21 13:16:34 d2.evaluation.coco_evaluation]: [0mjson_file was not found in MetaDataCatalog for 'KITTI_MOTS_val'. Trying to convert it to COCO format ...
[32m[03/21 13:16:34 d2.data.datasets.coco]: [0mConverting annotations of dataset 'KITTI_MOTS_val' to COCO format ...)
Loading sequence 0002
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0010
Loading sequence 0013
Loading sequence 0014
Loading sequence 0016
Loading sequence 0018
0002
0006
0007
0008
0010
0013
0014
0016
0018
Loaded 2920 images!
[32m[03/21 13:17:32 d2.data.datasets.coco]: [0mConverting dataset dicts into COCO format
[32m[03/21 13:17:36 d2.data.datasets.coco]: [0mConversion finished, num images: 2920, num annotations: 11376
[32m[03/21 13:17:36 d2.data.datasets.coco]: [0mCaching COCO format annotations at './output/KITTI_MOTS_val_coco_format.json' ...
Loading sequence 0002
Loading sequence 0006
Loading sequence 0007
Loading sequence 0008
Loading sequence 0010
Loading sequence 0013
Loading sequence 0014
Loading sequence 0016
Loading sequence 0018
0002
0006
0007
0008
0010
0013
0014
0016
0018
Loaded 2920 images!
[32m[03/21 13:18:40 d2.data.common]: [0mSerializing 2920 elements to byte tensors and concatenating them all ...
[32m[03/21 13:18:40 d2.data.common]: [0mSerialized dataset takes 7.44 MiB
[32m[03/21 13:18:40 d2.evaluation.evaluator]: [0mStart inference on 2920 images
[32m[03/21 13:18:42 d2.evaluation.evaluator]: [0mInference done 11/2920. 0.1152 s / img. ETA=0:05:52
[32m[03/21 13:18:47 d2.evaluation.evaluator]: [0mInference done 53/2920. 0.1151 s / img. ETA=0:05:45
[32m[03/21 13:18:52 d2.evaluation.evaluator]: [0mInference done 95/2920. 0.1151 s / img. ETA=0:05:40
[32m[03/21 13:18:57 d2.evaluation.evaluator]: [0mInference done 137/2920. 0.1149 s / img. ETA=0:05:35
[32m[03/21 13:19:02 d2.evaluation.evaluator]: [0mInference done 179/2920. 0.1150 s / img. ETA=0:05:30
[32m[03/21 13:19:07 d2.evaluation.evaluator]: [0mInference done 219/2920. 0.1161 s / img. ETA=0:05:28
[32m[03/21 13:19:12 d2.evaluation.evaluator]: [0mInference done 262/2920. 0.1158 s / img. ETA=0:05:21
[32m[03/21 13:19:17 d2.evaluation.evaluator]: [0mInference done 304/2920. 0.1158 s / img. ETA=0:05:15
[32m[03/21 13:19:22 d2.evaluation.evaluator]: [0mInference done 346/2920. 0.1158 s / img. ETA=0:05:10
[32m[03/21 13:19:27 d2.evaluation.evaluator]: [0mInference done 389/2920. 0.1158 s / img. ETA=0:05:04
[32m[03/21 13:19:32 d2.evaluation.evaluator]: [0mInference done 431/2920. 0.1158 s / img. ETA=0:04:59
[32m[03/21 13:19:37 d2.evaluation.evaluator]: [0mInference done 473/2920. 0.1159 s / img. ETA=0:04:54
[32m[03/21 13:19:43 d2.evaluation.evaluator]: [0mInference done 515/2920. 0.1160 s / img. ETA=0:04:49
[32m[03/21 13:19:48 d2.evaluation.evaluator]: [0mInference done 557/2920. 0.1160 s / img. ETA=0:04:44
[32m[03/21 13:19:53 d2.evaluation.evaluator]: [0mInference done 599/2920. 0.1161 s / img. ETA=0:04:39
[32m[03/21 13:19:58 d2.evaluation.evaluator]: [0mInference done 641/2920. 0.1161 s / img. ETA=0:04:34
[32m[03/21 13:20:03 d2.evaluation.evaluator]: [0mInference done 683/2920. 0.1161 s / img. ETA=0:04:29
[32m[03/21 13:20:08 d2.evaluation.evaluator]: [0mInference done 724/2920. 0.1162 s / img. ETA=0:04:25
[32m[03/21 13:20:13 d2.evaluation.evaluator]: [0mInference done 765/2920. 0.1163 s / img. ETA=0:04:20
[32m[03/21 13:20:18 d2.evaluation.evaluator]: [0mInference done 806/2920. 0.1164 s / img. ETA=0:04:15
[32m[03/21 13:20:23 d2.evaluation.evaluator]: [0mInference done 847/2920. 0.1165 s / img. ETA=0:04:10
[32m[03/21 13:20:28 d2.evaluation.evaluator]: [0mInference done 888/2920. 0.1166 s / img. ETA=0:04:06
[32m[03/21 13:20:33 d2.evaluation.evaluator]: [0mInference done 929/2920. 0.1166 s / img. ETA=0:04:01
[32m[03/21 13:20:38 d2.evaluation.evaluator]: [0mInference done 970/2920. 0.1167 s / img. ETA=0:03:56
[32m[03/21 13:20:43 d2.evaluation.evaluator]: [0mInference done 1010/2920. 0.1170 s / img. ETA=0:03:52
[32m[03/21 13:20:48 d2.evaluation.evaluator]: [0mInference done 1051/2920. 0.1171 s / img. ETA=0:03:47
[32m[03/21 13:20:53 d2.evaluation.evaluator]: [0mInference done 1092/2920. 0.1171 s / img. ETA=0:03:42
[32m[03/21 13:20:59 d2.evaluation.evaluator]: [0mInference done 1133/2920. 0.1172 s / img. ETA=0:03:37
[32m[03/21 13:21:04 d2.evaluation.evaluator]: [0mInference done 1174/2920. 0.1173 s / img. ETA=0:03:32
[32m[03/21 13:21:09 d2.evaluation.evaluator]: [0mInference done 1215/2920. 0.1173 s / img. ETA=0:03:27
[32m[03/21 13:21:14 d2.evaluation.evaluator]: [0mInference done 1256/2920. 0.1174 s / img. ETA=0:03:22
[32m[03/21 13:21:19 d2.evaluation.evaluator]: [0mInference done 1297/2920. 0.1174 s / img. ETA=0:03:17
[32m[03/21 13:21:24 d2.evaluation.evaluator]: [0mInference done 1338/2920. 0.1175 s / img. ETA=0:03:12
[32m[03/21 13:21:29 d2.evaluation.evaluator]: [0mInference done 1379/2920. 0.1175 s / img. ETA=0:03:08
[32m[03/21 13:21:34 d2.evaluation.evaluator]: [0mInference done 1420/2920. 0.1175 s / img. ETA=0:03:03
[32m[03/21 13:21:39 d2.evaluation.evaluator]: [0mInference done 1462/2920. 0.1176 s / img. ETA=0:02:57
[32m[03/21 13:21:44 d2.evaluation.evaluator]: [0mInference done 1502/2920. 0.1176 s / img. ETA=0:02:53
[32m[03/21 13:21:49 d2.evaluation.evaluator]: [0mInference done 1542/2920. 0.1178 s / img. ETA=0:02:48
[32m[03/21 13:21:54 d2.evaluation.evaluator]: [0mInference done 1584/2920. 0.1178 s / img. ETA=0:02:43
[32m[03/21 13:21:59 d2.evaluation.evaluator]: [0mInference done 1625/2920. 0.1178 s / img. ETA=0:02:38
[32m[03/21 13:22:04 d2.evaluation.evaluator]: [0mInference done 1666/2920. 0.1178 s / img. ETA=0:02:33
[32m[03/21 13:22:09 d2.evaluation.evaluator]: [0mInference done 1708/2920. 0.1178 s / img. ETA=0:02:28
[32m[03/21 13:22:14 d2.evaluation.evaluator]: [0mInference done 1749/2920. 0.1179 s / img. ETA=0:02:23
[32m[03/21 13:22:20 d2.evaluation.evaluator]: [0mInference done 1791/2920. 0.1179 s / img. ETA=0:02:18
[32m[03/21 13:22:25 d2.evaluation.evaluator]: [0mInference done 1832/2920. 0.1179 s / img. ETA=0:02:13
[32m[03/21 13:22:30 d2.evaluation.evaluator]: [0mInference done 1874/2920. 0.1179 s / img. ETA=0:02:07
[32m[03/21 13:22:35 d2.evaluation.evaluator]: [0mInference done 1915/2920. 0.1180 s / img. ETA=0:02:02
[32m[03/21 13:22:40 d2.evaluation.evaluator]: [0mInference done 1954/2920. 0.1181 s / img. ETA=0:01:58
[32m[03/21 13:22:45 d2.evaluation.evaluator]: [0mInference done 1994/2920. 0.1182 s / img. ETA=0:01:53
[32m[03/21 13:22:50 d2.evaluation.evaluator]: [0mInference done 2034/2920. 0.1182 s / img. ETA=0:01:48
[32m[03/21 13:22:55 d2.evaluation.evaluator]: [0mInference done 2075/2920. 0.1182 s / img. ETA=0:01:43
[32m[03/21 13:23:00 d2.evaluation.evaluator]: [0mInference done 2115/2920. 0.1182 s / img. ETA=0:01:38
[32m[03/21 13:23:05 d2.evaluation.evaluator]: [0mInference done 2155/2920. 0.1182 s / img. ETA=0:01:33
[32m[03/21 13:23:10 d2.evaluation.evaluator]: [0mInference done 2195/2920. 0.1183 s / img. ETA=0:01:29
[32m[03/21 13:23:15 d2.evaluation.evaluator]: [0mInference done 2236/2920. 0.1183 s / img. ETA=0:01:23
[32m[03/21 13:23:20 d2.evaluation.evaluator]: [0mInference done 2276/2920. 0.1183 s / img. ETA=0:01:19
[32m[03/21 13:23:25 d2.evaluation.evaluator]: [0mInference done 2317/2920. 0.1183 s / img. ETA=0:01:14
[32m[03/21 13:23:30 d2.evaluation.evaluator]: [0mInference done 2357/2920. 0.1184 s / img. ETA=0:01:09
[32m[03/21 13:23:35 d2.evaluation.evaluator]: [0mInference done 2397/2920. 0.1184 s / img. ETA=0:01:04
[32m[03/21 13:23:41 d2.evaluation.evaluator]: [0mInference done 2434/2920. 0.1185 s / img. ETA=0:00:59
[32m[03/21 13:23:46 d2.evaluation.evaluator]: [0mInference done 2473/2920. 0.1186 s / img. ETA=0:00:55
[32m[03/21 13:23:51 d2.evaluation.evaluator]: [0mInference done 2512/2920. 0.1186 s / img. ETA=0:00:50
[32m[03/21 13:23:56 d2.evaluation.evaluator]: [0mInference done 2550/2920. 0.1186 s / img. ETA=0:00:45
[32m[03/21 13:24:01 d2.evaluation.evaluator]: [0mInference done 2588/2920. 0.1187 s / img. ETA=0:00:41
[32m[03/21 13:24:06 d2.evaluation.evaluator]: [0mInference done 2629/2920. 0.1187 s / img. ETA=0:00:36
[32m[03/21 13:24:11 d2.evaluation.evaluator]: [0mInference done 2670/2920. 0.1187 s / img. ETA=0:00:30
[32m[03/21 13:24:16 d2.evaluation.evaluator]: [0mInference done 2711/2920. 0.1187 s / img. ETA=0:00:25
[32m[03/21 13:24:21 d2.evaluation.evaluator]: [0mInference done 2751/2920. 0.1188 s / img. ETA=0:00:20
[32m[03/21 13:24:26 d2.evaluation.evaluator]: [0mInference done 2791/2920. 0.1188 s / img. ETA=0:00:15
[32m[03/21 13:24:31 d2.evaluation.evaluator]: [0mInference done 2831/2920. 0.1188 s / img. ETA=0:00:11
[32m[03/21 13:24:36 d2.evaluation.evaluator]: [0mInference done 2871/2920. 0.1188 s / img. ETA=0:00:06
[32m[03/21 13:24:41 d2.evaluation.evaluator]: [0mInference done 2912/2920. 0.1189 s / img. ETA=0:00:00
[32m[03/21 13:24:42 d2.evaluation.evaluator]: [0mTotal inference time: 0:06:01.253391 (0.123929 s / img per device, on 1 devices)
[32m[03/21 13:24:42 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:05:46 (0.118849 s / img per device, on 1 devices)
[32m[03/21 13:24:43 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[03/21 13:24:43 d2.evaluation.coco_evaluation]: [0mSaving results to ./output/coco_instances_results.json
[32m[03/21 13:24:43 d2.evaluation.coco_evaluation]: [0mEvaluating predictions ...
Loading and preparing results...
DONE (t=0.02s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=4.24s).
Accumulating evaluation results...
DONE (t=0.53s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.638
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.834
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.742
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.452
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.753
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.778
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.212
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.697
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.704
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.541
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.806
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.935
[32m[03/21 13:24:48 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 63.849 | 83.379 | 74.173 | 45.238 | 75.282 | 77.801 |
[32m[03/21 13:24:48 d2.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category   | AP   | category   | AP     | category   | AP     |
|:-----------|:-----|:-----------|:-------|:-----------|:-------|
| None       | nan  | Car        | 71.805 | Pedestrian | 55.893 |
Loading and preparing results...
DONE (t=0.17s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *segm*
DONE (t=5.03s).
Accumulating evaluation results...
DONE (t=0.53s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.566
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.810
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.645
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.360
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.687
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.818
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.188
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.627
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.632
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.463
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.736
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.852
[32m[03/21 13:24:54 d2.evaluation.coco_evaluation]: [0mEvaluation results for segm: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 56.599 | 81.008 | 64.546 | 36.041 | 68.705 | 81.839 |
[32m[03/21 13:24:54 d2.evaluation.coco_evaluation]: [0mPer-category segm AP: 
| category   | AP   | category   | AP     | category   | AP     |
|:-----------|:-----|:-----------|:-------|:-----------|:-------|
| None       | nan  | Car        | 70.383 | Pedestrian | 42.815 |
